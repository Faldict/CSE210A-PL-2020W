make: `while' is up to date.
1..10001
ok 1 af1b1a985769
ok 2 82ece3f3b080
ok 3 414f2ac2a958
ok 4 3e8c96177f1b
ok 5 235e75f6a3c0
ok 6 a64a9f878243
ok 7 ee2aa4e2bd7e
ok 8 482db0d63c0e
ok 9 df6dcbcae19d
ok 10 3b24f91a69fc
ok 11 51512e991595
ok 12 5e56711192c5
ok 13 b791c4cad9e2
ok 14 6b963e0517e9
ok 15 08b3a38029f3
ok 16 84a9de20b109
ok 17 8c748dc38c94
ok 18 e1239326f275
ok 19 790727dae8ff
ok 20 bb3d09fb1435
ok 21 d875535b63ee
ok 22 72a3512a71ef
ok 23 2634b7c2d9f6
ok 24 86ebfe21dbba
ok 25 fc16bb8da031
ok 26 8d4103623105
ok 27 3cb28cfd32b5
ok 28 45b68c2e9e3b
ok 29 8ff53e15b423
ok 30 732f58ef426e
ok 31 fbfdcfb7779f
ok 32 d28e91074622
ok 33 d8eef655bea0
ok 34 30c33604624b
ok 35 8cdaf7369317
ok 36 5de26ed9864d
ok 37 b4b0c84bac1c
ok 38 3074683ab9cd
ok 39 7717d57ee481
ok 40 6445891c5a00
ok 41 5ba5179df573
ok 42 a9d1ffcdb872
ok 43 3dfbfd052370
ok 44 6c09729ba518
ok 45 4588887466be
ok 46 29c73ab50119
ok 47 e18bf6ae2ea8
ok 48 548f1a5e8ed8
ok 49 bc521df0d958
ok 50 1100cee1e2d7
ok 51 10117aa4d50a
ok 52 4f6b964d8f2f
ok 53 a571415c92e1
ok 54 d62a6e187a52
ok 55 af34ea81931c
ok 56 d091be4e2a4a
ok 57 928498098e0b
ok 58 33e34dcaacea
ok 59 f496d19ec686
ok 60 a25df05e1582
ok 61 6405cf70bb4d
ok 62 1680aa930e04
ok 63 1baa963b0724
ok 64 12e9e061328d
ok 65 c330ed77fa96
ok 66 3feeed8ec195
ok 67 66ace63280ed
ok 68 cb653a5ad140
ok 69 0b260c12a877
ok 70 ba54934d2511
ok 71 65cb68018f2c
ok 72 8b490cf31e9c
ok 73 7d8388c4d6cc
ok 74 a23f42c0bfbd
ok 75 5f71e7e8470e
ok 76 60daa72b509c
ok 77 72a82494b859
ok 78 0ff7203c1956
ok 79 80a1cb7bedf4
ok 80 ddc23eed49e9
ok 81 937a98ffc0e5
ok 82 92229d497c57
ok 83 6be651311c34
ok 84 5a93e17f1fff
ok 85 9a0ba66116d2
ok 86 06e07bec1dcc
ok 87 e168e072e6d9
ok 88 0de072744152
ok 89 e459c9719e9d
ok 90 505160557dac
ok 91 480dd637d6f9
ok 92 b1b59b8a578f
ok 93 a6997ccc896e
ok 94 c9caeffa4944
ok 95 dadca25c4d40
ok 96 b7cfe0085f61
ok 97 b2b75912d971
ok 98 6377b779dcd7
ok 99 294e87a4175e
ok 100 3bd9601433bd
ok 101 bbf9597a4811
ok 102 2e5bf0279faf
ok 103 dae52059b7bd
ok 104 068aa9f715c1
ok 105 727892ed650b
ok 106 6f7670f37619
ok 107 02d33854c7bc
ok 108 2fd0bd695d97
ok 109 3bff5665779d
ok 110 6cc3b52e7784
ok 111 1addb42f2310
ok 112 8a7706881dcb
ok 113 50dcd2ac3e76
ok 114 84d187799617
ok 115 95b942544030
ok 116 5dd075b79e4b
ok 117 c04fdcc7216b
ok 118 c3516322e641
ok 119 096c22ecf928
ok 120 d33f42e19471
ok 121 c832f030a31e
ok 122 ae4481f3ac97
ok 123 76de1f14d774
ok 124 d12ebf15af2b
ok 125 5ed54764125c
ok 126 34cfd9b44e61
ok 127 63e4cf6d1f92
ok 128 2a1c6ddf8717
ok 129 6ee15c6f53fc
ok 130 94bb6b478de3
ok 131 a55d4f9249f1
ok 132 c9c1ce6918a7
ok 133 6902e8adaa9b
ok 134 a0268a32a1b0
ok 135 d253a63bc7f0
ok 136 eb6c6cc8e00b
ok 137 3ce0b25b003e
ok 138 6f47154d2123
ok 139 31129b37314f
ok 140 9a0bf7c514ab
ok 141 99f6f173947b
ok 142 d53cf9d3ffde
ok 143 38b8287d080c
ok 144 655b647ef829
ok 145 4b86ea29324a
ok 146 fcd2afe4b628
ok 147 10e0838b940a
ok 148 79d83a0e2fea
ok 149 034571bcb174
ok 150 908dd3fabd68
ok 151 921181f5d1dc
ok 152 4480a55f6b96
ok 153 e578cf6c2d99
ok 154 0241fc2f7a83
ok 155 ec9781da56c5
ok 156 9682f5687ff6
ok 157 bacf9a3a85e0
ok 158 79981a361d30
ok 159 4619cd54d034
ok 160 9133ebea55b4
ok 161 519ec7413d34
ok 162 a6035807b801
ok 163 f94ae2753ad6
ok 164 18e11ba7d5a5
not ok 165 126698d3f9d3
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen1.bats, line 670)
#   `skip     ' '{}'' failed
# if (2     -     z  =  3*    l    ∨     false)  then if ((4    +   4)  -   -1 =  z     +   1   ∧     true)      then skip   else   
# 
# y     :=  3     -     1 else  while -2    +   y    =  y-  z ∧ y   +    4  < W  +2 do 
# 
# 
#  
# z :=    x* x  ; 
# 
#  if (¬(y -PA     =   J3     *    2))  then 
# if (3     +3 <y     -     z) then 
# 
#  
# y  :=   4*     1    else 
# 
# 
# x    :=    z     +    -3    else 
# skip      = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 77 (Just (Tokens ('=' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (2     -     z  =  3*    l    \8744     false)  then if ((4    +   4)  -   -1 =  z     +   1   \8743     true)      then skip   else   \n\ny     :=  3     -     1 else  while -2    +   y    =  y-  z \8743 y   +    4  < W  +2 do \n\n\n \nz :=    x* x  ; \n\n if (\172(y -PA     =   J3     *    2))  then \nif (3     +3 <y     -     z) then \n\n \ny  :=   4*     1    else \n\n\nx    :=    z     +    -3    else \nskip     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 166 531032fbb538
ok 167 3e15c9f986eb
ok 168 0066000baa1a
ok 169 3ec542722445
ok 170 e0022dee421a
ok 171 ed5b75f58375
ok 172 ed9593d578f2
ok 173 bd8fb7028d1b
ok 174 f6ec71fa36fe
ok 175 8445fee371af
ok 176 6f4fc4f7b723
ok 177 585d1d805928
ok 178 db2013f30258
ok 179 9b27c659ca19
ok 180 f7a5819d0753
ok 181 a5ff21fba0d7
ok 182 3968d9cf5d05
ok 183 9e9af65d5c03
ok 184 c7e84940d8c5
ok 185 2f3cc936e9ee
ok 186 7862c0f69eb7
ok 187 c7d3d8db4e88
ok 188 17eba6a9975e
ok 189 26ed92e6fb4e
ok 190 41056ea3465b
ok 191 9a2b3e0b5d9e
ok 192 d1515c61c5d7
ok 193 b04645f754ab
ok 194 19d6b79642bd
ok 195 9a4f335d927d
ok 196 a2ace8ba765e
ok 197 831c2ea3a164
ok 198 e60788df4e13
ok 199 664dc98dbaff
ok 200 4dc61574883f
ok 201 4ffc80d7c88f
ok 202 7ed0ae7e2853
ok 203 44adc0c06679
ok 204 026101ca0ab7
ok 205 eb260e920783
ok 206 5896e6dbd56e
ok 207 c35307ab7b5e
ok 208 09226ace4447
ok 209 a5b191fc2dfd
ok 210 92f63847a987
ok 211 cbc433b49d2a
ok 212 a51535f1f45b
ok 213 91d58590e447
ok 214 e8b72c7b1fa0
ok 215 f5804736f1c0
ok 216 ee402856b696
ok 217 59dd6ea57e3a
ok 218 030b8a5b53cf
ok 219 dfc9aaa59f41
ok 220 1df038fa4ebb
not ok 221 f127176e6a6c
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen10.bats, line 193)
#   `while y    +     4     =    (fV   +x)     -    I    ∨ 2    -   x  <y     -   y    do if (true∧    false)   then   skip     else   skip     ' '{}'' failed
# if (false∧3 * H    <     2  +  y)      then x :=  -1  -     3  else  skip  ;
# while y    +     4     =    (fV   +x)     -    I    ∨ 2    -   x  <y     -   y    do if (true∧    false)   then   skip     else   skip      = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 119 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "if (false\8743\&3 * H    <     2  +  y)      then x :=  -1  -     3  else  skip  ;\nwhile y    +     4     =    (fV   +x)     -    I    \8744 2    -   x  <y     -   y    do if (true\8743    false)   then   skip     else   skip     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 222 8547788f221d
ok 223 1193f59364b0
ok 224 e77e5a7af806
ok 225 8199555c04d9
ok 226 97e11999c983
ok 227 c1b71d4ee4bc
ok 228 0effcf74e64f
ok 229 bc0eafed4ebf
ok 230 38070aa88426
ok 231 3809fc579920
ok 232 1db015cfc4b8
ok 233 1cd5b4d07a1a
ok 234 0d6a8a3bbb4e
ok 235 8a6857536b6b
ok 236 cd9621ef08f9
ok 237 7188e36eaaf9
ok 238 9baf72d53ccf
ok 239 ef948d42a5db
ok 240 1b7b0b407bfb
ok 241 2df3717e2e03
ok 242 365efc977de4
ok 243 784e3dbe4074
ok 244 9b073048c6c0
ok 245 3e2cd8f8c228
ok 246 34d8679e759c
ok 247 d438edeb2733
ok 248 0c89d239df5c
ok 249 758152ef2158
ok 250 2d4b999f2b43
ok 251 7773e9e9c0d4
ok 252 22ba7cd68380
ok 253 4c4c017a913e
ok 254 90fe1bf33210
ok 255 4718a391d3d7
ok 256 7be5495e5c16
ok 257 3e959d97a7fb
ok 258 7f00ef148e71
ok 259 5f79774e99bd
ok 260 95ff25c09439
ok 261 ee6a8df87b9a
ok 262 bfe593d99ab6
ok 263 e6e0625e4c00
ok 264 281230207c94
ok 265 1af4650df03e
ok 266 29d9a81d0f9f
ok 267 c8d846d52d9e
ok 268 972764b4b053
ok 269 81c649e9cd82
ok 270 a10a1d479a5f
ok 271 012074d1a172
ok 272 c87933085a80
ok 273 82c4759e6812
ok 274 4f5fdacdbaad
ok 275 b2cff18b2c63
ok 276 83779621349a
ok 277 66ba2837376f
ok 278 cd2079ae8cf1
ok 279 64ffc82b8f26
ok 280 613384eb18cb
ok 281 bfb9de5596b6
ok 282 78adc222c21d
ok 283 fb3689533917
ok 284 41a1de729975
ok 285 bc8f61458bf6
ok 286 bc1062038910
ok 287 04a5198c4a1a
ok 288 8b5aa5a99ea9
ok 289 8efa64ebeb7e
ok 290 80cbc8da07d8
ok 291 9eb9960bbf1e
ok 292 fad2704fbc82
ok 293 b9ea843e988c
ok 294 df54add69f8c
ok 295 da35eb1f3a45
ok 296 f83bd285206b
ok 297 10e63880d53d
ok 298 401d30cfc21d
ok 299 680487df5453
ok 300 26b7d2d0240e
ok 301 b2ed8a085172
ok 302 69aceef5fadf
ok 303 8eeae0be92fc
ok 304 d321b5502cee
ok 305 ba5f2e825dd8
ok 306 41b06591ce8b
ok 307 210ab38749fd
ok 308 45688f870900
ok 309 fd782162584e
ok 310 542f8e29c438
ok 311 9d3dc30247fb
ok 312 bcd2eb59c4f8
ok 313 394c6d6cf0df
ok 314 db360dc0c831
ok 315 10c42e868a66
not ok 316 461c6406b193
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen11.bats, line 158)
#   `skip  else  skip  ' '{}'' failed
# while 3  -  z   <   (1  -    -1)  -   3∨ 1  -     x  <  -1   +     1    do skip ;
#  
# 
# 
# if (-4 + -3     =   4  +y)     then 
# skip  else  skip   = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 34 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "while 3  -  z   <   (1  -    -1)  -   3\8744 1  -     x  <  -1   +     1    do skip ;\n \n\n\nif (-4 + -3     =   4  +y)     then \nskip  else  skip  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 317 345dfcf76af1
ok 318 c9a3529af08c
ok 319 329ae8f7187b
ok 320 3bac6ca1d5c1
ok 321 af09b4659569
ok 322 48dca1fb11f4
ok 323 70dba898cfb4
ok 324 dfc393bf1b95
ok 325 1dd1d3300f89
ok 326 4339da46df68
ok 327 e4def28da9cc
ok 328 14bfb21aa78b
ok 329 3b9619bc98dd
ok 330 5375042a1e10
ok 331 5629f5189a34
ok 332 dca78a50c4e7
ok 333 8c0363f673f6
ok 334 e50773424a15
ok 335 496a72be1b44
ok 336 5af1a80abc4f
ok 337 47cca9094a15
ok 338 7351ed3f1506
ok 339 d2f0fb6ba25d
ok 340 7f8c5c7a05df
ok 341 4d31655e521b
ok 342 c67f38166c02
ok 343 7af35fcb6ea0
ok 344 d36be3a6cd7b
ok 345 44e26a1838b4
ok 346 f4c1d112486f
ok 347 a9debc9b8150
ok 348 9a4dfea9586c
ok 349 897703d40dcf
ok 350 d790f2c49283
ok 351 a790bba32f20
ok 352 b4586b434207
ok 353 77a0a6f91f18
ok 354 640e0b8f66f4
ok 355 bcca7decc271
ok 356 4798a5813bd5
ok 357 8d5143fb0a6f
ok 358 19d8daa5bbbd
ok 359 96f26c2ebea7
ok 360 b684e185d67f
ok 361 3242ef53fb2d
ok 362 b86ff9965504
ok 363 9a83d4279b32
ok 364 ef373361c3e6
ok 365 a1af81977bb9
ok 366 b5cb1ac385a2
ok 367 0ae723a31a63
ok 368 3cecee732868
ok 369 39484a4d3c75
ok 370 b8a517f8bb60
ok 371 23c3b5e66f66
ok 372 132b79c9da44
ok 373 b22c96c50ab2
ok 374 743bd819a7be
ok 375 4ff5f7695f38
ok 376 c322f1b9c11f
ok 377 c3f3c9227dc1
ok 378 4b59c4c88619
ok 379 5f287df8207f
ok 380 2d6b29c6e906
ok 381 12a873c4983d
ok 382 07216eb1a12b
ok 383 497dabebf8ef
ok 384 ba854f857b48
ok 385 ac0a7ebeb9b8
ok 386 cd6561ba9c31
ok 387 a53eee75f009
ok 388 82e17cbf9f68
ok 389 93aca78d0c8e
ok 390 ef0e667d6da2
ok 391 2d2f6574d6ac
ok 392 bd094f34c7f3
ok 393 f2205b201a0e
ok 394 d00b84e08c09
ok 395 79f2e54c1ba8
ok 396 8d31f9344a99
ok 397 c6d12484cca8
ok 398 0c0decb503bd
ok 399 e5de63cf0750
ok 400 5cfff7ca62a0
ok 401 77af50cb1846
ok 402 ef3876c8f7af
ok 403 0ef340fe480f
ok 404 876dba2ae2d0
ok 405 4380464d5236
ok 406 2a119d758b97
ok 407 c88d50ec292c
ok 408 f74819fd23de
ok 409 ded194ac0210
ok 410 966c952c5eb4
ok 411 17c4c529b508
ok 412 c96d80420a56
ok 413 0544310d3082
ok 414 e79c58db0886
ok 415 ebeb6fd148d7
ok 416 b1655eb3b4d8
ok 417 23d63b6661a5
ok 418 f4e3233828d4
ok 419 8dc985c0324c
ok 420 fd2e6324821a
ok 421 ccbdb0d4b578
ok 422 62d7843fd6f8
ok 423 a444b401738f
ok 424 a9fac614386c
ok 425 fb7bd6475ff9
ok 426 8be50ea2ddff
ok 427 b1d6eff04912
ok 428 1ea47ea1ada0
ok 429 d87b102c515a
ok 430 ba92a4d8c78d
ok 431 3c1ad9661926
ok 432 8483d9f0110a
ok 433 95784704a6ab
ok 434 af8b7b266507
ok 435 f2c5eea6e2be
ok 436 261cfaeeee8e
ok 437 bb23adfd86f7
ok 438 88e8fbecd8c8
ok 439 cb0dd29efd3a
not ok 440 7e9a7d9eb822
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen12.bats, line 405)
#   `x     :=  z*y   ' '{x → 0}'' failed
# while af     -     -2   =     x - 0  ∨  -2    + 3     =  0     * y  do 
# 
# if (y  -  z   <   -4+ -2  ∧   z   - x   <y  *    A)     then   
#  skip    else  skip   ;
# 
# 
# 
# 
# if (true   ∧ y     -     y     =  (z     +     4) *-4)   then  
# 
# 
#  if (z   -     y     <  Yv    +    x   ∧false)   then 
# skip     else 
#  
#  while false∧y +   -4     <x  *     z      do 
# vW:=   y+   x else     
# x     :=  z*y    = {x → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 215 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while af     -     -2   =     x - 0  \8744  -2    + 3     =  0     * y  do \n\nif (y  -  z   <   -4+ -2  \8743   z   - x   <y  *    A)     then   \n skip    else  skip   ;\n\n\n\n\nif (true   \8743 y     -     y     =  (z     +     4) *-4)   then  \n\n\n if (z   -     y     <  Yv    +    x   \8743false)   then \nskip     else \n \n while false\8743y +   -4     <x  *     z      do \nvW:=   y+   x else     \nx     :=  z*y   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 441 cdcb59ee9997
ok 442 6d22c0ed72e7
ok 443 85558b3e65e8
ok 444 77060a1b48b7
ok 445 5596236ae120
ok 446 8176b974cd6a
ok 447 b5e55383e276
ok 448 932fb22ab538
ok 449 4e950317bbeb
ok 450 8fb6fa42c3c9
ok 451 428511546fca
ok 452 ecd26c22ed29
ok 453 bfa5e2169a1a
ok 454 bda946b2cfde
ok 455 b98a9448d120
ok 456 a496b179e94a
ok 457 7e5be68b1319
ok 458 987867fb5e25
ok 459 154d4b111032
not ok 460 08136be057bd
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen12.bats, line 583)
#   `x     :=  -3    +0 ' '{}'' failed
# while false    ∧    z   <    (y+ z)*   2 do  while (¬false)    do  skip    ;
#  while 4     <   y     *    x    ∨false      do 
# 
# 
# 
# x     :=  -3    +0  = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 35 (Just (Tokens ('*' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "while false    \8743    z   <    (y+ z)*   2 do  while (\172false)    do  skip    ;\n while 4     <   y     *    x    \8744false      do \n\n\n\nx     :=  -3    +0 \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 461 cd2565865646
ok 462 033132ab2074
ok 463 53a3bf7247a4
ok 464 bb272009aa92
ok 465 590979e9129e
ok 466 f5f6537865df
ok 467 d755a6d2d0e2
ok 468 1629c2ec5c49
ok 469 5553daf06c31
not ok 470 c6751ccd3148
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen12.bats, line 690)
#   `y   :=y   -    -3   ' '{y → 3}'' failed
# if (true   ∧1 +4 <(-3   +     z)  -    D3)      then  
#   skip else  
#  skip   ;
# 
# 
# if (x     *     0<  -2 -   -3∧   false) then    
# x     :=   -4   +   -1    else  
# 
#  
# y   :=y   -    -3    = {y → 3}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 34 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (true   \8743\&1 +4 <(-3   +     z)  -    D3)      then  \n  skip else  \n skip   ;\n\n\nif (x     *     0<  -2 -   -3\8743   false) then    \nx     :=   -4   +   -1    else  \n\n \ny   :=y   -    -3   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 471 af793008cc8c
ok 472 800dec62b381
ok 473 13e6d1c31aad
ok 474 fb62b8dd8d32
ok 475 17c9b040813d
ok 476 7aecb5629e1c
ok 477 c7042cd0f884
ok 478 f41c13f949ba
ok 479 0c00bb4051b1
ok 480 fe2d15f8ac40
ok 481 4a9d65576a5b
ok 482 150596649564
ok 483 4d6639813b62
ok 484 6f745476cf26
not ok 485 698f2b6815f2
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen12.bats, line 842)
#   `E    :=  1*3    ' '{B4 → 0, E → 3}'' failed
# if (-4  + 4     <     z  +    -1     ∧    y  +     y <     (x     -  V4)  *-1)    then 
#  
# 
# NB :=  z      else 
#  B4:= z  -   y   ;  
# E    :=  1*3     = {B4 → 0, E → 3}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 74 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (-4  + 4     <     z  +    -1     \8743    y  +     y <     (x     -  V4)  *-1)    then \n \n\nNB :=  z      else \n B4:= z  -   y   ;  \nE    :=  1*3    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 486 2bf4c2034d2a
ok 487 48ec0ee9c9c5
ok 488 5dc43225e61e
ok 489 adf321877a89
ok 490 2a23d93f5164
ok 491 702304d7d73c
ok 492 a15ab07d499f
ok 493 019daa930e40
ok 494 416d03077a50
ok 495 d48850a06766
ok 496 6507b7e296eb
ok 497 7f1b7d080d33
ok 498 e2281c9944f9
ok 499 973f9864b546
ok 500 c4fdbcb29955
ok 501 c0bc578a096c
ok 502 84d1825efd67
ok 503 e1c3464fd627
ok 504 0b05e0228e0e
ok 505 bf58643568b9
ok 506 e81bbfbe82e6
ok 507 3b6ce8ca961a
ok 508 f83e63b2c9cc
ok 509 d7019929891d
ok 510 aff7d9a50199
ok 511 b540523144f1
ok 512 e562fa8135ef
not ok 513 c7915b227217
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen13.bats, line 101)
#   `if (z     +     -4     < z   *   4∨     2  +   0  <-1     +  z)    then    while j   -     z    =-1  -  B5    ∨     false do skip    else y  :=  Y  *   z     ' '{y → 0}'' failed
# if (false∧p   *   -3    =     1  -    h4) then  if (l  *x   <     x  ∨ (1   +    To)-  x    =   0  -  q) then 
# 
# 
# y   :=     z     *    x      else skip else 
# 
# 
#  y   :=2   *     l;
# 
# if (z     +     -4     < z   *   4∨     2  +   0  <-1     +  z)    then    while j   -     z    =-1  -  B5    ∨     false do skip    else y  :=  Y  *   z      = {y → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 84 (Just (Tokens ('-' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (false\8743p   *   -3    =     1  -    h4) then  if (l  *x   <     x  \8744 (1   +    To)-  x    =   0  -  q) then \n\n\ny   :=     z     *    x      else skip else \n\n\n y   :=2   *     l;\n\nif (z     +     -4     < z   *   4\8744     2  +   0  <-1     +  z)    then    while j   -     z    =-1  -  B5    \8744     false do skip    else y  :=  Y  *   z     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 514 058087009566
ok 515 27e60a64af66
ok 516 05ce82aa7611
ok 517 9cb73ba6bdf5
ok 518 46f250de0a71
ok 519 3863535f9eb6
ok 520 68820edb7c3b
ok 521 b1b668afe8e6
ok 522 7db745144237
ok 523 db4146684a8c
ok 524 86716eea691b
ok 525 bc9bf4bda31a
ok 526 0fb61cdf0fb6
ok 527 d6b402b694c4
ok 528 bfd156378a66
ok 529 d361b22c8c07
ok 530 bd1a60ae3ec8
ok 531 60350379e999
ok 532 5b688a0ff698
ok 533 cb19dbad6aa1
ok 534 0ae6695a1e1b
ok 535 568787257842
ok 536 d0ce0fc93a16
ok 537 ffe322ecaf0e
ok 538 3b656fa3e189
ok 539 d0e56223b6a9
ok 540 109b233abe60
ok 541 7e59860065b1
ok 542 b30316e9e529
ok 543 500f8e04ab7b
ok 544 2e54846e9bfb
ok 545 cbe90f2af49e
ok 546 b7a8e821587c
ok 547 2befbd423ccc
not ok 548 db2c4af34f82
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen13.bats, line 498)
#   `while false  ∨   x    *1     <  z    *     0  do skip' '{}'' failed
# if (¬(-2    * -4     =     -1-     z))  then  
# 
#  
# if (0    -4 = (x     -    -3)     -x  ∨ z <    -1 *  1    ∧ 3     +     0  <     -1    -   y)      then 
# 
#  
# if (y * x   <2   ∨  x*   1   < z   *  -1)   then 
# x    :=   W9    -  j2    else skip      else 
# skip    else 
#  
# 
# if (P     +  3 =   -4  -3    ∧    w  +  z    = -3 *  -3)     then  
# 
# skip else 
#   
#  skip    ;
#  
# 
# while false  ∨   x    *1     <  z    *     0  do skip = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 84 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172(-2    * -4     =     -1-     z))  then  \n\n \nif (0    -4 = (x     -    -3)     -x  \8744 z <    -1 *  1    \8743 3     +     0  <     -1    -   y)      then \n\n \nif (y * x   <2   \8744  x*   1   < z   *  -1)   then \nx    :=   W9    -  j2    else skip      else \nskip    else \n \n\nif (P     +  3 =   -4  -3    \8743    w  +  z    = -3 *  -3)     then  \n\nskip else \n  \n skip    ;\n \n\nwhile false  \8744   x    *1     <  z    *     0  do skip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 549 cca16b671a82
ok 550 9a1c7e210910
ok 551 f26a629ea924
ok 552 ade4b5b96a1a
ok 553 ab5664ade79b
ok 554 b167de8a6e90
ok 555 fe6c790404cf
ok 556 c1a9bd9e274a
ok 557 b2bd1f3938e6
ok 558 fbf225c1bffb
ok 559 042c05b2da21
ok 560 3980d009c77c
ok 561 0da0abbec19b
ok 562 43788e8e1be3
ok 563 5c2d32230fe1
ok 564 bca940c00f99
ok 565 09b46dfd645b
ok 566 6331d8eb09c7
ok 567 1a1c350cc782
ok 568 d1cb431db515
ok 569 69303b3b8b89
ok 570 006203091d01
ok 571 4a21dd84f420
ok 572 c9fbf2c21000
ok 573 114ce199ae3e
ok 574 f6e3fc628069
ok 575 2d7b312c3185
ok 576 b3be11de8305
ok 577 d52e4b5a759c
ok 578 29dbfbe1fc50
ok 579 5c9a3d1c071c
ok 580 e03f6f4f29ad
ok 581 c9580a39ebad
ok 582 683c1f89b584
ok 583 4a3e5bb13748
ok 584 347c7278a3d9
ok 585 4ad1a22ef442
ok 586 a72b9310a7f6
ok 587 4216f8527911
ok 588 fe56574e2df4
ok 589 a8d8d94a3822
ok 590 01de2dd64979
ok 591 f5b719575755
ok 592 ebb4a72be9b6
ok 593 ee56f6dd6155
ok 594 ab2a638223ce
ok 595 75b13141825e
ok 596 3fe1c1fe288f
ok 597 1e115b684b97
ok 598 5ff24ecc4b4e
ok 599 cf55cbc1b4f4
ok 600 68c0e1890845
ok 601 e4e8ffe22b58
ok 602 01bf04238fbc
ok 603 e4672a1efa9a
not ok 604 2123f579d21e
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen14.bats, line 31)
#   `skip    else   x :=    T    -1    ' '{x → -1}'' failed
# if (B   = (2     + -4)    * x     ∧  -3   --1    <    -1)     then if (y-y <    4   *     x∧   x  <-3 *   -4)     then 
#  
# y   :=   y     *    1 else 
# skip else 
# 
# skip  ;
# 
# 
#   if (false   ∨N *    x  =     3  -     A)    then  
# 
#  
# skip    else   x :=    T    -1     = {x → -1}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 26 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (B   = (2     + -4)    * x     \8743  -3   --1    <    -1)     then if (y-y <    4   *     x\8743   x  <-3 *   -4)     then \n \ny   :=   y     *    1 else \nskip else \n\nskip  ;\n\n\n  if (false   \8744N *    x  =     3  -     A)    then  \n\n \nskip    else   x :=    T    -1    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 605 5f2fa904e0fc
ok 606 cd698219cde8
ok 607 4581876c3e88
ok 608 cbbcf6a61542
ok 609 8d391f1b027b
ok 610 8014884d6456
ok 611 b91a539daafc
ok 612 2d56f200217f
ok 613 aa8fe4a181ff
ok 614 aac3902ad452
ok 615 9f211f68a158
ok 616 a1e4685115d8
ok 617 29c5ab900840
ok 618 91281bdd63d4
ok 619 5f11217afbf4
ok 620 c30d875447d7
ok 621 991f1cfc5166
ok 622 ac62358dac60
ok 623 01b46e91d8f1
ok 624 5e595acbb2ec
ok 625 854894ffc6b2
ok 626 bf2dd3925434
ok 627 78825400391e
ok 628 785675736430
ok 629 c5d828a1394c
ok 630 c178e45e2390
ok 631 9d6e56cf9b04
ok 632 74f365163e5b
ok 633 cd16e9d0c299
ok 634 88609b0ac38e
ok 635 0f20778dc445
ok 636 9762de4240d3
ok 637 f723ce68b123
ok 638 2b28ef882789
ok 639 44f5b9c459c7
ok 640 e2564b464919
ok 641 0a9553b4f34a
ok 642 bf5a5f9efd09
ok 643 b5809c5a6180
ok 644 266a0e6dd58c
ok 645 1889dcf2c38b
ok 646 a0b1af5af2a1
ok 647 a2e76b9d12b2
ok 648 29e3ed4baf74
ok 649 cc88a09c8ba0
ok 650 2e4757816f02
ok 651 811014d1b5a6
ok 652 a95a7db01c94
ok 653 dc471f687ddb
ok 654 03719856d561
ok 655 9edfa995bb02
ok 656 b02d119cd01c
ok 657 941528671623
ok 658 6378ab68761d
ok 659 54cfe3641405
ok 660 67c3a0203a11
ok 661 f1e134bf3b86
ok 662 35cb7b8aff38
ok 663 d67babd47a76
not ok 664 0e549be4e2ef
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen14.bats, line 651)
#   `z :=   -4     -y    else   skip' '{z → -4}'' failed
# if (3  <  iU -     l     ∧(x     +     -4) - y =   x   *     x)      then  skip   else if (x   *   3<     xd     *1 ∧    4  *     q3 <  1    *-4)    then 
# skip      else skip    ;if (false     ∨  y    *    y     <  3   *    z)   then  
# 
# 
#  z   := EW else  
#  if (true     ∨  true)      then 
# 
# 
# z :=   -4     -y    else   skip = {z → -4}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 43 (Just (Tokens ('-' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (3  <  iU -     l     \8743(x     +     -4) - y =   x   *     x)      then  skip   else if (x   *   3<     xd     *1 \8743    4  *     q3 <  1    *-4)    then \nskip      else skip    ;if (false     \8744  y    *    y     <  3   *    z)   then  \n\n\n z   := EW else  \n if (true     \8744  true)      then \n\n\nz :=   -4     -y    else   skip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 665 af9b76262e29
ok 666 97c5c513bcc4
ok 667 2523d32aad02
ok 668 ec7f25e0d877
ok 669 3f95661cc0d8
ok 670 5b542d5375ca
not ok 671 05675f3819a0
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen14.bats, line 718)
#   `skip     else skip   ' '{}'' failed
# if (¬(x *z <  1  - z))     then  
#  skip else  
# 
# 
# 
# skip     ;
#  
# 
# while true  ∧   0    *     z   < y*   -4     do 
# 
# 
# if ((s  + -3)   -  -1    <    4∧ z  +y  <3)      then 
# skip     else skip    = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 140 (Just (Tokens ('<' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172(x *z <  1  - z))     then  \n skip else  \n\n\n\nskip     ;\n \n\nwhile true  \8743   0    *     z   < y*   -4     do \n\n\nif ((s  + -3)   -  -1    <    4\8743 z  +y  <3)      then \nskip     else skip   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 672 018353461b2f
ok 673 d5c0c33a640d
ok 674 67b300e0c5b2
ok 675 036155aeeebd
ok 676 e7f6e36cc1de
ok 677 a7c1daa4f315
ok 678 0607c25887c9
ok 679 9b1a6d7af19e
ok 680 8f701fbd47f2
ok 681 65ccfa0a0732
ok 682 01ad926e98c6
ok 683 ccbb3077dea2
ok 684 f45defacac43
ok 685 adfc4278d28e
ok 686 347533bc8f3f
ok 687 9007ab4c584e
ok 688 932f531bc31d
ok 689 d2f6c6ef3b45
ok 690 45728c2f8da8
ok 691 0733ccbec892
ok 692 3a1823982f34
ok 693 f671bd3d2f6a
ok 694 7a85148a8441
ok 695 f431d9d8ab4d
ok 696 d28e8e2a589f
ok 697 999f52f9092b
ok 698 ba7b24122fff
ok 699 98fa7bda14eb
ok 700 3a9428a81cad
ok 701 3a3dfd281670
ok 702 4df60a08231b
ok 703 a50f3ea9f600
ok 704 e00622b0a04a
ok 705 9346568361ad
ok 706 7791f3c2b338
not ok 707 b755ae7f8301
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen15.bats, line 71)
#   `while y +    tz  =  -1     -    y  ∧(z   +     z)*  x <    -4  do  z:=    W    -   -1     ' '{x → 0}'' failed
# if (x    < G+     -1 ∨1+1    < T-     -1)   then  
#  
#  u  :=     z *z else    
#  x:=  y     *    z ; 
# 
# while y +    tz  =  -1     -    y  ∧(z   +     z)*  x <    -4  do  z:=    W    -   -1      = {x → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 150 (Just (Tokens ('*' :| " "))) (fromList [Tokens ('\172' :| ""),Tokens ('\172' :| "\172"),Label ('b' :| "ool expression")]) :| [], bundlePosState = PosState {pstateInput = "if (x    < G+     -1 \8744\&1+1    < T-     -1)   then  \n \n u  :=     z *z else    \n x:=  y     *    z ; \n\nwhile y +    tz  =  -1     -    y  \8743(z   +     z)*  x <    -4  do  z:=    W    -   -1     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 708 11ee51d4b1c3
ok 709 2648015f18a5
ok 710 d4f970e97cf5
ok 711 a6bd719658e6
ok 712 281574f744ec
ok 713 1ec7c9a90570
ok 714 3b5c82c1ed08
ok 715 b2ce717aba8b
ok 716 f184372c5671
ok 717 2d155002b910
ok 718 98bf36156cf1
ok 719 80d7893b924a
not ok 720 d957ba84557a
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen15.bats, line 192)
#   `x:=     3 + -1  ;while z    +    x    <(y     +    Z)   -    y ∧  -2 -     Ch    <0  do x  := x -    x ' '{x → 2}'' failed
# if (false   ∧     true)   then   
# while x  *     y    < x*   -4 do   
# skip   else  
#  x:=     3 + -1  ;while z    +    x    <(y     +    Z)   -    y ∧  -2 -     Ch    <0  do x  := x -    x  = {x → 2}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 141 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "if (false   \8743     true)   then   \nwhile x  *     y    < x*   -4 do   \nskip   else  \n x:=     3 + -1  ;while z    +    x    <(y     +    Z)   -    y \8743  -2 -     Ch    <0  do x  := x -    x \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 721 24cddca6f33e
ok 722 4e587c9b974b
ok 723 825b5bba14de
ok 724 51c57b9a8c00
ok 725 0d84586593a6
ok 726 4bb60035434c
ok 727 b0791d3773d0
ok 728 5c473af0cbfd
ok 729 f02d301b1d63
ok 730 04e88f1c244c
ok 731 2059fa27ce52
ok 732 21a109412412
ok 733 77c8a58c3454
ok 734 312222249b9e
ok 735 06b5a57f8e77
ok 736 4fd159fc517c
ok 737 ec273a94df2c
ok 738 176c5dbac163
ok 739 df9bbb16e199
ok 740 f62aa32c6baf
ok 741 45782df97cf4
ok 742 c25d9575b4db
ok 743 079e525f632c
ok 744 056c8bdb95de
ok 745 f8b34712ca43
ok 746 e460151564f7
ok 747 d124a01d97a1
ok 748 8f317785be14
ok 749 0ad03519b337
ok 750 f108dadab838
ok 751 b94b85f7a195
ok 752 b7b1b0f7786f
ok 753 6a0c57f6ce31
ok 754 f9ca0e1e023c
ok 755 393911facb0c
ok 756 2acfa0083d10
ok 757 9249bf7ba02b
ok 758 39b4e3529cf3
ok 759 1fee95f40b40
ok 760 e58c91b391e7
ok 761 b18939db6dc7
ok 762 6c7c43e0b9b9
ok 763 294af2f63f45
ok 764 527400323708
ok 765 4cede71f0a14
ok 766 27523cedbad0
ok 767 73663094613e
ok 768 b017bcfd7816
ok 769 973e1e44e900
ok 770 b8ca56face0c
ok 771 a07860b4028c
ok 772 7856772e74f9
ok 773 68a1c8243015
ok 774 27da1084a501
ok 775 4b89bf04c462
not ok 776 658e5cdff2ad
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen15.bats, line 764)
#   `D  :=     -4     * x' '{D → 0}'' failed
# while 4 - y = x + z      do   y  :=     Cc     -1  ;
# 
#  if ((-2 +    3)     -     -4= 4  *    lV ∧    Qj + 2   <    3   *2)    then 
#  
#   x     :=z     *   2    else 
#   D  :=     -4     * x = {D → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 83 (Just (Tokens ('=' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while 4 - y = x + z      do   y  :=     Cc     -1  ;\n\n if ((-2 +    3)     -     -4= 4  *    lV \8743    Qj + 2   <    3   *2)    then \n \n  x     :=z     *   2    else \n  D  :=     -4     * x\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 777 6a16c1e0864e
ok 778 90c7c9fb04f2
ok 779 222e15cccc3d
ok 780 5beab5293e34
ok 781 062c75b48a3b
ok 782 4c8909428708
ok 783 b7970624f294
ok 784 091cc8670080
ok 785 be6060385791
ok 786 7546d3d3101e
ok 787 4b2fb8282388
ok 788 e2958002932e
ok 789 80b477520f18
ok 790 3db557436e49
ok 791 6c67a1c999a0
ok 792 13a267b339e6
ok 793 de8ddb3d5cfe
ok 794 5d64045ca8b1
ok 795 d9fe526e0454
ok 796 aa3a1f50abb7
ok 797 f90b3b221f42
ok 798 5ee5879e35fe
ok 799 5d3595f0c04a
ok 800 ece83c4db2cb
ok 801 27b4575f54e4
ok 802 5597094e6a1f
ok 803 b7409557a9d5
ok 804 31399633a6a4
ok 805 52a8720546c6
ok 806 0846ac3f43d2
ok 807 80bf4c3b52c1
ok 808 fb128fe0c1a9
ok 809 1f8102128d27
ok 810 3a45dc93c141
ok 811 e8a30dfeccb2
ok 812 a7d55ba5b629
ok 813 648e9db1413a
ok 814 b4367610385f
ok 815 337b752d17d5
ok 816 6b7621889b8f
ok 817 367d490a14dd
ok 818 6940c55094c4
ok 819 7e4cb5bcbdfa
ok 820 f28474e20756
ok 821 2a6543e2e4c8
ok 822 29b359e77d42
ok 823 4e073055ea1a
ok 824 0cb2c2760911
ok 825 b7827b30c3d4
ok 826 a72c153dead2
ok 827 7f85e263839c
ok 828 9db79d0e5fd3
ok 829 90404ba09206
ok 830 fa0b66b42cc8
ok 831 9862aff04dec
ok 832 65c805a7f8d6
ok 833 d6f9a5999de5
ok 834 d774aae72fc3
ok 835 866aa2ed39a8
ok 836 a2e0db737cdf
ok 837 e220b27e0079
ok 838 02bfc2e7807e
ok 839 23a22e8bddbd
ok 840 fc706bd4e38d
ok 841 e9c6b48d62cb
ok 842 79250542e28f
ok 843 27e53ca75f9e
ok 844 cd6445556b12
ok 845 9f4e482f416c
ok 846 9f15da48ee85
ok 847 5052722a655c
ok 848 fdefd92207e1
ok 849 ea0a63e3d70f
ok 850 ad35f2778c91
ok 851 443cde512b83
ok 852 7bd24f969009
ok 853 7d6f985c2147
ok 854 c5f214ba0123
ok 855 525a97a1ac8f
ok 856 8136a6e311c3
ok 857 bc9d7f73a682
ok 858 5fcc56edd4e1
ok 859 b3ef95b0a943
ok 860 585116368e07
ok 861 89a52bc63310
ok 862 5b4e7b635909
ok 863 67e6aa6efe2f
ok 864 c53ea14df4c8
ok 865 f57694d3699c
ok 866 0b2fdc4b2280
ok 867 19e6bd4d7fe6
ok 868 33798b115731
ok 869 301df3b1837a
ok 870 fd1520a167e8
ok 871 d8e15886f045
ok 872 9860c7a92fd1
ok 873 0378b1f421cb
ok 874 5a3293ffb94d
ok 875 ee72f18e5070
ok 876 af0d0f62469c
ok 877 5eb547aa6a21
ok 878 23ff1944e400
ok 879 71494de6311b
ok 880 6c17b532fc65
ok 881 530a955b8206
not ok 882 61790cf04b77
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen16.bats, line 812)
#   `z   :=  z+2' '{y → -6}'' failed
# if (¬(y    +0   =4 * z)) then 
#  
#  if (¬true)      then  
# C    :=z     else 
# 
#  
# xX  :=    z     -     y  else y  :=    -2    *   3   ;while (Hr   -  1) *   x  =     1 *-4     ∧ y   +     x    < 3--3     do 
#  z   :=  z+2 = {y → -6}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 151 (Just (Tokens ('*' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172(y    +0   =4 * z)) then \n \n if (\172true)      then  \nC    :=z     else \n\n \nxX  :=    z     -     y  else y  :=    -2    *   3   ;while (Hr   -  1) *   x  =     1 *-4     \8743 y   +     x    < 3--3     do \n z   :=  z+2\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 883 2bada7525b20
ok 884 c34c333a51b2
ok 885 d5c9e34bfe41
ok 886 5b0a0368fc65
ok 887 a5a3106c79b4
ok 888 5170f81640e5
ok 889 3591992a132a
ok 890 8497d4a18d2c
ok 891 306039be1c1f
ok 892 de58bf9c9876
ok 893 e272391d2467
ok 894 b484b1b9961b
ok 895 2438a6d99c1a
ok 896 fc4dfd2b40b9
ok 897 ec02c249d012
ok 898 8854f6024c4f
ok 899 f83a94519436
ok 900 d9d75acad5e9
ok 901 bed2b401c7a7
ok 902 6a85d7fb3793
ok 903 c35885d8fe27
ok 904 1424328e463d
ok 905 3b5cd8f651df
ok 906 bc4fd5edc989
ok 907 98a0678b90ec
ok 908 c270dffdec79
ok 909 74227388d587
ok 910 5e0e41071913
ok 911 7790aafffebd
ok 912 319806328049
ok 913 ecdf1dc06219
ok 914 343ffaeedf5a
ok 915 60be9e326a81
ok 916 08bace437710
ok 917 75ae24d1d2e2
ok 918 58bff1db76c7
ok 919 ddd7b2751d55
ok 920 cbfab0627477
ok 921 32686dd9c084
ok 922 8f180348f6d9
ok 923 61b5e4018b3c
ok 924 16787c2b0905
ok 925 95fcfc7deb81
ok 926 ef3a0bb6b2f0
ok 927 7dfc9e01ac27
ok 928 0b6976a135a2
ok 929 0edf995f41d6
ok 930 c604a7b98f7b
ok 931 2b51d2881911
ok 932 c164bfcc7aa5
ok 933 39bca71602f4
ok 934 57ac105241de
ok 935 395b157ff2e5
ok 936 f4d45567cfac
ok 937 102360d8e158
ok 938 16b272ec50d3
ok 939 29f795a8bc9b
ok 940 013060f27864
ok 941 f7cc827c598f
ok 942 2a1f447076bb
ok 943 331d0efc65c4
ok 944 a161c043dbd2
ok 945 49913c12079e
not ok 946 44122912509d
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen17.bats, line 497)
#   `skip ' '{}'' failed
# while (-1   +     z)    *  2  <-4      do f:=x     ;
# while true   ∧    4   +  x   =     -3   +y   do 
# skip  = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 24 (Just (Tokens ('*' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while (-1   +     z)    *  2  <-4      do f:=x     ;\nwhile true   \8743    4   +  x   =     -3   +y   do \nskip \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 947 42d1aecc07eb
ok 948 fb797dca91ec
ok 949 82302cd68b82
ok 950 50d7a1693004
ok 951 01d5ff6351ac
ok 952 773fd5ad7301
ok 953 11fd64dae4bb
ok 954 51f5158cb5c9
ok 955 6da0ce904e66
ok 956 7a45ffb0c46b
ok 957 6774565e9e1c
ok 958 92a1a0483a59
ok 959 60082ea2517f
ok 960 77a8afdf75e2
ok 961 535cfbb77941
ok 962 a8765be1b39a
ok 963 daf72de006a9
ok 964 f4a9d00d434e
ok 965 a780d03a589a
ok 966 0f882aa467db
ok 967 99e48ab944d3
ok 968 4fadc6596c0f
ok 969 2373058fb677
ok 970 90cb4d041ce1
ok 971 446a43eeb17f
ok 972 e638d02c0c8d
ok 973 7c3cda6a7716
not ok 974 fe290eb2a85d
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen17.bats, line 799)
#   `skip    ' '{x → 0}'' failed
# if (¬false)  then if (false   ∧     true)   then   
# x    :=  x   -  (d    +    n)  else x:=     b   * 1   else if (3   -  2 =    1  +     1   ∨   x+  1     =   zr    +    -2) then skip    else 
#   z     :=-4   +    x;  
# 
# while y* z   =  (0 -    4)-    z     do 
# 
# 
# while jJ *    x    <z -     QZ  ∨     2*   3 < y   +     z  do 
# 
#  
# skip     = {x → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 246 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "if (\172false)  then if (false   \8743     true)   then   \nx    :=  x   -  (d    +    n)  else x:=     b   * 1   else if (3   -  2 =    1  +     1   \8744   x+  1     =   zr    +    -2) then skip    else \n  z     :=-4   +    x;  \n\nwhile y* z   =  (0 -    4)-    z     do \n\n\nwhile jJ *    x    <z -     QZ  \8744     2*   3 < y   +     z  do \n\n \nskip    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 975 338457f968de
ok 976 b271edcdd738
ok 977 05f4fc7806f3
ok 978 2fcb4a51560b
ok 979 89026f66e940
ok 980 d2904d3853c5
ok 981 7e436536f1f1
ok 982 b9b1c563dab1
ok 983 bb4189adf611
ok 984 9e076b13509e
ok 985 33524fd7f6fb
ok 986 e1b1f3764950
ok 987 d932a82ab74b
ok 988 6b1a19bea679
ok 989 4d5a7801bd96
ok 990 c415d680724c
ok 991 4c4c74acde85
ok 992 63f06a7c69e8
ok 993 058ef2d01099
ok 994 6a1f01ba6fc2
ok 995 45fb6cceed8c
ok 996 01f399ea01be
ok 997 e5399f4a2635
ok 998 76762db50c09
ok 999 77cce788ef47
ok 1000 51b191120fea
ok 1001 27a929d39ed2
ok 1002 7ab2869677fd
ok 1003 6a56f826b86e
ok 1004 4a9c5ba48d37
ok 1005 c202f339a24a
ok 1006 d953a7310fdc
ok 1007 a0ec7f5a56c3
ok 1008 49598a401646
ok 1009 70b03e0a06cb
ok 1010 894d9bb27f68
ok 1011 d9eb606dbbfa
ok 1012 3382c9ab2635
ok 1013 744c5fb3b0c8
ok 1014 e776b5ce22ca
ok 1015 7cdf8417237d
ok 1016 a94434326c02
ok 1017 a4ca572b29d7
ok 1018 44eff5012593
ok 1019 b98f37109be8
ok 1020 13bce5e2f280
ok 1021 7ca71072103a
ok 1022 1d86979a7451
ok 1023 5937d9f30d98
ok 1024 0f0b05771bb6
ok 1025 d14dab15c96f
ok 1026 75c2217a3543
ok 1027 98dc894c4556
ok 1028 3e2568251134
ok 1029 7df480374673
ok 1030 ed2655682c38
ok 1031 beed0dc1c12c
ok 1032 665aeb6892c9
ok 1033 dad982c42b40
ok 1034 7e794dea917e
ok 1035 d58d9b719c5a
ok 1036 3efc91c2b0f0
ok 1037 71681f085385
ok 1038 bdcbff7d2bee
ok 1039 357c768158b0
ok 1040 1ad071bf21cf
ok 1041 e906f7d05cd8
ok 1042 ac6ff7b22ce5
ok 1043 f924ef532813
ok 1044 b5fc33fc6544
ok 1045 09495dd69312
ok 1046 1a06f97ef78c
ok 1047 a6e21273ea5b
ok 1048 214b912647fb
ok 1049 b64b05eec751
ok 1050 b9e6830699cc
ok 1051 b8bc5020b2c4
ok 1052 f0e3358e5697
ok 1053 f817b0052e03
ok 1054 367164329d16
ok 1055 82ed8c4b0edb
ok 1056 68910f16c989
ok 1057 45fd7b518810
ok 1058 4d816239d5d0
ok 1059 862ef3af08ac
ok 1060 ef0b07d36220
ok 1061 407a61ab580c
ok 1062 7e63773b98df
ok 1063 99eb6594e4d0
ok 1064 1a252e96f2f2
ok 1065 3c77d09a5312
ok 1066 4e20e080249b
ok 1067 220e023cb190
ok 1068 556dfe76ca4d
ok 1069 466dc6f86ccb
ok 1070 5db6a609887d
ok 1071 6abc90021de7
ok 1072 f30907d176d3
ok 1073 ff0902c7aa01
ok 1074 d17192651605
ok 1075 2619ff101719
ok 1076 c119f3b425a1
not ok 1077 e952ab781bf4
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen18.bats, line 774)
#   `while (¬(x  *   -3     = z*3)) do  skip   ' '{x → 6}'' failed
# if ((z     +   z)  *o  <    0 * z    ∧  false) then  
# 
# 
# 
# y :=y   +    0     else 
#  x     := 2   -    -4;
#   
#  while x * y  =    2     +1 ∧  false     do 
# 
#   while (¬(x  *   -3     = z*3)) do  skip    = {x → 6}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 23 (Just (Tokens ('<' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if ((z     +   z)  *o  <    0 * z    \8743  false) then  \n\n\n\ny :=y   +    0     else \n x     := 2   -    -4;\n  \n while x * y  =    2     +1 \8743  false     do \n\n  while (\172(x  *   -3     = z*3)) do  skip   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 1078 44f6c6fcba8c
ok 1079 6421a93c0a12
ok 1080 78cddcc49aeb
ok 1081 3fe02216b695
ok 1082 98a247fd3b25
ok 1083 d106232a1072
ok 1084 34a97de91315
ok 1085 e3cae996024f
ok 1086 5c7862260093
ok 1087 91e9f4763a4b
ok 1088 ef74da3851fd
ok 1089 fee87581bfdc
ok 1090 3176c502bb00
ok 1091 c9af36316ed1
ok 1092 006622248c82
ok 1093 ab1271518518
ok 1094 d6840c4b1943
ok 1095 db949a9a32c5
ok 1096 1bdbd77816c2
ok 1097 63899c79415c
ok 1098 ce014f6f6a0c
ok 1099 7246bdf897a5
ok 1100 3cf62a771b97
ok 1101 2d96ef542104
ok 1102 2525849dbd9e
ok 1103 aef97dbd82a7
ok 1104 5975e3482e19
ok 1105 375c8fc7d793
ok 1106 c0671e72163a
ok 1107 c78e13f200cc
ok 1108 ca46fd527530
ok 1109 acf1d6992ad5
ok 1110 b18a8b4a559d
ok 1111 2468540f00b4
ok 1112 58d35a47c053
ok 1113 b311ba9d713c
ok 1114 19116055fcda
ok 1115 0dc08655498d
ok 1116 a02449f73d04
ok 1117 b356fda2ac99
ok 1118 e58efb28afeb
ok 1119 924a695cfa47
ok 1120 a7d3a9888221
ok 1121 e2972ddb3229
ok 1122 7de4f3bca867
ok 1123 664df3592f74
ok 1124 fd22512b18c0
ok 1125 50bd0e74d6b3
ok 1126 61490d17bb9d
ok 1127 1ba83796ec98
ok 1128 52b3aadea5fa
ok 1129 a63c08926b06
ok 1130 b36bace14cc2
ok 1131 354d9dccafc5
ok 1132 d6abd9983f98
ok 1133 e5aedcb052cf
ok 1134 d1cac903e2af
ok 1135 9b4a8b1132c8
not ok 1136 ba5f0176d5df
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen19.bats, line 381)
#   `skip     ' '{y → 0}'' failed
# if (¬(-1-    4     =   -1     *Xi))  then 
# y    :=   1   + -1  else  
#  
# y:=   1     *  2   ;
# if (3  +   Gp <     -3    *    -3    ∧  2     -  y     =     x    *  iP) then  while 2  =     (0   +  z)  *    3  ∨  y     - o    <E     -     y   do 
# while false   ∨   y   *   0  =    -1   *    1   do 
# 
#  
#  skip   else   
# 
# skip      = {y → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 199 (Just (Tokens ('*' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "if (\172(-1-    4     =   -1     *Xi))  then \ny    :=   1   + -1  else  \n \ny:=   1     *  2   ;\nif (3  +   Gp <     -3    *    -3    \8743  2     -  y     =     x    *  iP) then  while 2  =     (0   +  z)  *    3  \8744  y     - o    <E     -     y   do \nwhile false   \8744   y   *   0  =    -1   *    1   do \n\n \n skip   else   \n\nskip     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 1137 651fb55a86f2
ok 1138 07d97a38c29a
ok 1139 c7c34cf8e904
ok 1140 3e18db790bc5
ok 1141 8e07091807ca
ok 1142 1b0dd7189506
ok 1143 23a5cf75a74d
ok 1144 13b4fe429ab4
ok 1145 798f87e7be03
ok 1146 5137947e7f54
ok 1147 5d3752f4ef71
ok 1148 c6772380f360
ok 1149 60bbe9a94bc7
ok 1150 35ade5915826
ok 1151 6e1719f167cf
ok 1152 8961694d5f72
ok 1153 21635ce6bffb
ok 1154 5005b2b10c12
ok 1155 824ebc735dad
ok 1156 bf5ff7d25947
not ok 1157 b642073c50e0
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen19.bats, line 580)
#   `skip ' '{}'' failed
# while 2  < y*   2  do   skip   ; 
# 
# 
# if (Q   *  z     <     0   +  -2    ∧  4*   0    = (y-   0) - z)  then 
#  if (2   -     z  <    y     -     x∧ true)   then 
# 
#  
#  n  := -4 +  x else   skip else   while true   ∧   false   do    
# if (¬false)    then skip   else  
#  skip  = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 96 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while 2  < y*   2  do   skip   ; \n\n\nif (Q   *  z     <     0   +  -2    \8743  4*   0    = (y-   0) - z)  then \n if (2   -     z  <    y     -     x\8743 true)   then \n\n \n n  := -4 +  x else   skip else   while true   \8743   false   do    \nif (\172false)    then skip   else  \n skip \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 1158 ea2b0a712e50
ok 1159 f71c7fc9c090
ok 1160 be3e9017a0bc
ok 1161 f40e976c3c48
ok 1162 be3abcb402fb
ok 1163 386ff2025a38
ok 1164 70f37eed5810
ok 1165 cd5de3fbe12c
ok 1166 13918533eaf8
ok 1167 b5640960eb0b
ok 1168 3541e64bc708
ok 1169 ed583c514a8e
ok 1170 25d4c2f6e5f2
ok 1171 3bb905c5ca85
ok 1172 0bb57649e131
ok 1173 9ee248e4f488
ok 1174 1271aaa2f8a9
ok 1175 f6548fad6684
ok 1176 3051c6c2ccc2
ok 1177 933b476ea9c2
ok 1178 8d7781dce174
ok 1179 6a1f234af3bf
ok 1180 735d7067e8f6
ok 1181 b563d529529e
ok 1182 475cea1fcd4f
ok 1183 39bc81372f46
ok 1184 578dfbf89b37
ok 1185 cfab13dc5b9e
ok 1186 640b2f9fc3f3
ok 1187 22a7bc607e88
ok 1188 666d99b03ab6
ok 1189 d4fb515908f1
ok 1190 325d709213e0
ok 1191 2e214d74da54
ok 1192 3ce39d9e4d19
ok 1193 8da6d310710e
ok 1194 96a245d36141
ok 1195 2e5a2959d61d
ok 1196 6936cc489aff
ok 1197 237a54187e9e
ok 1198 5f954139afed
ok 1199 70252b9263ce
ok 1200 b37e3ea1cdfd
ok 1201 5ac99c6e7625
ok 1202 373d5a41f0e6
ok 1203 e5075ae40f71
ok 1204 26e81695b0be
ok 1205 a028b42c3cf1
ok 1206 8c78da85998c
ok 1207 14665b87d0e0
ok 1208 6b539f6d6ff3
ok 1209 a54b395e95a3
ok 1210 df3f9066ecc9
ok 1211 1d66dc6c6ba0
ok 1212 73958e4c8566
ok 1213 a966efa350be
ok 1214 e16c3141a3c1
ok 1215 0a2fb7358d3f
ok 1216 a91a25a4ce0a
ok 1217 ec0f9cccf15d
ok 1218 09241d640a24
ok 1219 233c9ba46365
ok 1220 51c16b4b5d4e
ok 1221 3eb55832ac03
ok 1222 1758e4588adb
ok 1223 e61d54493e8d
ok 1224 89ba47f35dec
ok 1225 b0e15cf72d7f
ok 1226 f0fcdc7d906c
ok 1227 57bba9f78507
ok 1228 277915a326e5
ok 1229 9ede6c73e29e
ok 1230 c350c12ad818
ok 1231 387fbfb157e9
ok 1232 2a56e2b8057b
ok 1233 8f2a7f03f22d
ok 1234 c922a3c5a9c5
ok 1235 9cca3500f303
ok 1236 7eea050c8d3e
ok 1237 d2566c23a72d
ok 1238 43277895d419
ok 1239 0ccbbd579c96
ok 1240 5aa54ee2495d
ok 1241 eb95dc52ad66
ok 1242 0291e072090b
ok 1243 7e7432fa7873
ok 1244 83f202512508
ok 1245 5dbd69fd7940
ok 1246 59e757d376ac
ok 1247 21d65b3d309e
ok 1248 f790823ec0f0
ok 1249 65ae4bfcef68
ok 1250 b7cc833c621b
ok 1251 911988fcffdd
ok 1252 c31b1ed33042
ok 1253 30966fa8cd11
ok 1254 5655c879b226
ok 1255 3779c2592977
ok 1256 604f2150baef
ok 1257 7515057eed28
ok 1258 1b3ad03a03a7
ok 1259 4ddc04a7827d
ok 1260 a218cea6b78a
ok 1261 fe9124a1fbd8
ok 1262 85657249f1a6
ok 1263 5d8b8f0be660
ok 1264 6e4ad36bba41
ok 1265 bd8a6f601e38
ok 1266 56dbc77e4677
ok 1267 3fee00f9a480
ok 1268 34baa5893843
ok 1269 66391b06a3c3
ok 1270 8dfbf2db44a0
ok 1271 6f349064ea20
ok 1272 ccbce985e1f4
ok 1273 a9769723bd98
ok 1274 d94f0509c837
ok 1275 9377c98bcbf6
ok 1276 40b262a0e387
ok 1277 6acb030aee71
ok 1278 1ec12cbb2ec3
ok 1279 3edc0e2e2cf7
ok 1280 0656216dd69d
ok 1281 4f1293db3938
ok 1282 82fe4e9bcf3c
ok 1283 8ddf1f68ab44
ok 1284 d95c25fe7bb8
ok 1285 517b9dbebe77
ok 1286 ddcf879e6095
ok 1287 a9cd912126fd
ok 1288 31aa244ca79c
not ok 1289 7d41d36b3c88
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen2.bats, line 884)
#   `skip   else x   :=   y+ 3' '{}'' failed
# if (H+  j <     -2   *     1    ∨z --4  =  x+    y)      then 
# 
# 
#   y:=     Y  --3    else while false    ∨Z    * -3    =     4     do 
#     if (¬(z     -  y<  (-2    +    2)     * 1)) then  
# 
# 
# skip   else 
# 
# 
#   skip  ;if (z     +  -3    <    3*y    ∨    Y   -   1    =  z)    then 
# skip   else x   :=   y+ 3 = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 177 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (H+  j <     -2   *     1    \8744z --4  =  x+    y)      then \n\n\n  y:=     Y  --3    else while false    \8744Z    * -3    =     4     do \n    if (\172(z     -  y<  (-2    +    2)     * 1)) then  \n\n\nskip   else \n\n\n  skip  ;if (z     +  -3    <    3*y    \8744    Y   -   1    =  z)    then \nskip   else x   :=   y+ 3\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 1290 d51421183734
ok 1291 da54307bc4c8
ok 1292 60d1ae09adb0
ok 1293 4a388496376d
ok 1294 45f60a3e47cf
ok 1295 150a4d68b2b2
ok 1296 c3d36ea2c89b
ok 1297 62a3a92e2fe9
ok 1298 7e58ad19f29a
ok 1299 f167b060341e
ok 1300 ff85f546b02f
ok 1301 5c6c27480d9d
ok 1302 c602c88e3cb7
ok 1303 b1a1f0beceed
ok 1304 cf26f483db19
ok 1305 187c27cbc254
ok 1306 aed4aca3108d
ok 1307 dcc842073ccc
ok 1308 2d0cea2a346a
ok 1309 f82c2c00966a
ok 1310 eeb89ed61d74
ok 1311 184b397905c7
ok 1312 ffd8dd43caba
ok 1313 8ff3762db885
ok 1314 ec5f05b16f9e
ok 1315 6242a27704c3
ok 1316 e57aa4c172ed
ok 1317 4803c94445a9
ok 1318 f30610e583ee
ok 1319 c609cf18f0c8
ok 1320 423b4293a80d
ok 1321 a6f44cc9896e
ok 1322 b741d182a7b1
ok 1323 c4fed3f2aed4
ok 1324 fd578b5249ae
ok 1325 e0e7d75b30ca
ok 1326 7265e4ec81c4
ok 1327 94390696f773
ok 1328 baf7351f6b19
ok 1329 a3f008dd44c1
ok 1330 22683e3530a1
ok 1331 b03613b1d05f
ok 1332 7bafe5c5e019
ok 1333 ba401ec26702
ok 1334 772d41077730
ok 1335 937792db9be8
ok 1336 0ae4844103ed
ok 1337 e319154a4acf
ok 1338 ab491b4d193e
ok 1339 06e2f4c997dc
ok 1340 cb134ff4e1b9
ok 1341 7eb7a3ba43c2
ok 1342 5bc65cf1957a
ok 1343 853d5e298249
ok 1344 5ea54b7cf0cc
ok 1345 6db682362931
ok 1346 febd03f3fadc
ok 1347 e41d2c478e5b
ok 1348 efe9f46e2b99
ok 1349 477b51f7bbe3
ok 1350 1f271e7d1204
ok 1351 71472771ae62
ok 1352 2cc69d009466
not ok 1353 37d7bd7a735e
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen20.bats, line 526)
#   `y   := t   *  P    ' '{a → 0}'' failed
# if (¬((-2     +x) - x    =     1+   -1))    then if (4  +  -2 <    PK   *  3   ∧  true)      then skip      else 
#   skip   else 
#  
#  
# skip    ;  
# 
# 
# if true then     a :=  z*  1      else  
# 
# y   := t   *  P     = {a → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 25 (Just (Tokens ('=' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172((-2     +x) - x    =     1+   -1))    then if (4  +  -2 <    PK   *  3   \8743  true)      then skip      else \n  skip   else \n \n \nskip    ;  \n\n\nif true then     a :=  z*  1      else  \n\ny   := t   *  P    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 1354 047043b2bb94
ok 1355 e67f58b5998b
ok 1356 b647f5e4ec9c
ok 1357 6305c4a78990
ok 1358 925ce0918688
ok 1359 2cd2a854b75c
ok 1360 33be5277c1e0
ok 1361 6a9232574104
ok 1362 1e7a7e7a906e
ok 1363 4c0055794da8
ok 1364 83b19e2439ea
ok 1365 474ea049d9d4
ok 1366 17fc156a5ec1
ok 1367 596ace4f63a1
ok 1368 1deea76ee6ca
ok 1369 0fec6477fe64
ok 1370 86f4cf6752bf
ok 1371 671e73b124ab
ok 1372 45194de23fc4
ok 1373 3deb3fe046f6
ok 1374 e5cb1e6d5ef8
ok 1375 bf8565911a7d
ok 1376 7bdb7c7f3647
not ok 1377 68489ad8c10d
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen20.bats, line 773)
#   `z :=y +    x     else  skip ' '{}'' failed
# while -1    * y     =  1     +  0     ∨    false    do skip  ; 
# 
# if (y * -1   < (T + 0)    *   0    ∨    x -   x <O  *  z)   then 
# 
#  
# z :=y +    x     else  skip  = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 91 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while -1    * y     =  1     +  0     \8744    false    do skip  ; \n\nif (y * -1   < (T + 0)    *   0    \8744    x -   x <O  *  z)   then \n\n \nz :=y +    x     else  skip \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 1378 a378aee3c284
ok 1379 a60b2efa9dc5
ok 1380 397b658e8bb3
ok 1381 56ecf40a3668
ok 1382 58f8d26049c2
ok 1383 ca41787e6807
ok 1384 a45f68d233a3
ok 1385 43ce37d3cc2e
ok 1386 59e844a89c45
ok 1387 643fa3f30b30
ok 1388 e6a536434cc0
ok 1389 f0d9b1e463f0
ok 1390 30813217eb4c
ok 1391 7eaf08c57ee7
ok 1392 ffe322127e77
ok 1393 5bbadcf62dab
ok 1394 6f2911f09185
ok 1395 29e7843f5338
ok 1396 6df95dfd56a6
ok 1397 04db39762dd5
ok 1398 12e990e09c8b
ok 1399 1b107d2959b7
ok 1400 dbf81fa76f1c
ok 1401 cdef9b774c39
ok 1402 1cf0e4b6d937
ok 1403 fde1a05a142b
ok 1404 58202db10d2e
ok 1405 e960755eeda9
ok 1406 28900f839bf8
ok 1407 74aab3259b78
ok 1408 6f4f3868e292
ok 1409 fd6bd0b53dc3
ok 1410 3dd788e3d76c
ok 1411 4e2d7cd89315
ok 1412 cbfbbfe4c1cf
ok 1413 07c7a6a66060
ok 1414 922f32b1406f
ok 1415 a8bf8d4d65d7
ok 1416 99b5709af9ed
ok 1417 17bdce43dfb2
ok 1418 7799eab9e995
ok 1419 f7510fba3fe9
ok 1420 ff4fe2c673d9
ok 1421 b8de1b7261ca
ok 1422 69a2f5eac30d
ok 1423 ba6b0f38fa02
ok 1424 49ed0b7f1e08
ok 1425 b5e3c7a3575a
ok 1426 4f8f51dd00fe
ok 1427 b859c0ccfb06
ok 1428 2b03dafdab83
not ok 1429 ea4b5cb2c6f6
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen21.bats, line 276)
#   `skip  ' '{}'' failed
# while 4   -     -1<(2    +  y)   -  xq     ∧    false  do   
# 
# 
# skip     ;if (3  +     z    =  y    *0     ∨    false)     then 
#  skip    else 
# 
#  
# skip   = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 33 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "while 4   -     -1<(2    +  y)   -  xq     \8743    false  do   \n\n\nskip     ;if (3  +     z    =  y    *0     \8744    false)     then \n skip    else \n\n \nskip  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 1430 df850dc5abdf
ok 1431 3e9f1d692959
ok 1432 74065ada075b
not ok 1433 0eb6a642bf84
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen21.bats, line 322)
#   `skip     else  hX  :=     y* -3   ' '{E → 0, hX → 0}'' failed
# if (4     =     4)     then 
# 
#   if (x+   1    <  x  *lB  ∧     p   - -3   =     -1  +    x) then cM:=   1  else  
#   
# E  :=y *  1     else    
#  y   :=  z  + 1    ; 
# 
# 
# if ((c +   -3)- Rr     =    2   + jy ∧true) then 
# 
# skip     else  hX  :=     y* -3    = {E → 0, hX → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 189 (Just (Tokens ('=' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (4     =     4)     then \n\n  if (x+   1    <  x  *lB  \8743     p   - -3   =     -1  +    x) then cM:=   1  else  \n  \nE  :=y *  1     else    \n y   :=  z  + 1    ; \n\n\nif ((c +   -3)- Rr     =    2   + jy \8743true) then \n\nskip     else  hX  :=     y* -3   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 1434 d376627faebf
ok 1435 9972f3d8566f
ok 1436 a08bee4a0bf8
ok 1437 27a3ec038a6e
ok 1438 88e279904718
ok 1439 2a693a5ac55c
ok 1440 b560851252ed
ok 1441 cd646e6a2a79
ok 1442 09657ee8b103
ok 1443 73c7e8cb2b28
ok 1444 2aea49e6d228
ok 1445 3b76be3e7d21
ok 1446 f1193fb91235
ok 1447 62f95aa97086
ok 1448 1df95a6c2846
ok 1449 6a72142c6947
ok 1450 48ac647e6a51
ok 1451 76b1866d6a22
ok 1452 c21ea2cfd9dd
ok 1453 faf469e02be8
ok 1454 04c01b61b2fa
ok 1455 824103d428f2
ok 1456 3b8eb84beeff
ok 1457 499b544bb073
ok 1458 01b53ad3aea3
ok 1459 70432a724857
ok 1460 328fe3894ab8
ok 1461 457c1bda710f
ok 1462 ff56a1adf889
ok 1463 dd836c18d0d7
ok 1464 8f4729193084
ok 1465 4fb81e4d814e
ok 1466 2934b069ba87
ok 1467 80a81a8e29b9
ok 1468 6ec3a4e31942
ok 1469 d20e4b17c87e
ok 1470 e8e2d9d558ac
ok 1471 458fdd5ec9ca
ok 1472 5cb414bdf3c3
ok 1473 1b072560578d
ok 1474 bba9846f55d5
ok 1475 525b012cbb69
ok 1476 6669b5af68df
ok 1477 aeb9a4b58e89
ok 1478 00786e0dd342
ok 1479 ec84ed31aa68
ok 1480 8fdfdb1ec968
ok 1481 5a4e8b19b75f
ok 1482 e59a88d9cb09
ok 1483 62a8d55fde91
ok 1484 4c1b1e43a064
ok 1485 ecc306d3b449
ok 1486 8e9c62e6a7be
ok 1487 f0946294127b
ok 1488 2e0d25185843
ok 1489 922e6f69e671
ok 1490 021e54c60d43
ok 1491 f3d8f0cc23f3
ok 1492 b75b1bc84385
ok 1493 403b660be409
ok 1494 e50c8c0f705c
ok 1495 df0ca1ee02af
ok 1496 c253a5562286
ok 1497 d847ba477601
ok 1498 e2f26f7faa17
ok 1499 282707f1d74c
ok 1500 41bd3103e232
ok 1501 52243fff7936
ok 1502 bb89ee5bad71
ok 1503 fae6ad693449
ok 1504 7e2ae097a11f
ok 1505 df91ff42dc6e
ok 1506 4dce8265fdcd
ok 1507 d02e04d5d172
ok 1508 9a5a49bc53c0
ok 1509 442e7be14e45
ok 1510 0774e4a01470
ok 1511 2791a6134fb6
ok 1512 d26425fbb739
ok 1513 a5a14e93ccec
ok 1514 58fbc12fddaf
ok 1515 2ff101cd48b2
ok 1516 6d04fd5e572d
ok 1517 e1d86a98ea78
ok 1518 208428420102
ok 1519 9da532398fb4
ok 1520 a86f1bf809fe
ok 1521 52aaf7b5ee96
ok 1522 7ea1b171bfb4
ok 1523 cf90575ece05
ok 1524 9d78132955ae
ok 1525 21cfbad04c89
ok 1526 06f8334ce9a4
ok 1527 3955d5b13287
ok 1528 28def42770d0
ok 1529 b0684fbc12bf
ok 1530 7ca4997f759f
ok 1531 5ed0bab931e0
ok 1532 7574f202ce3b
ok 1533 e19539b99aa0
ok 1534 2178fde2afc0
ok 1535 7cfd6730ce90
ok 1536 f3d098232245
ok 1537 da0c6210d6ae
ok 1538 9f3cb0ea0266
ok 1539 fa888315e314
ok 1540 599c369a7cfe
ok 1541 a3d37466d9db
ok 1542 88d373b2504f
ok 1543 42d25de21fe6
ok 1544 0e886f68e749
ok 1545 b665007fb62d
ok 1546 754a9440ce6b
ok 1547 b356f2dc1cd3
ok 1548 e18c5b0fcdbc
ok 1549 db7e4de2a70f
ok 1550 6908ef824054
ok 1551 50eee2e420ff
ok 1552 941ea4f370a7
ok 1553 3eefe40cd55a
ok 1554 c2b38788822d
ok 1555 9f2d3b8e41ce
ok 1556 bcfa8d3fc214
ok 1557 9eb8d7781186
ok 1558 333a40825de1
ok 1559 37a21593e47f
ok 1560 c520868fbeb3
ok 1561 fd5c96a46c51
ok 1562 db566116b643
ok 1563 c1fa2e78cc61
ok 1564 e50e3b77c7a3
ok 1565 36b808b6c107
ok 1566 c248474d6c15
ok 1567 7d7fb9dfbe57
ok 1568 e10f8afd8229
ok 1569 51144575af95
ok 1570 dc250d7eea1e
ok 1571 b2a10d94a503
ok 1572 ce4007befa19
ok 1573 db041b428255
ok 1574 5f8acf256450
ok 1575 d411204430a6
ok 1576 f5f5520f5be7
ok 1577 870654bcfbe4
ok 1578 828fe1d318ee
ok 1579 a593bd57b2c1
ok 1580 e9239f1454e2
ok 1581 ff20bd1b21c5
ok 1582 bf30ef3d25bb
ok 1583 07951ad29806
ok 1584 c1b1afb52af3
ok 1585 3c1eb832ccec
ok 1586 3ea488753f04
ok 1587 0650d5751414
ok 1588 ee98bbfba7a4
ok 1589 6d91bb628918
ok 1590 4992cce37519
ok 1591 a97484dc8fdd
ok 1592 00919e1153f9
ok 1593 203270741131
ok 1594 c40495b5662d
ok 1595 6fa3ef91c532
ok 1596 44b5826a1ec2
ok 1597 ccdd74906e0a
ok 1598 ad0cf095286b
ok 1599 d0be133900b9
ok 1600 c280a4aa4494
ok 1601 25ec4c82fcc9
ok 1602 2de53e389e3a
ok 1603 c07754cf7b09
ok 1604 7b0ef5cbcd65
ok 1605 72fd34182b57
ok 1606 2cd197a6008c
ok 1607 c94478f22939
ok 1608 6d1b6dd15561
ok 1609 298c522bdb8c
ok 1610 65dc7219e81e
ok 1611 ce63ce3d4fb0
ok 1612 2dc2d74fa7bb
ok 1613 2ce6f8091d7d
ok 1614 e35cb8d00b93
ok 1615 95dddbb89c61
ok 1616 b5d2b4b80961
ok 1617 af5d399db6d2
ok 1618 ed8b92d6f3f2
ok 1619 6d150e1a17ca
ok 1620 59fec75eeede
ok 1621 aeabdd6a5d50
ok 1622 3a819d735649
ok 1623 bd90d484f7ff
ok 1624 1b59d2387ef5
not ok 1625 34fb9719f05a
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen23.bats, line 230)
#   `y    :=   -1+     2 ' '{}'' failed
# while (y     - 0)-    x  <   x     -     x     ∨   y+   -3   < -3    -  x do if (¬(1 <    z   *    2))   then    x    :=     z     -2      else skip     ;while false   ∧   x     +   y =    2     +     s0      do 
#  
# 
# y    :=   -1+     2  = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 17 (Just (Tokens ('-' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while (y     - 0)-    x  <   x     -     x     \8744   y+   -3   < -3    -  x do if (\172(1 <    z   *    2))   then    x    :=     z     -2      else skip     ;while false   \8743   x     +   y =    2     +     s0      do \n \n\ny    :=   -1+     2 \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 1626 3bab7353b2e5
ok 1627 758a30c1f137
ok 1628 312b7dce2f00
ok 1629 b20703bf397f
ok 1630 4123c97d548a
ok 1631 c03c6a3e2c2c
ok 1632 3516ecb6fac3
ok 1633 9988b03a24a0
ok 1634 a03c4c443168
ok 1635 81c0f246eafd
ok 1636 137b1efec8ec
ok 1637 1ead7921bf8c
ok 1638 701b82a0c9c3
ok 1639 939be4df9341
ok 1640 6cfa8a05f981
ok 1641 99b9a0fbe62e
ok 1642 68ea7006895d
ok 1643 fd9ab80e580a
ok 1644 d7b736d7a399
ok 1645 35eab4d0bd49
ok 1646 327bbc7e9dfd
ok 1647 e7645a0e6e6e
ok 1648 504874ccecad
ok 1649 8a604b6158c9
ok 1650 48818d35c5a2
ok 1651 6ccceefafa90
ok 1652 692137280e87
ok 1653 38a9bfe52047
ok 1654 14a6275e82ea
ok 1655 ec47c808629b
ok 1656 40c9077a2000
ok 1657 9df6b1ae238e
ok 1658 8c18bf0e1ecf
ok 1659 1205b02314d9
ok 1660 a597436c3ae9
not ok 1661 3d66135e74b6
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen23.bats, line 599)
#   `x    :=  1    +  -3    ' '{x → -2}'' failed
# if (z  -  -3   =  x    ∨1     *   y   <   A    - z)    then 
# 
# skip     else  
#   if false   then 
# 
# c   :=     3     -x else skip   ;
# if (true  ∧    3 -     -4 =   x  * 2)      then      if (-3    =    z -     1   ∨  (2 +     N8) -     1   =  c  *     -4)  then  
#   q:=    -2    +-3 else z  :=   z   +     z else 
# 
#  x    :=  1    +  -3     = {x → -2}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 228 (Just (Tokens ('-' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (z  -  -3   =  x    \8744\&1     *   y   <   A    - z)    then \n\nskip     else  \n  if false   then \n\nc   :=     3     -x else skip   ;\nif (true  \8743    3 -     -4 =   x  * 2)      then      if (-3    =    z -     1   \8744  (2 +     N8) -     1   =  c  *     -4)  then  \n  q:=    -2    +-3 else z  :=   z   +     z else \n\n x    :=  1    +  -3    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 1662 160b3df707ed
ok 1663 73647d7979a9
ok 1664 ec5505e5b09c
ok 1665 b83bf7ca52f9
ok 1666 be593e80aa0c
ok 1667 c937b6b98bdd
ok 1668 1bdbc99b98f3
ok 1669 d626d65cad4d
ok 1670 986804c99e0d
ok 1671 bb667305d7bd
ok 1672 c504aff26abe
ok 1673 7af956914868
ok 1674 ee1ae4c67616
ok 1675 965220c36ee6
ok 1676 b9a6fa909bf4
ok 1677 fc6485879d6b
ok 1678 f53adb8a4ec2
ok 1679 e28121c4fab5
ok 1680 a5b03f5b792c
ok 1681 f2bedee58121
ok 1682 a6499d6fd8db
ok 1683 c76fa1e6522f
ok 1684 b60e29338c6d
ok 1685 3fec04026231
ok 1686 5bc5aef482ce
ok 1687 5524b3495c2d
ok 1688 2525190716a1
ok 1689 7fe115cdf9cc
ok 1690 2a88254eac26
ok 1691 8fb48a7bbecc
ok 1692 1be023bf1709
ok 1693 2f59cc94a350
ok 1694 8ff64f952483
ok 1695 70eef2d88039
ok 1696 1e0ae9672436
ok 1697 2c68b7f5b753
ok 1698 b34b2a009ceb
ok 1699 427f8aacc33f
ok 1700 a07f600a3307
ok 1701 ddb3ca100c75
ok 1702 8e4d2712cd63
ok 1703 dfd258eaa76c
ok 1704 1ca2756f318d
ok 1705 4dda5acb241f
ok 1706 edf84cee0997
ok 1707 1d56473b88f3
ok 1708 a950891892df
ok 1709 db06133d4952
ok 1710 041b68ee3b8b
ok 1711 dd137f76733d
ok 1712 10143fe87a97
ok 1713 0a76f65c7a13
ok 1714 d36792e4c3d4
ok 1715 374402bb5b9e
ok 1716 ceb105e19002
ok 1717 0ddf13b510ba
ok 1718 92b23f249750
ok 1719 d161aee866bf
ok 1720 2f46ed782454
ok 1721 0b088b834f6e
ok 1722 40034f62dd98
ok 1723 f0b266bc54d7
ok 1724 7dd9e4f75a04
ok 1725 6a341c090af4
ok 1726 49279a48aed2
ok 1727 e7eca298b5cc
ok 1728 4d7a591ffdef
ok 1729 e0f552c28316
ok 1730 ca1c6c32402f
ok 1731 92270dc9a10a
ok 1732 3a4ca38b0eab
ok 1733 c5ebe3362ab8
ok 1734 6b21421ab226
ok 1735 44f7ec35ef97
ok 1736 43fccb789fb6
ok 1737 8b5e1c394ede
ok 1738 7591df0d848b
ok 1739 ba0b03639369
ok 1740 000f5b16e4a9
ok 1741 a95a7db01c94
ok 1742 e18ad7918036
ok 1743 152a2c424ff6
ok 1744 2756effa22d6
ok 1745 69bac2900d3e
ok 1746 55d625107d78
ok 1747 571f123f01ca
ok 1748 6248ad7b6074
ok 1749 74147619139f
ok 1750 89843ba7b6a8
ok 1751 e7220c60aa33
ok 1752 e0a43ed5e9ae
ok 1753 3a671bf6c3ee
ok 1754 dba5223f84d0
ok 1755 9ef0ea9b37c9
ok 1756 c4d14dac7a49
ok 1757 7789b42509ad
ok 1758 c78f40d4eb80
ok 1759 1333767a3696
ok 1760 ac310af44e0d
ok 1761 08033239e07c
ok 1762 5734b38fa3dd
ok 1763 eb60418bf528
ok 1764 5db6aac0d10c
not ok 1765 b91a376d11b1
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen24.bats, line 674)
#   `y:=     x    -   mQ else   o :=    4    - 3    ' '{o → 1}'' failed
# while (¬(-2    <   NR     -   y))   do  if (y =  (2 -     y)    *  2∧false) then 
#  x  :=    1   --3   else 
# 
#  
# 
# z   :=     y    *x ;
# if (-4   -    -3     <a     -    x ∧    2   =  x    *  -1)      then 
# y:=     x    -   mQ else   o :=    4    - 3     = {o → 1}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 64 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while (\172(-2    <   NR     -   y))   do  if (y =  (2 -     y)    *  2\8743false) then \n x  :=    1   --3   else \n\n \n\nz   :=     y    *x ;\nif (-4   -    -3     <a     -    x \8743    2   =  x    *  -1)      then \ny:=     x    -   mQ else   o :=    4    - 3    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 1766 c792f2c8e201
not ok 1767 9423e8fabc66
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen24.bats, line 692)
#   `while -2- -2   < 3  * y     ∧z   *  -2< F   *   x    do   skip    ' '{z → 0}'' failed
# if (3 *-2 =   0    -    1     ∧  y   +   y<     1   -     z)    then  if ((y  -   -1)    *-3 <-4 +R   ∨    y +    z    =   y     *     x)  then 
# 
# skip     else     skip   else 
# 
#   
# z     :=    -2     *   y ;   
# 
# if (¬false)  then skip   else  
# 
#  while -2- -2   < 3  * y     ∧z   *  -2< F   *   x    do   skip     = {z → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 93 (Just (Tokens ('<' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (3 *-2 =   0    -    1     \8743  y   +   y<     1   -     z)    then  if ((y  -   -1)    *-3 <-4 +R   \8744    y +    z    =   y     *     x)  then \n\nskip     else     skip   else \n\n  \nz     :=    -2     *   y ;   \n\nif (\172false)  then skip   else  \n\n while -2- -2   < 3  * y     \8743z   *  -2< F   *   x    do   skip    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 1768 b5494a62979e
ok 1769 1ea8a3b8bd45
ok 1770 1e00055d1721
ok 1771 f47b0ff1bf42
ok 1772 dcd28fc9b9c3
ok 1773 6d42be1deebe
ok 1774 d73bd4e1800b
ok 1775 ad192943e0f4
ok 1776 df2ae87397e3
ok 1777 483672cbb10e
ok 1778 cf80dcbe5918
ok 1779 fa7fbcd35609
ok 1780 5d1952b8da15
ok 1781 354c436d2300
ok 1782 4568f34e655b
ok 1783 4527d4c17d32
ok 1784 f0b19dd31dad
ok 1785 e33156be099c
ok 1786 ce40919bb279
ok 1787 857af61b2f1f
ok 1788 2810432a5afb
ok 1789 eec8e1492c74
ok 1790 8a26be22deba
ok 1791 dfea32373a2a
ok 1792 885d3ceed925
ok 1793 c720f6c88023
ok 1794 a1746bbc65f6
ok 1795 f02745a62988
ok 1796 39db70e9e277
ok 1797 b76116e92ae2
ok 1798 c68492ac73c2
not ok 1799 a78c1fc41b6d
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen24.bats, line 1013)
#   `skip ' '{z → 0}'' failed
# if (x    - -4  = x+    x  ∧  x+ 3 < -2 -     -3)    then   while (¬(w    -    -1  =     z    *     1)) do 
# 
# skip  else 
# 
# 
# z     :=     l +     x    ;  if (x+    W   =    1   -    x    ∧     -1*2 <   (y   -  3)     *  y)    then    Tc  :=   y     +  -1     else 
#   
# skip  = {z → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 214 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (x    - -4  = x+    x  \8743  x+ 3 < -2 -     -3)    then   while (\172(w    -    -1  =     z    *     1)) do \n\nskip  else \n\n\nz     :=     l +     x    ;  if (x+    W   =    1   -    x    \8743     -1*2 <   (y   -  3)     *  y)    then    Tc  :=   y     +  -1     else \n  \nskip \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 1800 7891bcf566eb
ok 1801 253460ae73ae
ok 1802 1f97ec209ec2
ok 1803 0f9c62fa1e7a
ok 1804 55d8e9de7316
ok 1805 7340a5e1b701
ok 1806 c360bc13eacd
ok 1807 554f86a3269d
ok 1808 5120d8b3acdc
ok 1809 cd08bd9f0305
ok 1810 c9d302a65f12
ok 1811 d60b23d356e4
ok 1812 5ae935ba7224
ok 1813 beceb0464c2b
ok 1814 7dbca51a24e9
ok 1815 0eb97018face
ok 1816 448ce062ca0e
ok 1817 e8361be3772a
ok 1818 4858e5510e93
ok 1819 7490662ba4df
ok 1820 770c4d16bc81
ok 1821 ca0c35f099ab
ok 1822 4af8b0382ab9
ok 1823 c5040e3edce3
ok 1824 c82e4a9cf462
ok 1825 03f02adb9d63
ok 1826 743b4b3f0af8
ok 1827 ed3088512dc2
ok 1828 4bf927367825
ok 1829 e67db98637d4
ok 1830 57a9617afd87
ok 1831 35b90ec6ffa3
ok 1832 fa1973fcfcb5
ok 1833 db55df25523f
ok 1834 0b878dce2a85
ok 1835 c6368ed91a98
ok 1836 a95742263095
ok 1837 c55c1827148e
ok 1838 68ec6310f5ff
ok 1839 4077dd5cb5c0
ok 1840 bcddae7a6962
ok 1841 c141e5e74743
ok 1842 97b2b817bf4f
ok 1843 b4483fa7d72f
ok 1844 b723aa7f2ac1
ok 1845 96bf15a85ed6
ok 1846 027e509e1a92
ok 1847 7335e7c432e6
ok 1848 dfc426e33e40
ok 1849 81c8e86a7bc5
ok 1850 c2dcfd43c597
ok 1851 8e9062259e57
ok 1852 472731c6efbb
ok 1853 54a1f50d1e7c
ok 1854 a7c5e5f80d2f
ok 1855 9ea2193e4fd2
ok 1856 bd4cf169a815
ok 1857 1c76c1619446
ok 1858 b16607adf008
ok 1859 64c020a2075d
ok 1860 043c6004d078
ok 1861 7f489b9bed5f
ok 1862 89b5006ed926
ok 1863 12b4cbabec75
ok 1864 cc7f708921d2
ok 1865 ff4dcc9ef963
ok 1866 c2e1fa1c5061
ok 1867 49fc91b6d741
ok 1868 97645036e873
ok 1869 bdb0b7e24507
ok 1870 e16b51cf9596
ok 1871 fb5ef20bf188
ok 1872 e3ee658d9a55
ok 1873 26f7906c6cdb
ok 1874 30d8f2d5c5f5
ok 1875 88a75dd2ce17
ok 1876 816919f27330
ok 1877 07c4b2f91734
ok 1878 571f9a0b1d50
ok 1879 24a0e13f405b
ok 1880 f63d63f15739
ok 1881 f0801728980c
ok 1882 b2c449f5f314
ok 1883 0d4796ddcfa0
ok 1884 6d49ee3148ed
ok 1885 c3410a593c59
ok 1886 b7953a0b2a38
ok 1887 13bd8f2a7e29
ok 1888 b6646fb06e8a
ok 1889 1293b144ef10
ok 1890 17a8d2191128
ok 1891 1179b47621bc
ok 1892 51a9d47526da
ok 1893 620c5c0d63d1
ok 1894 fff4c4b3430d
ok 1895 28ff85cc16b6
ok 1896 eb16630a954f
ok 1897 2306d708033d
ok 1898 ec3b07a95982
ok 1899 8de5e7cddc71
ok 1900 954174f90dc4
ok 1901 47e2cf6daf2b
ok 1902 eecc7fb64289
ok 1903 5eca38c878c4
ok 1904 2153a71bcb22
ok 1905 32c8d684491f
ok 1906 65873482f810
ok 1907 241aadabaae0
ok 1908 7741cda8649d
ok 1909 90f7b250bd3e
ok 1910 33125af553a9
ok 1911 885970353c3c
ok 1912 45540985cb24
ok 1913 2a623d38726c
ok 1914 a220232eb8ff
ok 1915 58a37c896bbc
ok 1916 4818bca8059e
ok 1917 ebc6a23531eb
ok 1918 9b3b1e211278
ok 1919 0dff72e7a729
ok 1920 76e1765bc8bf
ok 1921 30ecba51c339
ok 1922 f02dcd027eb1
ok 1923 350a1117e288
ok 1924 42c45c7d2ca0
ok 1925 92abcb973269
ok 1926 cd4b96210d6e
ok 1927 a9e65e3618d9
ok 1928 7034add14aea
not ok 1929 be4116ad11d6
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen26.bats, line 291)
#   `Rz   := -4 +   -4 ' '{z → -2}'' failed
# if (¬(P     -x     <4+     0))   then 
# 
# X     :=    1   else if (¬(x*    -1  =z *  -1))   then   
# 
# y     :=  y  - z   else 
# skip  ; 
#  if (¬(n     *  0   <  -3*   2))  then 
# 
# 
# 
# z:=   -2   -   x else while z  *     4    < 4     -x     ∧    (Wi  + mi) *  z =z    -   -2  do 
# Rz   := -4 +   -4  = {z → -2}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 249 (Just (Tokens ('*' :| " "))) (fromList [Tokens ('\172' :| ""),Tokens ('\172' :| "\172"),Label ('b' :| "ool expression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172(P     -x     <4+     0))   then \n\nX     :=    1   else if (\172(x*    -1  =z *  -1))   then   \n\ny     :=  y  - z   else \nskip  ; \n if (\172(n     *  0   <  -3*   2))  then \n\n\n\nz:=   -2   -   x else while z  *     4    < 4     -x     \8743    (Wi  + mi) *  z =z    -   -2  do \nRz   := -4 +   -4 \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 1930 a7ac0c58a566
ok 1931 883b9c64ed3f
ok 1932 4e0fd062065b
ok 1933 60afb6d95a67
ok 1934 c6c355bf6ffd
ok 1935 f24ac057437b
ok 1936 46bd237d186e
ok 1937 09e35db0713a
ok 1938 a32432cf584c
ok 1939 80e9c93f76ff
ok 1940 2c54c42b3f3d
ok 1941 164b04961402
ok 1942 ec1f490805b4
ok 1943 bf883073098f
ok 1944 27a2b10364c3
ok 1945 f194b33655d5
ok 1946 14ee7ccb9c07
ok 1947 22a681202672
ok 1948 206df5ac7a04
ok 1949 28a7f37877c7
ok 1950 080581b0a509
ok 1951 37b86ddc3d51
ok 1952 e3fc145fa2f2
not ok 1953 43057667999f
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen26.bats, line 530)
#   `y  :=     y* -4    ' '{y → 0}'' failed
# while (¬(-2 - 1< (3 -     x)    *  4))    do 
#    
# z :=    v    ; 
#  if (y     + -1   < nm+ 2)   then 
# 
# 
# 
# 
# y    :=     z    * 2   else   
# 
# 
# y  :=     y* -4     = {y → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 32 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while (\172(-2 - 1< (3 -     x)    *  4))    do \n   \nz :=    v    ; \n if (y     + -1   < nm+ 2)   then \n\n\n\n\ny    :=     z    * 2   else   \n\n\ny  :=     y* -4    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 1954 14953ffb68a9
ok 1955 7dc2c85dee6f
ok 1956 301c59b437be
ok 1957 4fede6c56a19
ok 1958 a20416477f83
ok 1959 4e87b29746e1
ok 1960 cc1f8379f19c
ok 1961 6f9710ada3e7
ok 1962 f2291e680181
ok 1963 e0c38c115962
ok 1964 af96a6b70435
ok 1965 4feb8c45b72b
ok 1966 8ebc5bfa790a
ok 1967 f4f0810b049f
ok 1968 6c761c7554c4
ok 1969 a2dbbefb6620
ok 1970 f8ca2a02131e
ok 1971 784d3a3346b5
ok 1972 ec5541a6b92f
ok 1973 57ec1c839f9d
ok 1974 9c402215d579
ok 1975 17da3b6ab840
ok 1976 b127046f6b24
ok 1977 12e83cbddd8b
ok 1978 8f81f0778e7a
ok 1979 d4ba40e0688f
ok 1980 9b34f4ffdf6a
ok 1981 d258e878e3c1
ok 1982 a80067775eac
ok 1983 9b6d20cc6537
ok 1984 14f28421d900
ok 1985 26c79565ac29
ok 1986 ea100741db42
ok 1987 b583628d5208
ok 1988 521f133e99b3
ok 1989 e71262cbdbc7
ok 1990 8dfef21c9d14
ok 1991 669b7afaa630
ok 1992 c1fd4aac9218
ok 1993 84fd882a2743
ok 1994 ca2e57cac4a7
ok 1995 1d8b2401d5c7
ok 1996 f653abe1cab7
ok 1997 1ecdf407ff88
ok 1998 df7d5c5c003d
ok 1999 7a6cceef86cf
ok 2000 afe1eb23e05a
ok 2001 271a62a822b9
ok 2002 642a6db23c36
ok 2003 0f4d80871d00
ok 2004 af6d3262dac1
ok 2005 9a36ddc97839
ok 2006 7c774a3a19e9
ok 2007 77e057c150a5
ok 2008 267b79b06c51
ok 2009 0e2ad89ead51
ok 2010 0052faa5b23e
ok 2011 9f739dc3bd2e
ok 2012 fcbc25abd5d6
ok 2013 dd5f22ea53bb
ok 2014 b295f7bdbfa0
not ok 2015 5a808b8fc9ce
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen27.bats, line 117)
#   `y    :=   E-     x  ' '{y → 0}'' failed
# if (4    = (y     -  x)  *    y∧ y    *   2 =    y     + z)   then   
#  x :=     -1     +  -1     else  
#  
#  y := d     -x  ;
# if (1* y     =   -3    *   1   ∧     true)    then 
#  skip else 
# y    :=   E-     x   = {y → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 25 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (4    = (y     -  x)  *    y\8743 y    *   2 =    y     + z)   then   \n x :=     -1     +  -1     else  \n \n y := d     -x  ;\nif (1* y     =   -3    *   1   \8743     true)    then \n skip else \ny    :=   E-     x  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 2016 d07f7d453661
ok 2017 c80ae318bc17
ok 2018 93bc85e47d35
ok 2019 19b62007dd23
ok 2020 442d652c34a1
ok 2021 8eb31b503e56
ok 2022 09c273b4fd10
ok 2023 73f9211e55cc
ok 2024 25519a9ec2f2
ok 2025 36962bed9c61
ok 2026 cb01a49d5c93
ok 2027 ebb036277c68
ok 2028 1dacc509f2db
ok 2029 b8a433ab2de7
ok 2030 3f9bd05b12a9
ok 2031 ab1e9a620dcc
ok 2032 a70c605449df
ok 2033 32d669d91ace
ok 2034 0a1df556595f
ok 2035 ab8bce7a1a84
ok 2036 abd73d71aa1d
ok 2037 3e8e9db202e4
ok 2038 c72c184ff66e
ok 2039 93f711b6d791
ok 2040 f57260dafe60
ok 2041 927d3f57474e
ok 2042 c82982965c64
ok 2043 506d77d36eac
ok 2044 817ee808a467
ok 2045 b8bf4c44b7e7
ok 2046 640ba530292f
ok 2047 fd20e27b00e0
ok 2048 996c8e205a24
ok 2049 c6f180a1e53a
ok 2050 33dd90523e18
ok 2051 7f15cc97f29c
ok 2052 033486c124c7
ok 2053 350292babf70
ok 2054 8af32e764b73
ok 2055 956dab378636
ok 2056 c0d5832dcbb6
ok 2057 c34f54c85cb4
ok 2058 c613e7dc2ebd
ok 2059 ce2d7cf00bc6
ok 2060 b76dea24eaca
ok 2061 113a06687c2b
ok 2062 f95c12e35942
ok 2063 f53da53ac1b6
ok 2064 b88f995b224c
ok 2065 6cc7fc1468ab
ok 2066 cc1ce0a82179
ok 2067 f5221a0a2658
ok 2068 2ab0ec6b0a57
ok 2069 b82837baaf9a
ok 2070 28e337456d93
ok 2071 108e0f864dcf
ok 2072 f198700c4dcf
ok 2073 d127a0eba823
ok 2074 16cfdb011de9
ok 2075 9697562178fb
ok 2076 fd759dac1893
ok 2077 ac9e39b521d1
ok 2078 3549fd6230b2
ok 2079 875b3ee20e17
ok 2080 a9977f12cccf
ok 2081 ca56f36b0e7e
ok 2082 c6c473daf261
ok 2083 3824558926ec
ok 2084 f0576e539ce4
ok 2085 254e891fbaac
ok 2086 5e1760c7a0b4
ok 2087 4dee265f95a1
ok 2088 5ad96210b359
ok 2089 bd82a6e5d510
ok 2090 4222a1e61b1b
ok 2091 863dc037aced
ok 2092 46b0cce402a1
ok 2093 deb6ed3bdc53
ok 2094 e6875977b31f
ok 2095 b42f1575d524
ok 2096 cb73c6e39cd1
ok 2097 912fe3efee16
ok 2098 175dd9171892
ok 2099 2dbc67c6784b
ok 2100 272b51cceeb4
ok 2101 81de10021a82
ok 2102 249f0639b741
ok 2103 ea4cd6cd89f4
ok 2104 a95a7db01c94
ok 2105 cb701cfab3a4
ok 2106 6349152c8511
ok 2107 825121d97b10
ok 2108 6322797dab28
ok 2109 0e5b9918fc6a
ok 2110 4d0d9f498d22
ok 2111 5dea729409b5
ok 2112 c7e16815bdd6
ok 2113 d72e17d61941
ok 2114 7503ed35bedd
ok 2115 0699447bb471
ok 2116 6d54e5d56da8
ok 2117 6bedcf6aca23
ok 2118 79701342588c
ok 2119 c9a37a72688c
ok 2120 e4dc8e99aa8c
ok 2121 e6b0b0ca3b12
ok 2122 a3c93dbcb08e
ok 2123 18243fcbd8b3
ok 2124 a3b64ed5aa42
ok 2125 bec02d1b5bc8
ok 2126 f375199d7b32
ok 2127 da24e636ba31
ok 2128 3dd7f145fca1
ok 2129 2e5ca13b62cb
ok 2130 3b56b0b3e6c9
ok 2131 58f9b14b33e6
ok 2132 a122ab95bdd5
ok 2133 3098d47f502c
ok 2134 b2769b521553
ok 2135 378482cd1fb8
ok 2136 fb2d02d20c87
ok 2137 75fd23d66b3c
ok 2138 124aa1926939
ok 2139 a11e7040c6f4
ok 2140 ea769e719f15
ok 2141 c8ef1fcffaad
ok 2142 4ba9fce84856
ok 2143 f136d59e75da
ok 2144 836f91a44238
ok 2145 8d45b47722bd
ok 2146 deb6f8f68796
ok 2147 29fbe17f2d8d
ok 2148 d8cd29d60a04
ok 2149 0556e08a15f0
ok 2150 da8b61004236
ok 2151 690c67dcc9b7
ok 2152 95c1233349b2
ok 2153 58eaea762908
ok 2154 393aa368be5b
ok 2155 7e201347efe5
ok 2156 bd03eca90b5c
ok 2157 107a9c33878b
ok 2158 d669faa6f14c
ok 2159 aba6ca47a77e
ok 2160 2bc2e36f9f05
ok 2161 1467f9278245
ok 2162 1491aac2e6d2
ok 2163 5d52bf48ebec
ok 2164 e5b15b9a036e
ok 2165 87e2ab763ad5
ok 2166 22c8af467590
ok 2167 63bba69d5409
ok 2168 43c241ca934c
ok 2169 5a874fbb6249
ok 2170 6adb4c06110d
ok 2171 6b37e530bc0b
ok 2172 c29936a91c1f
ok 2173 1dbd10119886
ok 2174 5ccfdaee0ece
ok 2175 297e325edf9f
ok 2176 cf42af343d6c
ok 2177 cce447b35574
ok 2178 76f7b4400f04
ok 2179 d4668efdacd6
ok 2180 d1d6545a2614
ok 2181 59682cb23881
ok 2182 25bb5d4c1738
ok 2183 6a2a4ce322d9
ok 2184 d020587e2afe
ok 2185 7c333034c81b
ok 2186 f6c78d783566
ok 2187 7484fcc30e84
ok 2188 6f6d6cbbe71c
ok 2189 c2a4889e9f07
ok 2190 a6c5fc7b6e25
ok 2191 d1ef3d733318
ok 2192 14ff36e95c6b
ok 2193 0108ffd15a82
ok 2194 d26d239cdda6
ok 2195 38d2f8ec1a35
ok 2196 fa362208f2be
ok 2197 0130361b2d03
ok 2198 ecbdd6a145b8
ok 2199 21fc03ae6f51
ok 2200 0e4ebc3b2eef
ok 2201 15f9a4c9b77f
ok 2202 2f1013855fdd
ok 2203 6233a4da6c2b
ok 2204 88f82c5ce0e3
ok 2205 bfb0c6b99efa
ok 2206 98da4b2f93b0
ok 2207 f1300c499a50
ok 2208 a82cb7a93cf0
ok 2209 429434b5f2d1
ok 2210 a7b536039b30
ok 2211 7e1d3bc10970
ok 2212 363454684e3f
ok 2213 5cba3303cb23
ok 2214 42cd8bd79474
ok 2215 a4b3242d4878
ok 2216 b9d8735ab7de
ok 2217 ef804359f87f
ok 2218 1bc176fc23eb
ok 2219 bf026f6dfbaa
ok 2220 f52caf3df516
ok 2221 dfae94eeafe9
ok 2222 70cecf3e3835
ok 2223 3fa780bdbf02
ok 2224 2fc4edbb1e0c
ok 2225 819ffa54917a
ok 2226 88681e596f6f
ok 2227 7949ac3d1945
ok 2228 7c52cf40ede3
not ok 2229 330fa337337b
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen29.bats, line 287)
#   `y := 1  -  2    ' '{y → -1, z → 0}'' failed
# if (0 = 0  +   Y0    ∧     (0   - 4)     *     y   =     K9     +  1)     then 
#    while -3   -  x     <  z  -    4     ∧4    - -2     = -1      do 
# 
# 
# 
# skip  else 
# z  :=   0    ;  
# 
# if (-4   -     -4 <0     +    1    ∧     -2     + -2 =x     *   1)      then   
# while true     ∧ x =  x+     z do  
# 
# z:=  A   +   z     else 
#   y := 1  -  2     = {y → -1, z → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 41 (Just (Tokens ('*' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (0 = 0  +   Y0    \8743     (0   - 4)     *     y   =     K9     +  1)     then \n   while -3   -  x     <  z  -    4     \8743\&4    - -2     = -1      do \n\n\n\nskip  else \nz  :=   0    ;  \n\nif (-4   -     -4 <0     +    1    \8743     -2     + -2 =x     *   1)      then   \nwhile true     \8743 x =  x+     z do  \n\nz:=  A   +   z     else \n  y := 1  -  2    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 2230 bbff4b908157
ok 2231 2c23619698d3
ok 2232 4b3bae0b07d3
ok 2233 69924b561d7b
ok 2234 6f1adfe19b24
ok 2235 1ecea941a10c
ok 2236 1fdbbf0fb09c
ok 2237 f501f3ac0cbf
ok 2238 5d422b67b0be
ok 2239 865b6a040ddd
ok 2240 404dc50dcb50
ok 2241 25b556717fa1
ok 2242 def439f0a622
ok 2243 356e7d505cd4
ok 2244 cdacbf85b3d1
ok 2245 37879804eaeb
ok 2246 0d60c8ac638b
ok 2247 1bd7fbf9ee1c
ok 2248 a09d7b5100ab
ok 2249 41444e550fb6
ok 2250 8a116ccf9d8c
ok 2251 6578a9aec737
ok 2252 b398a0a10912
ok 2253 33314a7a077c
ok 2254 32898df5aa0a
ok 2255 815300a51cc8
ok 2256 ce7ce59b2851
ok 2257 5568629f3e1f
ok 2258 feb1966941e2
ok 2259 192f46260d5e
not ok 2260 31bd4af67e7d
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen29.bats, line 619)
#   `x     :=  z+ 1     ' '{x → -5}'' failed
# if (-3    <(z+  0)     *-3)    then  
#  skip    else   z     :=     z    +-2  ;
#  
#  if (¬false)     then  
#   
# x :=  -4    -     1   else 
# 
#  x     :=  z+ 1      = {x → -5}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 23 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (-3    <(z+  0)     *-3)    then  \n skip    else   z     :=     z    +-2  ;\n \n if (\172false)     then  \n  \nx :=  -4    -     1   else \n\n x     :=  z+ 1     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 2261 7f1a7f0b3d71
ok 2262 186b8d7fa09b
ok 2263 4c421b82143b
ok 2264 eb39b5ae7814
ok 2265 bf82d7e62193
ok 2266 df42f90f6f3a
ok 2267 9bbe4a09ad7b
ok 2268 e680114e1f0d
ok 2269 af171c34090f
ok 2270 f35802dfde44
ok 2271 eb63cdb70ff8
ok 2272 0fd1f0e2e764
ok 2273 e5b6c83308a7
ok 2274 ff47f4ec5f63
ok 2275 84e50618bd8a
ok 2276 d82065787a38
ok 2277 ccbb742d148f
ok 2278 050f735f823b
ok 2279 a9b623820fd6
ok 2280 665986440983
ok 2281 8a185fddb8f9
ok 2282 1ac99226c7c2
ok 2283 0f6cbafd73f0
ok 2284 1cf07baa47db
not ok 2285 8efe64cb7d09
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen29.bats, line 877)
#   `skip' '{}'' failed
# if ((x   +    y)  * 0<hT   *    2  ∧ t    +  y<-2   +     -1)   then if (4+  y  =     B    *z    ∨ true)      then    skip     else   
# 
# y    :=   3     else 
#  
#   skip    ;
# if (true ∧y *     1<    4    *  y)     then 
#    skip   else  
#  
# skip = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 21 (Just (Tokens ('<' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if ((x   +    y)  * 0<hT   *    2  \8743 t    +  y<-2   +     -1)   then if (4+  y  =     B    *z    \8744 true)      then    skip     else   \n\ny    :=   3     else \n \n  skip    ;\nif (true \8743y *     1<    4    *  y)     then \n   skip   else  \n \nskip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 2286 6c510e8a3d64
ok 2287 16185974bc28
ok 2288 33a687869853
ok 2289 0233d147fa4d
ok 2290 037975b1e19c
ok 2291 2afbe4f565e8
ok 2292 38d426160d7f
ok 2293 31209dc95321
ok 2294 3daa6b4cb27f
ok 2295 e1f9f33a598d
ok 2296 458d09600dd6
ok 2297 f013ea204f92
ok 2298 21673a8e09af
ok 2299 5606a7b6123c
ok 2300 9fc7ea8a411a
ok 2301 1afb10576cae
ok 2302 970ce7a0c549
ok 2303 839c49277c30
ok 2304 28ec8cf41e69
ok 2305 2591747b49ee
ok 2306 1ef34d82e56f
ok 2307 e881fa6e1469
ok 2308 1476420098d6
not ok 2309 ae78f671a8bb
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen3.bats, line 84)
#   `z    :=    4    +   x' '{}'' failed
# if ((-2  +  -4) *y     =2 -  4 ∨     -4   -     y <  y     *    UP)  then 
# 
#   skip else  
# 
# y     :=   -2   -    XN;if (false ∨    true) then 
# 
#  
#  if true    then 
# skip   else   
# 
#  x :=-3 -     -3      else   
#   z    :=    4    +   x = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 23 (Just (Tokens ('=' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if ((-2  +  -4) *y     =2 -  4 \8744     -4   -     y <  y     *    UP)  then \n\n  skip else  \n\ny     :=   -2   -    XN;if (false \8744    true) then \n\n \n if true    then \nskip   else   \n\n x :=-3 -     -3      else   \n  z    :=    4    +   x\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 2310 d255c79a28d7
ok 2311 d06218f98a39
ok 2312 f697c4d25f2e
ok 2313 6beec90accec
ok 2314 832192f3f248
ok 2315 74558b2aa8f8
ok 2316 ce00f73b05b0
ok 2317 4bb776ca0b55
ok 2318 baa4b282ee95
ok 2319 dab9ae666760
ok 2320 459b763f131d
ok 2321 cd4c8103271d
ok 2322 d53e5efab807
ok 2323 3a14211141dd
ok 2324 f6fe76a88314
ok 2325 f722ffc22b9c
ok 2326 26f79b729183
ok 2327 54df573f6e62
ok 2328 33bd7ce3839f
ok 2329 28a72f083b4d
not ok 2330 2c7cd0ab06cb
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen3.bats, line 306)
#   `skip     else    skip     ' '{}'' failed
# while z    + z<    z-    u   ∧true    do  x:=    -1 -    4   ; 
# 
# if (¬false)      then 
#  
# if (¬(2  +    z  <     z  -   x))     then 
#   skip     else 
# 
# 
# while 0     *     S8  <  (x -    4)     -   -4     ∨ K+     kl<    K    *  y  do 
# 
#  skip     else    skip      = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 193 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "while z    + z<    z-    u   \8743true    do  x:=    -1 -    4   ; \n\nif (\172false)      then \n \nif (\172(2  +    z  <     z  -   x))     then \n  skip     else \n\n\nwhile 0     *     S8  <  (x -    4)     -   -4     \8744 K+     kl<    K    *  y  do \n\n skip     else    skip     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 2331 d5999be317b8
ok 2332 089b01d73fd2
ok 2333 acab0838d3c5
ok 2334 7b93c425c0b6
ok 2335 590cc651e830
ok 2336 c22ac60a93f2
ok 2337 139baa7d6933
ok 2338 06c317ef2c2c
ok 2339 fc7990c92606
ok 2340 185402248910
ok 2341 bae33625b381
ok 2342 73785697f25f
ok 2343 c334aff8c541
ok 2344 f82333f1efb3
ok 2345 425998e20c7c
ok 2346 72d659b771aa
ok 2347 7ace4e23ed9e
ok 2348 c2435a1d3c28
ok 2349 32ffcb378697
ok 2350 63867625a1e1
ok 2351 b997d52f1ce6
ok 2352 7bccab60edb7
ok 2353 9a2db825fa13
ok 2354 4a5972c9757e
ok 2355 3032dd037a2c
ok 2356 c30d875447d7
ok 2357 6acb4e2ae33c
ok 2358 86e9d81bce6b
ok 2359 05494c51ce0c
ok 2360 f4c3d8f4e0fc
ok 2361 616ece267fbd
ok 2362 691ee9811c35
ok 2363 54c874b6f1ec
ok 2364 4b3d2911cc38
ok 2365 5b0d9f6076a4
ok 2366 702e4b4fa54b
ok 2367 7583eb4e650f
ok 2368 0d2ba37524b8
ok 2369 771c3833e46c
ok 2370 c0cefa118bfc
ok 2371 dff922db2bce
not ok 2372 3773c13dfd43
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen3.bats, line 737)
#   `skip ' '{y → 0}'' failed
# if (0< z  *0  ∨     y  +2    <    z     -   4)    then 
# 
# 
# 
# w    :=  0   +4     else  
#  y:= 0    *     3    ;while false     ∧0    <  (x+z4)     *     4      do   if (¬(0     -   -2    =   1  -    y))    then 
# 
# z  :=  -3  -    -1    else 
#   skip  = {y → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 144 (Just (Tokens ('*' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "if (0< z  *0  \8744     y  +2    <    z     -   4)    then \n\n\n\nw    :=  0   +4     else  \n y:= 0    *     3    ;while false     \8743\&0    <  (x+z4)     *     4      do   if (\172(0     -   -2    =   1  -    y))    then \n\nz  :=  -3  -    -1    else \n  skip \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
not ok 2373 4de239365cf6
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen3.bats, line 748)
#   `T2:=     x  ' '{T2 → 0}'' failed
# if (-2  + y     =4 +3∧ -3   *   z   = x     *     Mz) then 
# skip     else  
# 
#  if ((3     +     z) *  y   <     -1+     z   ∨     z    *     -2=   -4  -    y) then  
# 
# 
# x:=     W0-   -2  else 
# T2:=     x   = {T2 → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 105 (Just (Tokens ('<' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (-2  + y     =4 +3\8743 -3   *   z   = x     *     Mz) then \nskip     else  \n\n if ((3     +     z) *  y   <     -1+     z   \8744     z    *     -2=   -4  -    y) then  \n\n\nx:=     W0-   -2  else \nT2:=     x  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 2374 863051142462
ok 2375 ca1caebfa9e8
ok 2376 ec1967361a96
ok 2377 d7800ecd747f
ok 2378 ff42cc723e0a
not ok 2379 cc42f69dc030
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen3.bats, line 822)
#   `y     :=     -1   -     2 ' '{}'' failed
# if (J - 2 =  2    ∧-4     *x<  0    *  -2)     then 
#  
#  while (¬(-3     *  -3=    z     +    K9))      do 
# 
# x    :=     -3 * -3      else 
#    skip     ;
# 
# 
# 
# 
# while x     -   y <     0    - 2 ∧x    - 3     =(z     -    y) *     x      do 
#  
# 
# y     :=     -1   -     2  = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 220 (Just (Tokens ('*' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "if (J - 2 =  2    \8743-4     *x<  0    *  -2)     then \n \n while (\172(-3     *  -3=    z     +    K9))      do \n\nx    :=     -3 * -3      else \n   skip     ;\n\n\n\n\nwhile x     -   y <     0    - 2 \8743x    - 3     =(z     -    y) *     x      do \n \n\ny     :=     -1   -     2 \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
not ok 2380 ab7369e831b5
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen3.bats, line 831)
#   `z     :=   3+z    ' '{z → 3}'' failed
# while o    =3   +    2 ∨1   + 4=    (z  +     2)     -4      do 
# 
#   
# y  :=     1  * y    ;if (true ∧     false)    then   
# x    :=   z    *   x      else 
#  z     :=   3+z     = {z → 3}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 53 (Just (Tokens ('-' :| "4"))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "while o    =3   +    2 \8744\&1   + 4=    (z  +     2)     -4      do \n\n  \ny  :=     1  * y    ;if (true \8743     false)    then   \nx    :=   z    *   x      else \n z     :=   3+z    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 2381 c7d4f2f4fbe2
ok 2382 267af985daee
ok 2383 098b7e021a1c
ok 2384 e0d83edc8e31
ok 2385 25b9d247915a
ok 2386 fb07a80aaa5e
ok 2387 b255c333a97c
ok 2388 2e56f3a82ed7
ok 2389 b9f6b1e06af6
ok 2390 c1bd74bd3d5b
ok 2391 0a82d9a89fc0
ok 2392 fbc6770e0337
ok 2393 1f6ac3f91dec
ok 2394 e9d2295ef588
ok 2395 aa523576162e
ok 2396 9301881e0920
ok 2397 f7665e096673
ok 2398 cd27616047ec
ok 2399 9668783103da
ok 2400 b1af2e3ef84c
ok 2401 32d7b8c08f40
ok 2402 bef89dfb3e31
ok 2403 971f068ca32e
ok 2404 2e71335721e4
ok 2405 689a6e66c327
ok 2406 e4234eeff3f0
ok 2407 18002a7e8ab3
ok 2408 6d29ad128f66
ok 2409 395b044ff5a6
ok 2410 5cdf31af4f55
ok 2411 5e2531f52aab
ok 2412 8796e997b74b
ok 2413 99e0bd44d279
ok 2414 748c40d98a69
ok 2415 d59158a18249
ok 2416 cf02917a7410
ok 2417 c391f89e8041
ok 2418 ffb9bfe040df
ok 2419 791b4e817705
ok 2420 10e42d941f35
ok 2421 6382a1fcebc8
ok 2422 eaac70230b95
ok 2423 565c133dd6c5
ok 2424 b3622be4c470
ok 2425 00d2e52bb84d
ok 2426 38e61c95e846
ok 2427 eb23004df775
ok 2428 8db8bef63200
ok 2429 261c3c206b39
ok 2430 c99cd58eba6a
ok 2431 b666bf3c7b94
ok 2432 4457f3d83364
ok 2433 22e62c266c06
ok 2434 8553889936ab
ok 2435 277938a677a9
ok 2436 7bb5fb3ca972
ok 2437 6e801c9cd22b
ok 2438 736957225365
ok 2439 52228b2b7088
ok 2440 daa23cd509c6
ok 2441 7836b63bd100
ok 2442 e2543edda76d
ok 2443 ffdeb11cad60
ok 2444 cbeb2e88a99f
ok 2445 37539e505015
ok 2446 1c7d7fb504dd
ok 2447 ff202e96d63c
ok 2448 0e898c99dd0d
ok 2449 6f349064ea20
ok 2450 cd8d51ad6d65
ok 2451 dfa0ef863c9c
ok 2452 aa20f3097f96
ok 2453 217c7d2ba129
ok 2454 268f17029488
ok 2455 583e223156f1
ok 2456 877252bcfbb5
ok 2457 f1fe97a7cda2
ok 2458 83b892384eb8
ok 2459 c7e16815bdd6
ok 2460 b411074c4580
ok 2461 1114b1ca9f20
ok 2462 26d77915fffd
ok 2463 180f86e4c7a6
ok 2464 0f38c1391282
ok 2465 a9ee68a5dd5f
ok 2466 01179886f15c
ok 2467 f20dd1a7ddf6
ok 2468 051c12c14340
ok 2469 1641a86cac2e
ok 2470 114de509316d
ok 2471 10d688b486a9
ok 2472 2c27512b8394
ok 2473 a37044949d42
ok 2474 f74de0604642
ok 2475 5445b8875728
ok 2476 a95a7db01c94
ok 2477 1e006e376cb3
ok 2478 a09841bccd08
ok 2479 7c791910ba32
ok 2480 3940368d3f15
ok 2481 fcc9fb2ec375
ok 2482 a945ba6acc07
ok 2483 6a5a682e10de
ok 2484 462c05b51c94
ok 2485 4ffae0025496
ok 2486 232d7df742b9
ok 2487 ff2224a31841
ok 2488 99fe2f2e89b9
ok 2489 c3b6e3ebc470
ok 2490 e656a28194f7
ok 2491 1152b498bd97
ok 2492 639ea50e227f
ok 2493 e5b6a93aec81
ok 2494 43ba8e874ebf
ok 2495 2f5631043610
ok 2496 b68db864e896
ok 2497 486738aea57f
ok 2498 bda89b93eaf2
ok 2499 e6efacdc7ff0
ok 2500 0ca13f88fc41
ok 2501 20596b70b2fa
ok 2502 85a3d02e60df
ok 2503 aa630988bc20
ok 2504 be2c198ba18e
ok 2505 cc7635cc379e
ok 2506 c126bc0d0dde
ok 2507 2174c78c94b4
ok 2508 ff16314d0bf2
ok 2509 f5b548a0ccb5
ok 2510 ec5ce4efdb14
ok 2511 5625b8e05cbc
ok 2512 06cec309f3e4
ok 2513 4733a1052005
ok 2514 cd48168721e3
ok 2515 4943f523ce61
ok 2516 890545803320
ok 2517 9de32d29ebc0
ok 2518 7460c146e21b
ok 2519 1f967613fca9
ok 2520 115394282a82
ok 2521 b56af9d5bc83
ok 2522 100538c1813b
ok 2523 0963446019d4
ok 2524 82a95b59fd2b
ok 2525 a2064aeb487d
ok 2526 8fad5593525a
ok 2527 995b9ef1b042
ok 2528 a58ef637a7d4
ok 2529 3c74d3d3d9bf
ok 2530 fbcb4c357eb3
ok 2531 10f76895ab45
ok 2532 ebcfc61f8cc1
ok 2533 e2d3c2ab9b1a
ok 2534 20061536b423
ok 2535 3b96b4660ec7
ok 2536 c7b11a4dcc08
ok 2537 9fce4a996a27
ok 2538 e1f323023df1
ok 2539 c9ba3afe0e08
ok 2540 9a9ac0b59375
ok 2541 99ebbd631354
ok 2542 e1fe4840e904
ok 2543 c6f5f4caba60
ok 2544 75a18c96df95
ok 2545 2e138910555b
ok 2546 f4081c4cd3ae
ok 2547 0e754e776a7b
ok 2548 92aa586d40c9
ok 2549 f1c6051c655e
ok 2550 0cd794ba3107
ok 2551 8c2ffd71fc76
ok 2552 64cd297728a1
ok 2553 5aa546c30308
ok 2554 0fb9f9e6b108
ok 2555 8ce0b1181748
ok 2556 3b1b63497549
ok 2557 1b40c2ed93e3
ok 2558 fa38782791b2
ok 2559 157b87f66108
ok 2560 b0cedc3d62fd
ok 2561 49e9b73260cb
ok 2562 231ec070812e
ok 2563 aaaffad6c59a
ok 2564 a0bfcda99df8
ok 2565 f3404355f012
ok 2566 eddf34e577e3
ok 2567 c7bce7c0b516
ok 2568 4b314baf75fb
ok 2569 4f4173ee015b
ok 2570 2683ffbd39dc
ok 2571 9aff8534f7b6
ok 2572 ffbbf12ec1b0
ok 2573 6a18355ec85d
ok 2574 9b2fdb78b215
ok 2575 d5ba5429f1ad
ok 2576 525408a7a34b
ok 2577 85ae0a77f3b3
ok 2578 a867050a5651
ok 2579 1c99dcde4184
ok 2580 d1039dad2c37
ok 2581 4a8fe66d9973
ok 2582 8243379b7891
ok 2583 b31d8fc790dc
ok 2584 01bb7ff43c6c
ok 2585 c70925bd08bf
ok 2586 962771d7bbee
ok 2587 e5403d30a87a
not ok 2588 07afdbaf5258
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen31.bats, line 939)
#   `x     :=0 +     y  ' '{y → 4}'' failed
# while y  +1 = -2  -     4 ∧   z    * z   =    x  *  -4     do 
#   
# if (3   *    y    < (L  +z)    * -4∧true) then x    :=    -2   + VF    else 
#  
# 
# z:=     FB    -  y     ;
# if (¬false) then 
# 
# y := 0  + 4      else   
# 
# 
# while x     - z     <   -4-     0     ∨    x   +4   <  0   *  z      do 
# x     :=0 +     y   = {y → 4}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 97 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while y  +1 = -2  -     4 \8743   z    * z   =    x  *  -4     do \n  \nif (3   *    y    < (L  +z)    * -4\8743true) then x    :=    -2   + VF    else \n \n\nz:=     FB    -  y     ;\nif (\172false) then \n\ny := 0  + 4      else   \n\n\nwhile x     - z     <   -4-     0     \8744    x   +4   <  0   *  z      do \nx     :=0 +     y  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 2589 5e8501d23903
ok 2590 958b19aaf2b2
ok 2591 27ae3775418f
ok 2592 38829efcd53e
ok 2593 550325cb45e1
ok 2594 891da8d4751c
ok 2595 862b3616505e
ok 2596 d5a9bce83bf7
ok 2597 bd01862960af
ok 2598 5f932050c73f
ok 2599 b226a2cd03ed
ok 2600 520d4639b416
ok 2601 0e6f2a051520
ok 2602 8d984637c33d
not ok 2603 01fece6d7cbc
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen32.bats, line 22)
#   `skip   ' '{}'' failed
# while true   ∧ x   +   z    =    2     -x   do  f    :=y -     4    ; 
#   if (¬(y   *     y    = (3    +     R)     -    -2))    then skip   else 
# 
# 
# 
# 
# while (¬(x  *  4   =  0))    do 
#  skip    = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 115 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while true   \8743 x   +   z    =    2     -x   do  f    :=y -     4    ; \n  if (\172(y   *     y    = (3    +     R)     -    -2))    then skip   else \n\n\n\n\nwhile (\172(x  *  4   =  0))    do \n skip   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 2604 c61f7429413e
ok 2605 03cd0afda2ea
ok 2606 2f1d147caf27
ok 2607 9891225f5cfd
ok 2608 358dd7ec188c
ok 2609 479fa6d1377c
ok 2610 c19e5b414c87
ok 2611 c4791e5a3b5d
ok 2612 4499b2efbe26
ok 2613 a3b09d88d71c
ok 2614 5552322302b8
ok 2615 fb5b4ace3243
ok 2616 4e6bf81bcff7
ok 2617 20debbc0d6d1
ok 2618 cca1db88799a
ok 2619 b9a075a43a54
ok 2620 a1d9084df232
ok 2621 8fdf1b4e0bdf
ok 2622 da43b8ba3e12
ok 2623 9bda7b581ac8
ok 2624 abda2668b053
not ok 2625 a3c9d780cd32
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen32.bats, line 252)
#   `while KR     *  y =    z    +     -4 ∧    -3   +     -1  =   -4     *     z do skip' '{}'' failed
# if (1+ c6   =(x +x)  *-3     ∨    3  + 3   <    z)     then skip     else  skip ;  
#  
# while KR     *  y =    z    +     -4 ∧    -3   +     -1  =   -4     *     z do skip = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 21 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (1+ c6   =(x +x)  *-3     \8744    3  + 3   <    z)     then skip     else  skip ;  \n \nwhile KR     *  y =    z    +     -4 \8743    -3   +     -1  =   -4     *     z do skip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 2626 e7517477449e
ok 2627 e4b866fd34bd
ok 2628 fddbd2c9c40e
ok 2629 11ee95d06d88
ok 2630 e3a17d2e8419
ok 2631 7c10476f3d06
ok 2632 e6200081771a
ok 2633 39bac5e8bc3d
ok 2634 4593638dd454
ok 2635 5ebd019186c4
ok 2636 ce3757c4c551
ok 2637 19804b2067d8
ok 2638 2f08a1686aff
ok 2639 eafc65cf0ad4
ok 2640 07ca4e8df574
ok 2641 df3d4d0e32c9
ok 2642 07e688004d55
ok 2643 94002180fbc9
ok 2644 2af0b6dedb07
ok 2645 2512f0376282
ok 2646 da6f7b76c455
ok 2647 cae42d8278b9
ok 2648 95812d1e21e2
ok 2649 59150a17322c
ok 2650 15e05692840c
ok 2651 2e92392f2d7f
ok 2652 621d96b2087c
ok 2653 5910ff19ea31
ok 2654 6c79396657fb
ok 2655 00f6752d52de
ok 2656 94c593722b98
ok 2657 76688d017e11
ok 2658 c0fea4d8b959
ok 2659 7099c5b8aa73
ok 2660 fb6d17a65bab
ok 2661 d1ea339173ea
ok 2662 4bdb5e9ce255
ok 2663 2ac8207e686b
ok 2664 fb7f1354d8d2
ok 2665 4bfd66b01f57
ok 2666 fa3243c9795a
ok 2667 56b2b89525e8
ok 2668 df25614abf68
ok 2669 d7beb20f7fb5
ok 2670 0e66d5945137
ok 2671 7f25ebde5873
ok 2672 25620afe53cd
ok 2673 45293f1d18df
ok 2674 d62742df4f50
ok 2675 69b97eef18d6
ok 2676 c52ef8439cd2
ok 2677 98ee1a715bdc
ok 2678 bb97d394b126
ok 2679 4d57c1e9ff54
ok 2680 d0a757c37a3e
ok 2681 936c9d3d518c
ok 2682 a8b45e927c7b
ok 2683 42c04c74dd45
ok 2684 345a26f07c1d
ok 2685 f030d0a8ce0c
ok 2686 3c3185ba6125
ok 2687 2a4a496f970c
ok 2688 4cce75e39340
ok 2689 359236ed1a86
ok 2690 334bdabea51f
ok 2691 2383d798beff
ok 2692 172d3f2bd10c
ok 2693 d621e972f9a2
ok 2694 aaa3f2ce194d
ok 2695 0dec8ac61c02
ok 2696 184403996de5
ok 2697 b515b8d0f3ce
ok 2698 d15cf5aaa1ba
ok 2699 80b1ae2957eb
ok 2700 150718251359
ok 2701 1bc1c225da89
ok 2702 711da56bb2e9
ok 2703 3b6110cfad65
ok 2704 b599b7c52e69
ok 2705 a95a7db01c94
ok 2706 e3de56246469
ok 2707 f21779f877ef
ok 2708 a542045526ad
ok 2709 263ab73e78b0
ok 2710 78f90e695bdf
ok 2711 2b83f4c7bea7
ok 2712 3905df1575b7
ok 2713 943faf4bf692
ok 2714 573a72877477
ok 2715 7372443fe487
ok 2716 61ed714ed80b
ok 2717 9f201e9ed99f
ok 2718 f7b7885fffe2
ok 2719 e8ec4c8af60b
ok 2720 7a7f0cc290ba
ok 2721 998f074c4dda
ok 2722 cfae9b8f9eff
ok 2723 b0c35d487314
ok 2724 69a7a9c22502
ok 2725 04dc9faf3d49
ok 2726 c33074caaac3
ok 2727 efc371967ca1
ok 2728 08985205e4d7
ok 2729 35c81baa4573
ok 2730 f010c3e3f251
ok 2731 038c5497b160
ok 2732 295cbb5cf30c
ok 2733 3eca017e138d
ok 2734 62969214e304
ok 2735 14c059f8491f
ok 2736 21d0a78a50c7
ok 2737 a04ba03992ea
ok 2738 65c6c814c4b3
ok 2739 62dd4c95c6f4
ok 2740 9e5abb490827
ok 2741 2d87c77359b2
ok 2742 a32c46fd1118
ok 2743 eb07f0096205
ok 2744 7fe688012b96
ok 2745 acff1589ff9e
ok 2746 e6a06659010a
ok 2747 d69e4d046687
not ok 2748 7ed28e9a12b4
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen33.bats, line 458)
#   `J:=     1    else c6   :=  z     * z    ' '{x → -1}'' failed
# if (-1-  -3   <1  ∧ 2     *     0 = z  +     z)    then 
# 
# 
#   y   :=   0      else  
# x    :=     -1     +   z   ;if (¬(1   -     G4   <(x   -     z) *   x))   then if (-3 *    x     <  4   +   2)      then 
#  skip else  
# J:=     1    else c6   :=  z     * z     = {x → -1}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 148 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (-1-  -3   <1  \8743 2     *     0 = z  +     z)    then \n\n\n  y   :=   0      else  \nx    :=     -1     +   z   ;if (\172(1   -     G4   <(x   -     z) *   x))   then if (-3 *    x     <  4   +   2)      then \n skip else  \nJ:=     1    else c6   :=  z     * z    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 2749 f9c4aa93423f
ok 2750 264c5394659c
ok 2751 742e04b49fa5
ok 2752 b14efc968b29
ok 2753 ff5da9bac9cf
ok 2754 14874debe983
ok 2755 d34d525071b7
ok 2756 1a7bb4750f3b
ok 2757 3cd576ee662f
ok 2758 11dd7894962b
ok 2759 604773ebf61e
ok 2760 c704bf7c745c
ok 2761 174deb92ba96
ok 2762 835e2dfef7ba
ok 2763 4457056099be
ok 2764 bd3f3446ef64
ok 2765 d952feb962c9
ok 2766 4d958f782407
ok 2767 62949c2b55b6
ok 2768 671a03bb6924
ok 2769 e4038b29c1c3
ok 2770 56648737e7cf
ok 2771 552c6bfd3fd8
ok 2772 fc71f07f04e3
ok 2773 8a4925741386
ok 2774 a589f8ccf38b
ok 2775 05fcf8fb70ef
ok 2776 f42e3c02e8e9
ok 2777 b57f03a50f31
ok 2778 b8cf116b0955
ok 2779 0f1c493974c8
ok 2780 460d53e09cf3
ok 2781 829e32045180
ok 2782 8f52e2848657
ok 2783 60072ce60a08
ok 2784 93eb3c4f9d6c
ok 2785 26ee0f599a39
ok 2786 42f9ce979a15
ok 2787 f9b6e66198bf
ok 2788 0e50fea197d4
ok 2789 bae965531dc7
ok 2790 963a551dfd0c
ok 2791 9fd9478ce76d
ok 2792 d85a57bb9609
ok 2793 67174f4587ac
ok 2794 aa5087330294
ok 2795 29320a14d161
ok 2796 7e7b9838b52d
ok 2797 c68652d07fbf
ok 2798 87349d0f8cdf
ok 2799 d53a5c4e0c68
ok 2800 7128ac8ebe73
ok 2801 f2405337361d
ok 2802 1a741b5ec504
ok 2803 02e7822043fe
ok 2804 91b3b2de047c
ok 2805 abdcf853607e
ok 2806 e69e8f3e4508
ok 2807 4f62b4aa397b
ok 2808 1bbc9d856aec
ok 2809 fc3201076884
ok 2810 1f5c1b21dfac
ok 2811 b3b0b3ec78b6
ok 2812 76d2b0b193b2
ok 2813 3df62d1d3eb2
ok 2814 91512113ef5a
ok 2815 12414f3fca33
ok 2816 11feac838ff4
ok 2817 84d1ab883020
ok 2818 4ffc19d01a0f
ok 2819 0ccbb550bbda
ok 2820 ca7e127fe8ba
ok 2821 ebe82920522a
ok 2822 89fb35f9989c
ok 2823 9832a5ff609a
ok 2824 e59473b88a08
ok 2825 c3bc5768a730
ok 2826 91cc3015b80b
ok 2827 2a5d7b4dd7d9
ok 2828 4e53e4f90d35
ok 2829 30f8196aa8ae
ok 2830 261ddb0feb75
not ok 2831 4851160c3fa5
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen34.bats, line 331)
#   `x     :=3 +     4 ' '{}'' failed
# while 1     =   -2     -  z∧    y     - y   =     x+  4    do 
# 
#   
# skip     ; if (y     =     -4+  a ∨  true)      then 
#  if (y   -   y<    1  *     0    ∧  (Pe +     2) *0    =    -3 +  z)     then 
#  
# 
# x :=-3   +   -4    else skip     else 
#  
#  
# x     :=3 +     4  = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 170 (Just (Tokens ('*' :| "0"))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while 1     =   -2     -  z\8743    y     - y   =     x+  4    do \n\n  \nskip     ; if (y     =     -4+  a \8744  true)      then \n if (y   -   y<    1  *     0    \8743  (Pe +     2) *0    =    -3 +  z)     then \n \n\nx :=-3   +   -4    else skip     else \n \n \nx     :=3 +     4 \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 2832 7e101762058b
ok 2833 f8d2bb329877
ok 2834 3cf2a4077b92
ok 2835 e669747aebb2
ok 2836 f5ca025bc88d
ok 2837 11e03120d6c3
ok 2838 c4e3a978935c
ok 2839 d8c7fddcc4fe
ok 2840 7781ca3beca0
ok 2841 79c09841282e
ok 2842 ffcd48c88a87
ok 2843 ed569c17f743
ok 2844 508466ef85b5
ok 2845 e3255636c8f0
ok 2846 81156217d126
ok 2847 f8025bd19680
ok 2848 a569d3d629ff
ok 2849 fcfa499b3c98
ok 2850 162ee9e7eaf1
ok 2851 9b772e9c801a
ok 2852 6a15329d2d2a
ok 2853 2e52c89e5512
ok 2854 89a68ebd3df6
ok 2855 6a11e093f615
ok 2856 f79dcd04fc54
ok 2857 5c04d5c7843c
ok 2858 5762121be6bc
ok 2859 a5359886bc86
ok 2860 8205bd4d95d9
ok 2861 c2b8f2d134f6
ok 2862 1866adacb544
ok 2863 58e397f2ad8c
ok 2864 9856b69e9fba
ok 2865 a9d42eefcda6
ok 2866 0b75a5c7f08c
ok 2867 da6173e2cde1
ok 2868 1fa00239806f
ok 2869 46144323c949
ok 2870 d2e92f194802
ok 2871 ae3502057b07
ok 2872 fd0e5ec9fa7a
ok 2873 8d7a75541b57
ok 2874 8c0b84eb1c76
ok 2875 37052d3b7fe5
ok 2876 f360cf3c3509
ok 2877 5fee2a970a71
ok 2878 508543b016e9
ok 2879 88f6d3fc0429
ok 2880 1842c395babd
not ok 2881 358d748aa395
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen34.bats, line 901)
#   `y   :=   y* x     ' '{y → 0}'' failed
# if (p    +    x<     0    -  y   ∧ (4   -  2)   -   x    =  -1   *  z)    then while (¬true) do      y   :=   z+  k else   skip     ;if (¬(-2     <    4   *4))   then  
#   
# z   :=  -2 + -4     else 
# 
# y   :=   y* x      = {y → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 48 (Just (Tokens ('-' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (p    +    x<     0    -  y   \8743 (4   -  2)   -   x    =  -1   *  z)    then while (\172true) do      y   :=   z+  k else   skip     ;if (\172(-2     <    4   *4))   then  \n  \nz   :=  -2 + -4     else \n\ny   :=   y* x     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
not ok 2882 3f89116d2a33
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen34.bats, line 907)
#   `x    :=    Yr  +    1  else while 2 + z     =(1     -  x)   -   z    ∧h +2< -1  *  z   do  skip   ' '{}'' failed
# if (z  *z  <     M +    1∧   true) then     
# while -4-    -4   <    -4    +     -1   do  
#  x    :=    Yr  +    1  else while 2 + z     =(1     -  x)   -   z    ∧h +2< -1  *  z   do  skip    = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 151 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "if (z  *z  <     M +    1\8743   true) then     \nwhile -4-    -4   <    -4    +     -1   do  \n x    :=    Yr  +    1  else while 2 + z     =(1     -  x)   -   z    \8743h +2< -1  *  z   do  skip   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 2883 a40d052b161d
ok 2884 ded9086b957d
ok 2885 eb2ed438289a
ok 2886 9c71b01f48e2
ok 2887 0fa7d09c3b81
ok 2888 fcca1514052e
ok 2889 8a52deedb8f1
ok 2890 80f482971541
ok 2891 b663fdeeccd0
ok 2892 5f1ed983b044
ok 2893 9c31f54a05dc
ok 2894 b99c23487e08
ok 2895 fea152701631
ok 2896 2b8553a29a7f
ok 2897 5de32e01db95
ok 2898 b69a1a0ab5f3
ok 2899 bc77965f4826
ok 2900 0f525ae60bd4
ok 2901 00e2774a8bda
ok 2902 9d72bfa39b6b
ok 2903 5aaecb881460
ok 2904 55d18b748e69
ok 2905 a23618a34681
ok 2906 3ce5dace522f
ok 2907 00f06fa38ecf
ok 2908 2cc1fba3472a
ok 2909 ac46bc067a31
ok 2910 edfe16b2ebe0
ok 2911 3bb81d4134b8
ok 2912 91e9f4763a4b
ok 2913 797c5e6e94f7
ok 2914 fad3678ee0f9
ok 2915 89e3cdf88a77
ok 2916 9d8d93cb138a
ok 2917 b0ba9cf4811b
ok 2918 1405f9c8da00
ok 2919 781c051aadef
ok 2920 c47807d76395
ok 2921 5e3529978121
ok 2922 816e130e1b34
ok 2923 36b6d92ddfb3
ok 2924 b1f7bd599a0c
ok 2925 9e290cea60ff
ok 2926 93ded3755e0b
ok 2927 75924ca96def
ok 2928 b83ff09a6d66
ok 2929 db5f4a073aa9
ok 2930 4daf585f6bc3
ok 2931 aec29d39278b
ok 2932 ab6eba41336e
ok 2933 6a7097d0a9e3
ok 2934 6f0036873be1
ok 2935 8a0829b37d80
ok 2936 cc4650ff0411
ok 2937 43616224630e
ok 2938 9a7180a44d5a
ok 2939 5b1d696178c4
ok 2940 eb75c9b9f4a8
ok 2941 c2d7658097aa
ok 2942 0d7e29ecc345
ok 2943 e9a6c559f967
ok 2944 2a6edb240634
ok 2945 4e1c113e8a1e
ok 2946 f9aad1879b80
ok 2947 ca537302119a
ok 2948 7d34bc28923c
not ok 2949 cc51ee425092
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen35.bats, line 530)
#   `z   :=    QJ    - y  ' '{}'' failed
# while x    = 4     -     2     do  
# 
#  skip  ;
# 
#  
# if (U-     uh     < -4 *     3     ∨ v    -  x  <   -1) then  
#  
#  while (a  - -4)     *     -1    <dL     -     2   ∨x  *    -1=-4+ y      do 
# skip   else  while false  do 
#    z   :=    QJ    - y   = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 135 (Just (Tokens ('*' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while x    = 4     -     2     do  \n\n skip  ;\n\n \nif (U-     uh     < -4 *     3     \8744 v    -  x  <   -1) then  \n \n while (a  - -4)     *     -1    <dL     -     2   \8744x  *    -1=-4+ y      do \nskip   else  while false  do \n   z   :=    QJ    - y  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 2950 19a72b278bba
ok 2951 8358e137e405
ok 2952 1215a9cf6dee
ok 2953 d09f634c87f7
ok 2954 b3835bae90bf
ok 2955 9fe93852057f
ok 2956 dd8cbfc278cd
ok 2957 75f421022582
ok 2958 ec8ae4c1fd39
ok 2959 f61ee69d99c3
ok 2960 6068331fd887
ok 2961 ff0ce83d22f0
ok 2962 85f12a892ad5
ok 2963 8b38050801dd
ok 2964 ef179d915c6f
ok 2965 5b4dcc23b957
ok 2966 e9725c478b73
ok 2967 2c5a056f5e6e
ok 2968 52b70bc9bd1f
ok 2969 e5ea2f04b8f6
ok 2970 115b568b0c91
ok 2971 dca9a0f137bc
ok 2972 1e21e85b8d36
ok 2973 5df87b4d8ca4
ok 2974 ccb63e0bccef
ok 2975 b0a98f5e6424
ok 2976 da62cd9769ff
ok 2977 992be34edaff
ok 2978 decd3192f36a
ok 2979 8fa11ca4c7a0
ok 2980 cb2989d0c4ca
ok 2981 0b2b762a671b
ok 2982 c462d288c691
ok 2983 6f20246ed08b
ok 2984 bf5cf2c64d83
ok 2985 b2edfaf7546b
ok 2986 66c73487f5fc
ok 2987 44574d6f6293
ok 2988 18f631c67a15
ok 2989 1611be27fe39
ok 2990 86e39d46e037
ok 2991 81de0ad8191e
not ok 2992 a5b6c4f01b92
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen35.bats, line 979)
#   `if (¬(-4    *     y   < -3  +  x))  then  E    :=     -2     -    -4   else y    := -2+  z   ' '{E → 2}'' failed
# if ((0     + -1)     *     -4 =    -1+     -2    ∨ true) then 
# 
# skip   else 
#  
# 
#  while (¬(-2  *    iT    <u)) do 
# skip     ;
#  
# 
#  if (¬(-4    *     y   < -3  +  x))  then  E    :=     -2     -    -4   else y    := -2+  z    = {E → 2}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 30 (Just (Tokens ('=' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if ((0     + -1)     *     -4 =    -1+     -2    \8744 true) then \n\nskip   else \n \n\n while (\172(-2  *    iT    <u)) do \nskip     ;\n \n\n if (\172(-4    *     y   < -3  +  x))  then  E    :=     -2     -    -4   else y    := -2+  z   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 2993 336c1b6058e3
ok 2994 b6e35bf3a39f
ok 2995 e0a65b84c1af
ok 2996 679aa9a674f0
ok 2997 400851dca461
ok 2998 3deda1ef6659
ok 2999 226a92fe6ed6
ok 3000 424a03cd3550
ok 3001 72b7bb94b917
ok 3002 416feb48a668
ok 3003 7bc8a55414e7
ok 3004 2dc78ce27f42
ok 3005 8fe640edcf42
ok 3006 e50e797dc310
ok 3007 47afd7f46ca9
ok 3008 978bd2f81478
ok 3009 e6812703ea5c
not ok 3010 69c42bd47d79
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen36.bats, line 81)
#   `z    :=    -3 -  t    ' '{H6 → 1}'' failed
# if (¬((z     -    y)  -   z  <y   *    y)) then H6     :=     1-    x     else   
# while true     do   
# x     :=   x     +x ; 
# while false  do 
# 
#  z    :=    -3 -  t     = {H6 → 1}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 29 (Just (Tokens ('<' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172((z     -    y)  -   z  <y   *    y)) then H6     :=     1-    x     else   \nwhile true     do   \nx     :=   x     +x ; \nwhile false  do \n\n z    :=    -3 -  t    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 3011 f5025e2a25fa
ok 3012 54623785d8a3
ok 3013 2d347f2cf5cf
ok 3014 b98939065864
ok 3015 bdd04020b873
ok 3016 44c722195244
ok 3017 04146d0914c5
ok 3018 74c7e8a0a918
ok 3019 897c52c73769
ok 3020 ccea5feef77b
ok 3021 a00e53b6fa2c
ok 3022 39fd98236525
ok 3023 7d07ae268890
ok 3024 4ce54f6c6f7d
ok 3025 c158d38d4901
ok 3026 1e03b5e28ade
ok 3027 a78d7b1d6d16
ok 3028 6a994ae7e9bf
ok 3029 104c47f0e9dd
ok 3030 fe698a835e56
ok 3031 2974f141a958
ok 3032 e1018792f3df
ok 3033 2e9f92de4614
ok 3034 82643af279cf
ok 3035 770f82b820fe
ok 3036 dbfc59513876
ok 3037 c6e46f7e341b
ok 3038 13e83d9a5ebd
ok 3039 9586f7a6ad69
ok 3040 b9f795ec6a70
ok 3041 5b7312998aa1
ok 3042 0b1ea91967a8
ok 3043 6bb1d39e17d2
ok 3044 61fcb89d0fba
ok 3045 c48c0aeae0a5
ok 3046 7c299581ee21
ok 3047 abd5df93de18
ok 3048 fb7351279db5
ok 3049 86f5c9d2e137
ok 3050 d30889a98fd3
ok 3051 1ffcf06ec2d3
ok 3052 9742dad8ea6e
ok 3053 1a0e04469a8d
ok 3054 fe63f29f3470
ok 3055 1705a5cae99b
ok 3056 d2eb6ce653ea
ok 3057 ecd4f51d1565
ok 3058 0783735b6369
ok 3059 13f4e52c17a6
ok 3060 0474dee68af5
ok 3061 580d7313a2e0
ok 3062 6ccaa715d33b
ok 3063 d56a5f1c2acd
ok 3064 58a403ed158c
ok 3065 71dad9e2b00b
ok 3066 4f8d0e244e98
ok 3067 f856235289de
ok 3068 bfacf03ecef7
ok 3069 dd0df4123300
ok 3070 a68c77a86f14
ok 3071 1d0595fbfeca
ok 3072 343666a52816
ok 3073 1139b92d978a
ok 3074 72f0299b5e56
ok 3075 cf47022544b7
ok 3076 f67650b1d0b5
ok 3077 1fad58179b69
ok 3078 df297243ece6
ok 3079 17f8ed3f1bd9
ok 3080 eef5c42d907f
ok 3081 b8a23ed82f99
ok 3082 4bceb2f882fa
ok 3083 620a5d9a7dc7
ok 3084 57539d93a225
ok 3085 d56b9ae7ceb2
ok 3086 b8048b5d81c6
ok 3087 a45c630d60ef
ok 3088 c269e1eaec6a
ok 3089 29ace426e409
ok 3090 40acb1c4dc4a
ok 3091 2fb1ce12bb95
ok 3092 1041cd1224fe
ok 3093 18aa7e5baaec
ok 3094 8e948012e76e
ok 3095 68c53fa0e954
ok 3096 35c7da2d54d9
ok 3097 7ceda9abba46
ok 3098 d2d80eec7a86
ok 3099 5956d5379142
not ok 3100 e821c7701ec7
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen36.bats, line 979)
#   `skip     ' '{}'' failed
# while (-3  +     1) -   -2   =   z -   -1∧  y    +   x   =    e -    3    do  
# 
#  skip    ; 
# skip      = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 20 (Just (Tokens ('-' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while (-3  +     1) -   -2   =   z -   -1\8743  y    +   x   =    e -    3    do  \n\n skip    ; \nskip     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 3101 efe9254c2a4e
ok 3102 ab3e0c75017d
ok 3103 c854421e76e9
ok 3104 410e403366e8
ok 3105 1b5114ddca30
ok 3106 58c9156b2b18
ok 3107 98e6a94fb56a
ok 3108 9ae92364f144
ok 3109 8afcf9a32a4c
ok 3110 ebeaa6182e22
ok 3111 05cc72d5d8d1
ok 3112 6754914b6444
ok 3113 1ddfab2877ed
ok 3114 3950321fd6f8
ok 3115 4722593c1ec4
ok 3116 c9114a4194d7
ok 3117 316b46eb329d
ok 3118 940aeea76773
ok 3119 048b134182b6
ok 3120 dc2d42183cea
ok 3121 ac4f0adb808e
ok 3122 3a37e61aa616
ok 3123 93fa020caea2
ok 3124 06c0f58c0dc1
ok 3125 6081e398745f
ok 3126 af8280d6ac98
ok 3127 8cc78c30ddbc
ok 3128 53de06d7881a
ok 3129 f16951093c03
ok 3130 006399534c5d
ok 3131 8574fe7d2645
ok 3132 c8c4157def9a
ok 3133 d0c508053f86
ok 3134 384e34a46871
ok 3135 be021992afbb
ok 3136 18ab9ef88dc0
ok 3137 6b0c23b09b2e
ok 3138 00ef9c596716
ok 3139 ef4977f6b62b
ok 3140 e25e814cb43c
ok 3141 a7619f82a649
ok 3142 1fedf59961f4
ok 3143 11467354f53c
ok 3144 647656a74ad0
ok 3145 bfee4af3e014
ok 3146 c94e0f09e2c1
ok 3147 97aa59f8df09
ok 3148 32d931bdaff7
ok 3149 cf1c4904b0d8
ok 3150 282d74193d8a
ok 3151 cd281a646884
ok 3152 7d2591bd3592
ok 3153 022e6d3d8be0
ok 3154 fe73466c2a31
ok 3155 e00c023d52d6
ok 3156 8d6c34f7985a
ok 3157 decb7caf9cb9
ok 3158 4003342833f0
ok 3159 8ec8899133ce
ok 3160 bdd334d7fc4d
ok 3161 3e6b4f8a59c7
ok 3162 d86684fcb8a0
ok 3163 6401c04d517d
ok 3164 56c7b56af07d
ok 3165 0d42ba89c5d8
ok 3166 141d69ab8851
ok 3167 caa47dccf8a4
ok 3168 419ad78e3fc7
ok 3169 6a862af6e1a6
ok 3170 641de2a48b2d
ok 3171 c4d4b1141cb0
ok 3172 d0bf29419fe3
ok 3173 e763d6915f7b
not ok 3174 ff4f9621038a
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen37.bats, line 745)
#   `x     :=   -4     +   1 else    a0:= x   -   -3 ' '{}'' failed
# while (y    +     x)   *     y  < y  +   y    ∧ false    do   if (2  -     Qu    < z    +    4∧     4    +   -2  <  y -1)      then y     :=     -1   --1      else  skip     ;
#  while true  ∧  false do 
# if (3  - y =    y+     -1   ∧   y   +    3    =  z    +  -4)      then 
# 
# x     :=   -4     +   1 else    a0:= x   -   -3  = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 23 (Just (Tokens ('*' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while (y    +     x)   *     y  < y  +   y    \8743 false    do   if (2  -     Qu    < z    +    4\8743     4    +   -2  <  y -1)      then y     :=     -1   --1      else  skip     ;\n while true  \8743  false do \nif (3  - y =    y+     -1   \8743   y   +    3    =  z    +  -4)      then \n\nx     :=   -4     +   1 else    a0:= x   -   -3 \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 3175 c7e16815bdd6
ok 3176 e94641a4d8c7
ok 3177 6a3d6f1bf7f3
ok 3178 809e1d4b2093
ok 3179 3d8d2fad2c86
ok 3180 eb303d7a6e42
ok 3181 9be438ccd5ca
ok 3182 302eedc15cdf
ok 3183 1d847a378c77
ok 3184 4cb811daca2c
ok 3185 3e760f300347
ok 3186 784829388671
ok 3187 be373ebe3048
ok 3188 b41ae0712954
ok 3189 527a1fb3bcd7
ok 3190 65a2150969b7
ok 3191 58f71d59b17c
ok 3192 18178e7f2e81
ok 3193 3c924a64ad24
ok 3194 3161107758d3
ok 3195 11b197353fa8
ok 3196 ef5372fb97df
ok 3197 b27b98b8a72f
ok 3198 07807f0e4283
ok 3199 10b7d8c50d5f
ok 3200 cdb75b507690
ok 3201 e89d7ff659d6
ok 3202 9aedc2d6a473
ok 3203 a59e8715a8a7
ok 3204 e15b3b6c7ed6
ok 3205 8b40b10519e3
ok 3206 deedfd12c2c4
ok 3207 1768e65c2b8d
ok 3208 8406d77485ff
ok 3209 39bed300a141
ok 3210 278ed7848d2c
ok 3211 c617e152dd14
ok 3212 005b1bb9a5ca
ok 3213 a36a89d6a652
ok 3214 bc860c775747
ok 3215 ce95a2274ba5
ok 3216 601bb3e73fb1
ok 3217 9863e4fc3363
ok 3218 ba34a336e22a
ok 3219 eecd611902c8
ok 3220 e6d29bd28826
ok 3221 83921b8abe75
ok 3222 b72875ba4230
ok 3223 36a01b84cb8b
ok 3224 6d900f7fde9a
ok 3225 4c7f56569e5c
ok 3226 a25e7222ae22
ok 3227 a6f2e461b2eb
ok 3228 02f6b2d71c74
ok 3229 121cd3c43dad
ok 3230 4dc5a3fd4acb
ok 3231 bd0d4d13a338
ok 3232 c6e1e5b10115
not ok 3233 401b4e1bae3f
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen38.bats, line 340)
#   `mE :=  -4   -    0  ' '{mE → -4}'' failed
# if (¬(hD   -4  < (2   -    x)  *     x))  then 
# 
#   skip   else  
#   
# mE :=  -4   -    0   = {mE → -4}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 31 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172(hD   -4  < (2   -    x)  *     x))  then \n\n  skip   else  \n  \nmE :=  -4   -    0  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 3234 fa47dfc5baac
ok 3235 7903723ea688
ok 3236 94ea8cdbf42e
ok 3237 0ab890f22354
ok 3238 0534d3ebf457
ok 3239 46f507e320eb
ok 3240 bca8a1151a6f
ok 3241 bd6ec6e1a831
ok 3242 54e25bcb7146
ok 3243 eac68a3636fb
ok 3244 5e20405077d5
ok 3245 87c8c34463ee
ok 3246 a95cc0316ca3
ok 3247 2426c12e801a
ok 3248 1cb5bd5fb629
ok 3249 00f1b8e2d15d
ok 3250 6ec47810d354
ok 3251 76b7fde7788c
ok 3252 7be07db9c9dd
ok 3253 41cad9b1c3bd
ok 3254 e5deff862392
not ok 3255 573a39a7ceb4
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen38.bats, line 528)
#   `skip' '{}'' failed
# while z* D  <   1     +-1 ∧  t    = z     -   4 do R     :=  -1    - y     ;while mB     -   0    <     x    * gI  ∨z  +    y    =  (2  +   -2)  - -4 do 
#  
#  skip = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 145 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "while z* D  <   1     +-1 \8743  t    = z     -   4 do R     :=  -1    - y     ;while mB     -   0    <     x    * gI  \8744z  +    y    =  (2  +   -2)  - -4 do \n \n skip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 3256 12b694b5b16b
ok 3257 10b2c134ca22
ok 3258 43c4c7252ba9
ok 3259 a5f2f5ba8e14
ok 3260 fcee9c5b4578
ok 3261 ded8b21e5c38
ok 3262 7e04c60e54c8
ok 3263 54d35aa1258d
ok 3264 8305c0757bf6
ok 3265 041fbcb33b4f
ok 3266 686648f47b3a
ok 3267 5b5d46a3c296
ok 3268 200cf437547e
ok 3269 866772d9e001
ok 3270 d921310b5ab9
ok 3271 1dd140b9b60c
ok 3272 612a7477b610
ok 3273 9d1bd33e971d
ok 3274 f0364f211a58
ok 3275 e83d4d2c0fad
ok 3276 8206452a0526
ok 3277 4b1885c20f66
ok 3278 2ff464347f69
ok 3279 7abe2981e7e4
ok 3280 0f76f4bfab66
ok 3281 43b7280a33b6
ok 3282 a8e8ef3749ad
ok 3283 738c02128252
ok 3284 ecdc48101e49
ok 3285 9b0d1a637986
ok 3286 647d1cee58e9
ok 3287 c6252715c04e
ok 3288 76f165adc8e8
ok 3289 6a92934ba734
ok 3290 b69a87daf171
ok 3291 812a0a5a62c5
ok 3292 3ccc4bb2a359
ok 3293 00e7150bdc9a
ok 3294 f9e678b79047
ok 3295 5ffa51e56fc8
ok 3296 c1c330589410
ok 3297 31ac7a4fb705
ok 3298 8be0c35d425e
ok 3299 8cd1b833aa17
ok 3300 ae0ea17698dc
ok 3301 85707548539a
not ok 3302 c084cd9f2d46
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen39.bats, line 7)
#   `L    :=     x  -     1     ' '{L → -1}'' failed
# if (-2  * -4   =    4*     2  ∧(L2   -  y)    *     y=x    +    m)    then    skip else 
#    
# skip     ;
# L    :=     x  -     1      = {L → -1}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 46 (Just (Tokens ('*' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (-2  * -4   =    4*     2  \8743(L2   -  y)    *     y=x    +    m)    then    skip else \n   \nskip     ;\nL    :=     x  -     1     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 3303 e1b7b02eebab
ok 3304 b1386634ba8e
ok 3305 fc0b980dddda
ok 3306 7d302e4c8068
ok 3307 b42ca627e31a
ok 3308 03588c1f19bd
ok 3309 3a57bdd8e2d1
ok 3310 a4f40e44b16b
ok 3311 abea54e63f0d
ok 3312 8b97cc0204ae
ok 3313 e6cf2daad3d8
ok 3314 9151c3c0f5a5
ok 3315 1305cb5306a5
ok 3316 0234099d1906
ok 3317 ed8b7d434a82
ok 3318 620b5c38244f
ok 3319 aba594d12c68
ok 3320 30ce9ee83b34
ok 3321 59e7d9cc0413
ok 3322 c0cb5f1a77d0
ok 3323 722146476d1d
ok 3324 9a8c5d15b052
ok 3325 0309135c5aa7
ok 3326 586706eb5ac3
ok 3327 30765cf1e575
ok 3328 7a01e265f064
ok 3329 e5c756a22a45
ok 3330 1f54643839dc
ok 3331 185d5e5a4593
ok 3332 f0730dbce9b9
ok 3333 f1599222f376
ok 3334 fe780356c032
ok 3335 aed8a744bfbe
ok 3336 300127301a14
ok 3337 502bda76b16e
ok 3338 75581500df15
ok 3339 42a29994c401
ok 3340 344c091f7b58
ok 3341 696168448c76
ok 3342 34dd45e78c36
ok 3343 0bb231ba11a4
ok 3344 c96b920e3382
ok 3345 3934dff9654c
ok 3346 61fd576cbf05
ok 3347 fcd5252cc67a
ok 3348 1ed9e05cc404
ok 3349 ff4d06f04f0f
ok 3350 d1f9f96d2ac7
ok 3351 ca57acc014db
ok 3352 73a76d46605e
ok 3353 15d07da849fc
ok 3354 0561030e6b29
ok 3355 25c184f494a0
ok 3356 2229f9ae1a1a
ok 3357 512b56e59755
ok 3358 f4c0a070063a
ok 3359 2ede3b06f916
ok 3360 5c14af752277
ok 3361 61182c9dd962
ok 3362 d9d6512aae88
ok 3363 e8e050c67945
ok 3364 85c9fd397bf9
ok 3365 3cfd65de8825
ok 3366 528488f6581e
ok 3367 3ca4cde83b3f
ok 3368 1db2d42a405a
ok 3369 231228d2664c
ok 3370 393d9b98c31e
ok 3371 e637648f3768
ok 3372 e5686f615e35
ok 3373 da63adf508d6
ok 3374 8b18c6d4d689
ok 3375 5578458de911
ok 3376 0f2bca20451f
ok 3377 7f62765297b0
ok 3378 7bf96454b402
ok 3379 44a4945efcbf
ok 3380 23d82e6c6825
ok 3381 2060bc8ac1b6
ok 3382 a729f8b6dfb8
ok 3383 795fe2319996
ok 3384 c886dd3a4acf
ok 3385 bf587b8b1d3d
ok 3386 e3cc2147791c
ok 3387 d24d5fe87828
ok 3388 13920190b544
ok 3389 f14a6852f524
ok 3390 3cfe33fe2969
not ok 3391 329833ae548f
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen39.bats, line 927)
#   `skip   ' '{}'' failed
# if (Qe  * 3  =   4   - x     ∧     1   *0<     2-     y)  then   if (4    +  N =(x+  U)-     4  ∨ -3    *   x    <  c2  + z)    then 
# 
#  skip  else  
# skip   else 
# 
# 
#  skip  ;
# 
#  if (-1     *    -3  <  3     +   3     ∧ false)    then skip  else 
# skip    = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 87 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (Qe  * 3  =   4   - x     \8743     1   *0<     2-     y)  then   if (4    +  N =(x+  U)-     4  \8744 -3    *   x    <  c2  + z)    then \n\n skip  else  \nskip   else \n\n\n skip  ;\n\n if (-1     *    -3  <  3     +   3     \8743 false)    then skip  else \nskip   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 3392 ee585799f573
ok 3393 10949003b851
ok 3394 90ab73451058
ok 3395 0fd6bb7b3d8d
ok 3396 78a4c492ff01
ok 3397 78a10437be62
ok 3398 0cf43541b276
ok 3399 1787fd544ca9
ok 3400 3d796f62eaad
ok 3401 c1d3354db845
ok 3402 6c22a59c44de
ok 3403 e55661b0052f
ok 3404 42002f438055
ok 3405 212e27c374a0
ok 3406 ffaf438ef60a
ok 3407 89a0f5b88f97
ok 3408 f0ea2255a118
ok 3409 1b02e8bb5097
ok 3410 0e86b23a818c
ok 3411 23c080216365
ok 3412 56cdda3ff4b3
ok 3413 848290b7124d
ok 3414 e62640cd0c84
ok 3415 b93e449c7f68
ok 3416 2626aac24dbc
ok 3417 7d3e239c7d56
ok 3418 2b5f17dbf0b2
ok 3419 1f50c712ba20
ok 3420 1f769acc5c8d
ok 3421 24e8ad1317e0
ok 3422 c49d49a547d5
ok 3423 7c329ea732a5
ok 3424 5a02a0327003
ok 3425 8a50cb8493d1
ok 3426 c84480d5b899
ok 3427 4f56cb859dd0
ok 3428 302ffcc73f1a
ok 3429 f589084e02ec
ok 3430 30fa5f6a2bd0
ok 3431 d27d10537d49
ok 3432 8efd64d325e3
ok 3433 a43e84d0a12c
ok 3434 eab35f52c122
ok 3435 8f3a7cb37ea4
ok 3436 d15a74fe450f
ok 3437 c28a16b35c33
ok 3438 39249e968ea8
ok 3439 97fa4eda954b
ok 3440 22eca1f3197a
ok 3441 481bf268efdf
ok 3442 1ec732d9fa02
ok 3443 85b20d2e3a23
ok 3444 1f7f3fb68709
ok 3445 42686e042b4a
ok 3446 6f188b7186f0
ok 3447 db59a55df3b8
ok 3448 5047c819ad13
ok 3449 24c0252f4b08
ok 3450 3d957d303566
ok 3451 932c34f6ce38
ok 3452 455c49f55afa
not ok 3453 35895cc73cd0
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen4.bats, line 564)
#   `y  :=x    + y     ' '{y → 0}'' failed
# if ((0   +  -4)   -     -2    =  z    +z  ∧  y     -  z     <  x--1)     then  if (-4  -     x   <     4   +   F0)    then 
# 
# 
# 
# z    := z+  z  else  z     :=   z  +z    else 
#    y  :=x    + y      = {y → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 30 (Just (Tokens ('=' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if ((0   +  -4)   -     -2    =  z    +z  \8743  y     -  z     <  x--1)     then  if (-4  -     x   <     4   +   F0)    then \n\n\n\nz    := z+  z  else  z     :=   z  +z    else \n   y  :=x    + y     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 3454 198602bace0b
ok 3455 b7f1d1a7292f
ok 3456 a3340894a8b0
ok 3457 626226e9c513
ok 3458 6a6b36a45fa4
not ok 3459 f30236d54e02
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen4.bats, line 622)
#   `skip' '{}'' failed
# if (¬true)     then    x     :=   y     *     F  else   skip  ; 
# 
#  if ((KP + -3)    *   2     =  0 -   -4    ∨   2- 4 <    p +     x) then 
# 
# 
#   skip     else 
# 
#  
# skip = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 94 (Just (Tokens ('=' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172true)     then    x     :=   y     *     F  else   skip  ; \n\n if ((KP + -3)    *   2     =  0 -   -4    \8744   2- 4 <    p +     x) then \n\n\n  skip     else \n\n \nskip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 3460 0a031757dea9
ok 3461 da81b12b3e0d
ok 3462 da93ce96b265
ok 3463 bc7a7d790baa
ok 3464 1e3795b9eea4
ok 3465 cecdb4e8cba8
ok 3466 74d26f405eb4
ok 3467 7b8dede17d40
ok 3468 505918b4549c
ok 3469 efd3c7e6a1ba
ok 3470 0da73de369df
ok 3471 9d8b210a5811
ok 3472 1771674d3747
ok 3473 af1be7b150b1
ok 3474 d253c17d8ddb
ok 3475 8320f843f3d5
ok 3476 47391278ac16
ok 3477 fc80dc332a5d
ok 3478 75ee2aa05101
ok 3479 11fb2cc25fbf
ok 3480 9d9a8337a264
ok 3481 0faefd5b2102
ok 3482 25999654668b
ok 3483 30194b051c31
ok 3484 97848ea1929f
ok 3485 97dbcaa5cbe9
ok 3486 5b245729c979
ok 3487 58eac27e5368
ok 3488 db3e08814b4d
ok 3489 3a0b16a598b5
not ok 3490 05609e55a923
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen4.bats, line 915)
#   `xI   :=   y   *    z ' '{xI → 0}'' failed
# while x  *  -2 <  -4 ∨false      do if (4   *2 <     -2  -     y     ∧ c    -    x  =    -3     *    p) then 
#  
# 
# x :=    x     *1  else 
# if (¬(-2     - Ia<    x*     z))     then 
#  
#  b     :=    y   +  y      else skip    ;
# 
# if (3   -    -4 = (-4    +   0)  -   3  ∨ i +k    <   -2*  (z  +   3))    then 
#  
# y     := x    +     y   else 
# 
# xI   :=   y   *    z  = {xI → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 258 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while x  *  -2 <  -4 \8744false      do if (4   *2 <     -2  -     y     \8743 c    -    x  =    -3     *    p) then \n \n\nx :=    x     *1  else \nif (\172(-2     - Ia<    x*     z))     then \n \n b     :=    y   +  y      else skip    ;\n\nif (3   -    -4 = (-4    +   0)  -   3  \8744 i +k    <   -2*  (z  +   3))    then \n \ny     := x    +     y   else \n\nxI   :=   y   *    z \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 3491 76c02a5fcafa
ok 3492 451cbf93148b
ok 3493 fc4328369180
ok 3494 6b305e718f0d
ok 3495 7a0246e04eca
ok 3496 8830e797b6c5
ok 3497 7a54bef4910a
ok 3498 16f6f7a69d31
ok 3499 68f41af92217
ok 3500 fd064deaac54
ok 3501 f435be272bab
ok 3502 db95ea0d1546
ok 3503 c58d8a0a56fd
ok 3504 69b510fdae7e
ok 3505 6f9a17a789a8
ok 3506 d5c8cdcf2dce
ok 3507 d53fcf2f6edb
ok 3508 ac19ff46da07
ok 3509 138358a80c30
ok 3510 e1d5a2274d0c
ok 3511 30979c1aea7e
ok 3512 d610843cba26
ok 3513 eec18b8029bf
ok 3514 6df47aea9498
ok 3515 d3f9fa2d6973
ok 3516 a1317591e74e
ok 3517 6056b5d21d91
ok 3518 f4de52fc8400
ok 3519 0bc16e7e9268
ok 3520 3aa23f652eb2
ok 3521 19bbad40bae1
ok 3522 bad28363c818
ok 3523 62dedbab96f4
ok 3524 525327c930f8
ok 3525 d09371507d91
ok 3526 2655242af3df
ok 3527 be19362dca4d
ok 3528 9c35103dd1ad
ok 3529 8e5ca4e5c53d
ok 3530 fdef30137107
ok 3531 e4d7cccc79aa
ok 3532 4a4cd14023b7
ok 3533 a7fe494c925b
ok 3534 c884e2db3888
ok 3535 d59ac1672b67
ok 3536 9715571d3356
ok 3537 a19f049eaa83
ok 3538 ec6a9204331c
ok 3539 960af083d9be
ok 3540 6a6ec72fc49a
ok 3541 9d47fe3cd312
ok 3542 5de7abf0fe88
ok 3543 164ba9f917cc
ok 3544 edd909dbab70
ok 3545 03bb10eaf421
ok 3546 ac5bc8dba3e7
ok 3547 05dd75912d1e
ok 3548 847248d4bfbe
ok 3549 effec951e34b
ok 3550 d3895b6eaa16
ok 3551 928b34a6b33e
ok 3552 eb5b64425196
ok 3553 4383bbe2efeb
ok 3554 d717655efb15
ok 3555 33b4bc4b0871
ok 3556 1bf0c82b8239
ok 3557 d73f77b5a1ab
ok 3558 8207c92ee2e5
ok 3559 557c3646d238
ok 3560 803685d72047
ok 3561 3d70c6b2e9fd
ok 3562 552ecc9f018c
ok 3563 f86c1dd9b555
ok 3564 b3ccf0b4a728
ok 3565 e0779876ff4c
ok 3566 caf4a4bcca50
ok 3567 07d2b9687d3a
ok 3568 4d566704b1ab
ok 3569 ea4b4c2c49a5
ok 3570 1fa095729d72
ok 3571 fbd6a96e78eb
ok 3572 b4c6a49535d6
ok 3573 a99f631b2cff
ok 3574 b23bed7be896
ok 3575 3036ae9dc075
ok 3576 b53dce7407c8
ok 3577 00de2b02a8cc
ok 3578 fe463ac4c769
ok 3579 cd2089b3d49b
ok 3580 8aff5fa7fc14
ok 3581 8d2d71516a3e
ok 3582 c301d14c2761
ok 3583 399ccf7a6d3e
ok 3584 562d90cfa9c3
ok 3585 b8e71519ba25
ok 3586 e2ecaa8a8fd5
ok 3587 e2636ef873cc
ok 3588 ff89594ea76c
ok 3589 52abdd6fbb74
ok 3590 5a3035803c53
ok 3591 cb36c3d1547e
ok 3592 8145ce458d04
ok 3593 68778400d417
ok 3594 3c0ca79cce1a
ok 3595 c68ec89da59e
ok 3596 d9fd08fd885f
ok 3597 deae646c7854
ok 3598 7969fe456bff
ok 3599 a8f0a87f2dd1
ok 3600 824626e07a94
ok 3601 5ce5a558493b
ok 3602 a87a2809622b
ok 3603 007d595ea9f0
ok 3604 eeb00fa0a224
ok 3605 19951883d1bc
ok 3606 63e621b64ba9
ok 3607 1ed9ad554385
ok 3608 93ed0367b4fb
ok 3609 d437adfd141c
ok 3610 2c1a0a017db7
ok 3611 ecf0871dd338
ok 3612 8b3da155529c
ok 3613 cf208a39461f
ok 3614 17c589317ef3
ok 3615 8171de169dba
ok 3616 6105e7003a77
ok 3617 75c97500a273
ok 3618 13372eb70576
ok 3619 9a669fcee12c
ok 3620 16bd7a686f03
ok 3621 b47a6980f7dc
ok 3622 7df40fdd2002
ok 3623 823c3b87cfc9
ok 3624 db8ff8a66817
ok 3625 84f084a8d638
ok 3626 129dc4b73a3f
ok 3627 29e25f2ca445
ok 3628 0e3145c0c3d3
ok 3629 ad1f8e4f9e00
ok 3630 3aefadaaf800
ok 3631 1a2e52e39428
ok 3632 30316d5638ae
ok 3633 a1b7b47ebf77
ok 3634 866323f07a23
ok 3635 62b769e12e4f
ok 3636 3a72656fec00
ok 3637 4ed01b7bbf72
ok 3638 9efecc393ac6
ok 3639 651b342cfb8e
ok 3640 d54798e3080a
ok 3641 40df614e7894
ok 3642 b776b8d2a5c1
ok 3643 cb13c053baf3
ok 3644 5e5f8d51483a
ok 3645 a6906b5b672f
ok 3646 5ceeb50c06b4
ok 3647 7c5e39d0f31a
ok 3648 8c3e1e5c3a30
ok 3649 359cbc348b0f
ok 3650 a28bc8482702
ok 3651 46d3bec34192
ok 3652 4e2dbbb88f65
ok 3653 a2c1c05db472
ok 3654 b8deb1bbb6a6
ok 3655 a1292434ae22
ok 3656 6a1f2d68bf04
ok 3657 405f875d6bf0
ok 3658 fb70e96ea496
ok 3659 b99741ebf442
ok 3660 a08bd3cdf0c9
ok 3661 8271580d5fc4
ok 3662 c589324dbfd5
ok 3663 0a009c2b2d64
ok 3664 aae606a99247
ok 3665 5cfc37b75882
ok 3666 afa807d70da9
ok 3667 b2c94f64625d
ok 3668 3c99cadbc260
ok 3669 0bad437dee0b
ok 3670 25b9dc66b674
ok 3671 d3b32fc3c018
ok 3672 9ab33a6dd454
ok 3673 f59e09a88ade
ok 3674 4d91a223c32e
ok 3675 b7be9a666799
ok 3676 0cba8c5e0d82
ok 3677 e98d364f3b03
ok 3678 9ac124661b63
ok 3679 9ee53c6bc625
ok 3680 939c5fb9c980
ok 3681 653ec8dfe18d
ok 3682 7bf043b0c2ce
ok 3683 a8fa808a06bd
ok 3684 f6b311fda7ec
ok 3685 fe64d4cf8eb5
ok 3686 bb2917b4e938
ok 3687 d388875f73c8
ok 3688 fb60d9e07887
ok 3689 9a264923b250
ok 3690 98a6061a05c0
ok 3691 daa5f7d6f93b
ok 3692 ccf28b59fab2
ok 3693 76dc7820af59
ok 3694 b9cb0989c32f
ok 3695 a5a407630084
ok 3696 fe910c7553a1
ok 3697 1cbca6e8ecf8
ok 3698 7a1c71321748
ok 3699 54d3d3534a15
ok 3700 413d3ac6c1d6
ok 3701 d572634fc25c
ok 3702 c3b60d9e3551
ok 3703 9bb02b0d35fd
ok 3704 ed2c38a16a08
ok 3705 d5b4de5e95b4
ok 3706 698a9b89b889
ok 3707 702898f0ecce
ok 3708 c29c55e7ecd3
ok 3709 1e3f34a37f40
ok 3710 4703ab019f4a
ok 3711 92e69d843dd0
ok 3712 8589b77f580d
ok 3713 9b0e516570ab
ok 3714 0a888c23bc4c
ok 3715 1c3990caf08b
ok 3716 b2c9aced37a6
ok 3717 b8f43bee7ee6
ok 3718 79671e1e943d
ok 3719 f0af380b1f1f
ok 3720 d48c9ecf5900
ok 3721 7c3685fa3b39
ok 3722 e0e77285ca3b
ok 3723 d693bc405654
ok 3724 8f81b5646411
ok 3725 9065adfd51bc
ok 3726 08202da3b977
ok 3727 bd8b3c503452
ok 3728 6976043908be
ok 3729 83e71295a863
ok 3730 b35ce1e1ac76
ok 3731 3392fff77911
ok 3732 d52db30bce69
ok 3733 3b1b85db996d
ok 3734 985dc6461bc8
ok 3735 5e1303d45932
ok 3736 d863cd2e39f8
ok 3737 3f29bfa7740f
ok 3738 632c1cef1fea
ok 3739 4800e59833e7
ok 3740 9d08179ec53c
ok 3741 24a6d59cac83
ok 3742 9cfa2e2f2c03
ok 3743 a010972549e8
ok 3744 8eef8781cfb0
ok 3745 264c9b880bc1
ok 3746 058929853dc2
ok 3747 0464c4813539
ok 3748 398669bcad11
ok 3749 b3468dcd6ffc
ok 3750 26476048cce6
ok 3751 b4b2b7c25a4b
ok 3752 b2bffb338591
ok 3753 886ad0536953
ok 3754 7ab8868fe66c
ok 3755 e341fd078df3
ok 3756 b17d849e34cb
ok 3757 0b2982f24c49
ok 3758 7675246d92e9
ok 3759 d87bb21e2f17
ok 3760 5113b5e168b0
ok 3761 66951682b422
ok 3762 808b942260f3
ok 3763 0eef7d098fe9
ok 3764 3e8c7ca7768c
ok 3765 e78520a3c631
ok 3766 8c7540dcb406
ok 3767 1ac1419886cd
ok 3768 321a8013b739
ok 3769 4c42723442fb
ok 3770 9349338c8a54
ok 3771 45640ad58499
ok 3772 81d892a580e7
ok 3773 cd093fcd9f2b
ok 3774 e775d27c935b
ok 3775 d3da031ec51d
ok 3776 1bcd0363d382
ok 3777 5e6c11b336e4
ok 3778 ed534e79450a
ok 3779 b1708aebddf5
ok 3780 0aec403fa955
ok 3781 1d6987ec38bd
ok 3782 82197dab3d88
ok 3783 c8d0aaef6188
ok 3784 76cd775dcb29
ok 3785 1aa2857c0974
ok 3786 7d55563d23b0
ok 3787 9075e4574832
ok 3788 687ed2fa88b6
ok 3789 b6287d0f33ac
ok 3790 ed687cead0d0
ok 3791 1e9d7aebdf3f
ok 3792 990fc98d6a37
ok 3793 107e78f69323
ok 3794 fce124ef727b
ok 3795 aa9e75ac25d4
ok 3796 0545d54549a4
not ok 3797 c740214e2caa
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen42.bats, line 975)
#   `skip     ' '{}'' failed
# while false    ∧ z    +   hh< (1  +     z)     -    x do 
#  if (3   +  1=     2*   z∨  D1 +  0   < -2     - y)      then   skip     else 
# 
# skip      = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 47 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "while false    \8743 z    +   hh< (1  +     z)     -    x do \n if (3   +  1=     2*   z\8744  D1 +  0   < -2     - y)      then   skip     else \n\nskip     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 3798 e93e37f49db8
ok 3799 dc0dedb6db4b
ok 3800 c6f7cb04f45b
ok 3801 e84dccb2fec6
ok 3802 4a27ff715dd5
ok 3803 494c32238e79
ok 3804 a1c1a1f2d206
ok 3805 b594874d78bf
ok 3806 b10b426e4e69
ok 3807 f45a4f6bd0a6
ok 3808 ac66b859d511
ok 3809 5384b5838493
ok 3810 02bab24af59f
ok 3811 ee30f54eac31
ok 3812 0cc2edbba539
ok 3813 01ce49aac308
ok 3814 0b9bdfcdf8da
ok 3815 9b50d40b0d35
ok 3816 bb7b10cb8385
ok 3817 f6f8804b16b0
ok 3818 c1ce92d63d74
ok 3819 3d850d90ece6
ok 3820 14344193290b
ok 3821 5abdae617bce
ok 3822 bc9556053cee
ok 3823 97ecf59f04af
ok 3824 d9c9c47255a6
ok 3825 6c3acd69372f
ok 3826 8b80c527f27c
ok 3827 8516304cf8a4
ok 3828 0a65de9119b5
ok 3829 f4ba8120acb3
ok 3830 f1e51589782c
ok 3831 4a292253f120
ok 3832 05b9be74a47b
ok 3833 5b280ecbfc44
ok 3834 64173b2dd4fd
ok 3835 1dfc18203446
ok 3836 c87796261a20
ok 3837 ebe37bb7a793
ok 3838 33d905f3586c
ok 3839 a170ab139d14
ok 3840 bb74ebabee80
ok 3841 d85d5e37869a
ok 3842 79aa78cba04e
ok 3843 edb3e2bc9d7c
ok 3844 640f02012c61
ok 3845 b49bde1cf24e
ok 3846 b801c56bfd96
ok 3847 7ec24566c886
ok 3848 4cc30990e1d8
ok 3849 ed7ef20a6842
ok 3850 cabe4a60b98f
ok 3851 bbec19e8ebbf
ok 3852 dd8a230c7950
ok 3853 c0783b8b3286
ok 3854 3a3a98b18cb9
ok 3855 fe001b564798
ok 3856 2ad3800c5bfe
ok 3857 d04a30afdcba
ok 3858 baef5de044d7
ok 3859 61068ec46414
ok 3860 a09eeb290e3c
ok 3861 5bab9119a42d
ok 3862 681c3651b207
ok 3863 096c8954c824
ok 3864 5440d511a503
ok 3865 2b3dceab3a05
ok 3866 3918a5bce24e
ok 3867 75c8d2a97963
ok 3868 e2b9aa46c8aa
ok 3869 0338ca9f8b77
ok 3870 5431b0729815
ok 3871 9df402de43d6
ok 3872 b8b19a32830a
ok 3873 bd364d130e14
ok 3874 7d66797b3036
ok 3875 35f6b41b47ca
ok 3876 7ed8c84b2a59
ok 3877 6ec75707dd15
ok 3878 5f9c99681edb
ok 3879 e3d99fb85ee5
ok 3880 f08cdb29625f
ok 3881 6129a2bf9348
ok 3882 a14cc92bb58b
ok 3883 6c9167623fc7
ok 3884 a8073b3412ae
ok 3885 73abd438287a
ok 3886 144298e7ab7c
ok 3887 9488b4ad51df
ok 3888 65b1528eb7fa
ok 3889 f135e7e0aefc
ok 3890 59009a8fef55
ok 3891 264e1dda1f6f
ok 3892 3c3530588bef
ok 3893 fd09ac44bc9a
ok 3894 264f9c36ff9b
ok 3895 6d7d921a2703
ok 3896 8821a1269317
ok 3897 e07faba61fab
ok 3898 be21aaa3c150
ok 3899 6046d93d14d1
ok 3900 9a727073f194
ok 3901 897ebcd4f178
ok 3902 79682de7710f
ok 3903 28c9cb5e13a6
ok 3904 82816723807d
ok 3905 56e17a1611f6
ok 3906 600b0427d6b7
ok 3907 ad78717f57b3
ok 3908 c45b20ad14df
ok 3909 0245329eff22
ok 3910 72d0d6e2f438
ok 3911 741d0a19a0e1
ok 3912 244409b94d31
ok 3913 18a0e5db21bf
ok 3914 71639f1d1333
ok 3915 4371255c3d8e
ok 3916 755d10a85d1a
ok 3917 a5ea176d8281
ok 3918 890c0a76a9cc
ok 3919 ad9d73bdb448
ok 3920 cf72bfa60951
ok 3921 6b59cd4c6d4a
ok 3922 a1e40fae218d
ok 3923 1544199713bb
ok 3924 6dff2d228224
ok 3925 4cc9a7d059bd
ok 3926 298688477099
ok 3927 3692e21a38ed
ok 3928 5d79b0b5b025
ok 3929 6ed499f31a6a
ok 3930 a43b0e7d3b2f
ok 3931 1c985b662e48
ok 3932 6a06c6fb6c39
ok 3933 8d6c193f798c
ok 3934 e2a5f6dfd706
ok 3935 8bd5aace6414
ok 3936 5fcf1013d734
ok 3937 b43068ba3135
ok 3938 69493db98f90
ok 3939 3942bdf961d9
ok 3940 70d7b7b5d911
not ok 3941 2e4fae5a9045
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen44.bats, line 369)
#   `skip    ' '{}'' failed
# while 1    +z    = z    + x∧(1   -  2)    -    -4     <  y    *   0    do while (¬false)     do skip ; if false     then skip  else 
#     skip     = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 42 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('\172' :| ""),Tokens ('\172' :| "\172"),Label ('b' :| "ool expression")]) :| [], bundlePosState = PosState {pstateInput = "while 1    +z    = z    + x\8743(1   -  2)    -    -4     <  y    *   0    do while (\172false)     do skip ; if false     then skip  else \n    skip    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 3942 f49b0706a2e4
ok 3943 0176b6c176c3
ok 3944 cb9424c7c5ca
ok 3945 8a0eef40f23f
ok 3946 d73a51846eb4
ok 3947 2a9d3a5d4bd8
ok 3948 66659af132cf
ok 3949 d2641b4ebb1d
ok 3950 c7cb4ff40fe4
ok 3951 ce9bbee480f9
ok 3952 bb9522769daf
ok 3953 9b5bbc5f81c3
ok 3954 1c915430b2b8
ok 3955 a07ef65dd5a6
ok 3956 db330a243009
ok 3957 a64b4972d172
ok 3958 b71e1d12fed5
ok 3959 d0cdd51f5b1c
ok 3960 08812036a5f2
ok 3961 08ba361d7a73
ok 3962 51d416833601
ok 3963 0699bf1ea1bd
ok 3964 21a085ced12f
ok 3965 de2a8899cde8
ok 3966 ed9cd11ebb80
ok 3967 908dcba4a3d4
ok 3968 9a03190695a0
ok 3969 8a22c5b707bd
ok 3970 3d80611cc2af
ok 3971 236b41c497eb
ok 3972 79f9839c82fb
ok 3973 727379955276
ok 3974 cc5f89a700c5
ok 3975 5a7c6b4e6db9
ok 3976 53501381b2e5
ok 3977 8f8bae8ffd4a
ok 3978 9431b1fb7654
ok 3979 58b3627bd3fd
ok 3980 ae0461c45a21
ok 3981 e5c3dbbd8cee
ok 3982 5c5f6e7cead4
ok 3983 1614938d5eb7
ok 3984 081a72f1c32f
ok 3985 4af6fd497659
ok 3986 68855564e8c5
ok 3987 74f65d7ce1c6
ok 3988 5b950aca26a7
ok 3989 9259e5a1d0eb
ok 3990 ee47be43d8b7
ok 3991 7b617588b445
ok 3992 2ea15a26d894
ok 3993 b9f9e1b79f59
ok 3994 035e03c11937
ok 3995 fe6ea750801d
ok 3996 f2a205c38bdb
ok 3997 92a3d705ee51
ok 3998 24d247b5a7b3
ok 3999 9750e74298e1
ok 4000 b00291e8ef23
not ok 4001 11cdb77ac1a1
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen44.bats, line 1029)
#   `while (¬(4   + -3  <    c     *     -2))    do  skip   ' '{}'' failed
# if (true ∨    z+ -1 <    (0     + x)     *     3) then while -4 +   z   <4*    -2  ∨Q2    =N   +-1    do 
#  
#  
# skip else 
# 
#  
# x   :=z+ 0;
#     while (¬(-1-   3    < i    *-3))      do  
# 
# 
# while (¬(y   -     -2    <  1    + y))    do 
# 
# while (¬(4   + -3  <    c     *     -2))    do  skip    = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 41 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (true \8744    z+ -1 <    (0     + x)     *     3) then while -4 +   z   <4*    -2  \8744Q2    =N   +-1    do \n \n \nskip else \n\n \nx   :=z+ 0;\n    while (\172(-1-   3    < i    *-3))      do  \n\n\nwhile (\172(y   -     -2    <  1    + y))    do \n\nwhile (\172(4   + -3  <    c     *     -2))    do  skip   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 4002 3c0883edef07
ok 4003 e0081c46fbb1
ok 4004 bdec83668eea
ok 4005 a1daef77966b
ok 4006 ed9bfa59b9d6
ok 4007 9bbf7a716bcb
ok 4008 abaa24e6447b
ok 4009 6a5fc084bcd3
ok 4010 aa38dbe798f4
ok 4011 b8643127abeb
ok 4012 105ab85b0887
ok 4013 41824ad862bb
ok 4014 50f4640c2211
ok 4015 2d8b7c6882cd
ok 4016 2bcc88d36d51
ok 4017 728a2803ebb9
ok 4018 2894d029981f
ok 4019 499c015217db
ok 4020 6a0de1f6e172
ok 4021 59b84abc7764
ok 4022 13c79f1f34fd
ok 4023 2113ba13f6ac
ok 4024 02e8ba5c3309
ok 4025 6fae045e78f6
ok 4026 c86d98cda07c
ok 4027 b0cdb54b45b7
ok 4028 277ea7664ec3
ok 4029 ddf719f53241
ok 4030 7fad9dc24bb4
ok 4031 04e2e2546502
ok 4032 8fdcf579c8f9
ok 4033 d6990c9390ec
ok 4034 c4e6da25a73b
ok 4035 0fb0864cf8a1
ok 4036 460213c6a3d7
ok 4037 42a8a9be98ae
ok 4038 3f8ee63f5b02
ok 4039 5faac82787e7
ok 4040 af9fdc569795
ok 4041 a79cd4529c59
ok 4042 332af504650c
ok 4043 3f3d6b422bb6
ok 4044 a6fc3a0c9026
ok 4045 99ef4d68d16b
ok 4046 0fbcc50a1eac
ok 4047 fe766c5f199e
ok 4048 5256910093fd
ok 4049 4e2db57e041e
ok 4050 7bd2a158f6c5
ok 4051 1d5ea83fba0a
ok 4052 b6641edc31d1
ok 4053 2187128c0042
ok 4054 25890199fb2e
ok 4055 32c6a8c99792
ok 4056 6573f6b3dcbb
ok 4057 1bccc0fa7576
ok 4058 8e46b9420715
ok 4059 c30d875447d7
ok 4060 10b8a141ac96
ok 4061 50e61e10d929
ok 4062 1d239c1ffcba
ok 4063 35d7e9ced7c5
ok 4064 524a3115749d
ok 4065 c274b9ab67dd
ok 4066 c46a74742f81
ok 4067 85aec8cc229f
ok 4068 db9af56c0335
ok 4069 9cd1569a9867
ok 4070 15a71d6bc464
ok 4071 1dc65becac15
ok 4072 1e8334f68e35
ok 4073 755191bb0adb
ok 4074 d943de793a92
ok 4075 8c7f64d2cc57
ok 4076 a7609524988f
ok 4077 c11129564e69
ok 4078 f29dba30282a
ok 4079 885cdffd5f18
ok 4080 b5834e1b5928
ok 4081 1264fade71ae
ok 4082 19c472583950
ok 4083 e68e7406f614
ok 4084 ff67c94f0ac2
ok 4085 209283d783a2
ok 4086 57ea36e268e0
ok 4087 90cec8e6369e
ok 4088 e997ab9038f9
ok 4089 95ca76703403
ok 4090 2406862dd0b0
ok 4091 72907becbf14
ok 4092 a53d064d29fe
ok 4093 060d2f3cd3af
ok 4094 183787dc28c8
ok 4095 b1ad69d2718e
ok 4096 ac41e6c0cadd
ok 4097 b3dab9ccb6b4
ok 4098 3e284ed20086
ok 4099 6c86d8bab32a
ok 4100 ce39056e00fa
ok 4101 5bdd3a3dac3e
ok 4102 5303fe9ca20d
ok 4103 e7c8be40e584
ok 4104 7715f2692acf
ok 4105 769228353e56
ok 4106 13416e279788
ok 4107 524ce3ea9c89
ok 4108 1cf55fd119f7
ok 4109 3dd1a1bd5b1d
ok 4110 e7ae12ce9c6f
not ok 4111 496375e7fec6
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen46.bats, line 97)
#   `skip    ' '{y → 0}'' failed
# y  := x  *   z     ;if (¬(-4    + z   <   (cV  +   x)    * z))   then    while (¬(HO +   z   <     4    *    I)) do skip else 
# 
# skip     = {y → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 57 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "y  := x  *   z     ;if (\172(-4    + z   <   (cV  +   x)    * z))   then    while (\172(HO +   z   <     4    *    I)) do skip else \n\nskip    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 4112 77ca5db7de8c
ok 4113 077c8e272539
ok 4114 579992ca3d2c
ok 4115 44b4d760b47b
ok 4116 5c9eacf3439a
ok 4117 c8587e50178b
ok 4118 bde7741cb775
ok 4119 57dbdac121c5
ok 4120 c044574bf7cb
ok 4121 e67516569980
ok 4122 3a93d7249984
ok 4123 15576a4dd781
ok 4124 8c1979a16f86
ok 4125 674704bc3712
ok 4126 d8504bfc8fb8
ok 4127 6b09c850ff5c
ok 4128 0023815bdf64
ok 4129 2873713e6745
ok 4130 808403458ee8
ok 4131 e4a172533d1e
ok 4132 6d83491c86ce
ok 4133 7a09cccb3d1c
ok 4134 5076d573ab84
ok 4135 341b03297d72
ok 4136 fc0d3bc340c0
ok 4137 7cb121ca57eb
ok 4138 32db2ec29263
ok 4139 0ff9edf67851
ok 4140 326d81ae167d
ok 4141 f65a109c41fb
ok 4142 f1269e28e875
ok 4143 d829bfdca87f
ok 4144 33a46557081a
ok 4145 5a10ba142ca8
ok 4146 95e24428c82f
ok 4147 939bdae84bd6
ok 4148 f1e4bdf2d89e
ok 4149 feb005ef74c1
ok 4150 c85780beba17
ok 4151 e41592857353
ok 4152 c771c573f164
ok 4153 ee7406eff0cd
ok 4154 0135d67b4c87
ok 4155 b206c2e7b7f1
ok 4156 291c50be9809
ok 4157 31d865852640
ok 4158 d8fcb5691899
ok 4159 65fddc9c777b
ok 4160 776e976a3743
ok 4161 ebbdeab5a84e
ok 4162 75ee14f4a734
ok 4163 2284529519d3
ok 4164 15c7d2a788e2
ok 4165 057a886434ab
ok 4166 9656def0f07c
ok 4167 ab17050c913e
ok 4168 22f96f47b69b
ok 4169 785d9964d4cf
ok 4170 b80ca8516670
ok 4171 327b94afd57d
ok 4172 2d4f8b6d1824
ok 4173 7f5cefb3906d
ok 4174 066cd3368193
ok 4175 c5e81911a223
ok 4176 df9ff8550e1b
ok 4177 df32b3dbd371
ok 4178 cf68560b8815
ok 4179 f9ea5c111be8
ok 4180 9032ede0063c
ok 4181 b6a94fa8d7bb
ok 4182 0a0f032c80bb
ok 4183 a1acf6fec38d
ok 4184 a7eb1ecb40a0
ok 4185 5b604c778991
ok 4186 ceab58da6228
ok 4187 e2eb216f4a60
ok 4188 7368798a3368
ok 4189 23be674e135e
ok 4190 415413494d85
ok 4191 013d17dbb64f
ok 4192 cf43bbf7ea51
ok 4193 70ed089f28f1
ok 4194 8b18e0070584
ok 4195 187c6f60dcde
ok 4196 f2c80f558ac9
ok 4197 757b14f4c96c
ok 4198 e655bc531ce2
ok 4199 e9751555dc15
ok 4200 baa17e604106
ok 4201 497a8541a252
ok 4202 2185169e37ac
ok 4203 635f57541d18
ok 4204 89225ad59eb8
ok 4205 1f86526dfaf7
ok 4206 07fc6ce4acf1
ok 4207 991572fe82f2
ok 4208 ccc9ee12e382
ok 4209 ab4761e58f21
ok 4210 f7d663aee297
ok 4211 ef8350eb9ba4
ok 4212 278593a92260
ok 4213 b62f04b14bd1
ok 4214 4bc33682ec4d
ok 4215 8c7240e20c2d
ok 4216 76149a196a5a
ok 4217 83c55c61d869
ok 4218 ac507be40222
ok 4219 509aa097a789
ok 4220 b930cb31d2c6
ok 4221 eedb5611a6cb
ok 4222 2e596a828d0f
ok 4223 aab68fb89c7f
ok 4224 8208b41f7c41
ok 4225 11f518d4e37f
ok 4226 82aee746d59c
ok 4227 e77f8b4862e2
ok 4228 697cd3705cae
ok 4229 08245c983d00
ok 4230 064c39153162
ok 4231 3e60d6e82ad4
ok 4232 b3644e37d995
ok 4233 dbeccd6439fb
ok 4234 363f0d66f24d
ok 4235 261d5766966f
ok 4236 5ad818e25ea2
ok 4237 9e8c36149cdd
ok 4238 e930b94121e0
ok 4239 e8b4124ae5ad
ok 4240 ed4430f31fdb
ok 4241 900a98ece495
ok 4242 f8037df4f219
ok 4243 075ac87720c4
ok 4244 884a4afa9868
ok 4245 2258d956f973
ok 4246 337235644779
ok 4247 a2914fe220c3
ok 4248 1e5e15ae5346
ok 4249 a7b0bce890a9
ok 4250 a4fcb7c1a15b
ok 4251 1a347eda7a3a
ok 4252 16f5de474eeb
ok 4253 8c2c927a4a8c
ok 4254 2b421fc5803a
ok 4255 0632d97bfd65
ok 4256 dc71ecbf8eb7
ok 4257 4ab74d5196ae
ok 4258 6a358164a605
ok 4259 582f1532501a
ok 4260 6d8c8783d630
ok 4261 cd77dd2c6f32
ok 4262 37b80a122bcf
ok 4263 732bd20397ca
ok 4264 8d8a1c3f8161
ok 4265 b7ffbc8355ce
ok 4266 71bc57f6f0e1
ok 4267 d3b550fb428f
ok 4268 930dcb7557ab
ok 4269 92ce349810cc
ok 4270 49d05edf8988
ok 4271 d2408090ffbc
ok 4272 8b75369bf98d
ok 4273 1e911ba6a5fd
ok 4274 9919549648de
ok 4275 f7bce6d80e78
ok 4276 e7bfeb078924
ok 4277 e4809cdcdbc1
ok 4278 bcd31f471a32
ok 4279 8a8b4b09525a
ok 4280 7a4aaff3e16c
ok 4281 129008cfb61c
ok 4282 e043411a021a
ok 4283 f1ae9ea9cf3c
ok 4284 946ee4ef90d8
ok 4285 76f6d63afb43
ok 4286 65db99f78b64
ok 4287 ba04d6b98e4a
ok 4288 441b1e236b4d
ok 4289 e46226768116
ok 4290 75641a31c6ef
ok 4291 f188ff9aaaa6
ok 4292 07c24a2977c6
ok 4293 f6c8b1ecd7d4
ok 4294 21e314aacff8
ok 4295 c835c5c31805
ok 4296 8a3e5b64ded1
ok 4297 bb30c755d9af
ok 4298 0b4aa2eb7f46
ok 4299 ee17f8ea953c
ok 4300 046cb7d0e935
ok 4301 d59878360143
ok 4302 cef74e4953ee
ok 4303 89881c830e81
ok 4304 3ec15a9bf4de
ok 4305 c23ddf984867
ok 4306 2c1cf976f07b
ok 4307 7a637e0511c5
ok 4308 7d33609dd1eb
ok 4309 1403b5086524
ok 4310 6eac5c94d178
ok 4311 ea2d5afa2c1f
ok 4312 a17d897d7623
ok 4313 1b04a14ee0cf
ok 4314 05721ae92da4
ok 4315 6ba0a9780458
ok 4316 88f482e1d0da
ok 4317 9187be559c85
ok 4318 c93e19ecc784
ok 4319 74ce5f9fb865
ok 4320 529ff4e8465c
ok 4321 ab47faaaac64
ok 4322 ed9223c0d8cb
ok 4323 6e0b9cc35e97
ok 4324 8624f51ef532
ok 4325 862430b81c19
ok 4326 6f349064ea20
ok 4327 30c57c1dd72d
ok 4328 dc47256f28c4
ok 4329 358454099b4b
ok 4330 ad48b389510d
ok 4331 4bbeac1c5fb3
ok 4332 70120785525c
ok 4333 b2c65d44916b
ok 4334 2f64328946ad
ok 4335 9afe49be517f
ok 4336 1bd4ad75adce
ok 4337 cffebbe11d06
ok 4338 2f1f6cd36293
ok 4339 7a856e9fb321
ok 4340 ef07032b9833
ok 4341 ade64bf31dc7
ok 4342 90d23d35dda2
ok 4343 2a4b2f3aea30
ok 4344 378f46bffa04
ok 4345 f190b7068937
ok 4346 320f00d0c679
ok 4347 912bfdd1389f
ok 4348 b7f390433d56
ok 4349 4ddc9e4f370e
ok 4350 5cea84fb7291
ok 4351 8a6aa2fef855
ok 4352 55c1d201486a
ok 4353 a5277b1eca76
ok 4354 e0e697fa9d9c
ok 4355 cac39422a0b7
ok 4356 28cff0adf925
ok 4357 9ce3fd9d914a
ok 4358 d073696a0564
ok 4359 2187df045c42
ok 4360 755cec8dc99c
ok 4361 df23948eab26
ok 4362 41ee30967c16
ok 4363 89ee25d86be3
ok 4364 c8b6fdfd295c
ok 4365 7228abb1b836
ok 4366 20d7d788f27f
ok 4367 3e1fef58e1f2
ok 4368 8bf171bacd60
ok 4369 e85191c3c1b5
ok 4370 6b0c47017859
ok 4371 3bcb5e4b9279
ok 4372 f3abc73782a8
ok 4373 f436337110fe
ok 4374 f055f2fd6db5
ok 4375 1341e2b4d5ca
ok 4376 46ff65853fe8
ok 4377 4e10202d23b4
ok 4378 ad6b07cd1660
ok 4379 440cd86c782b
ok 4380 fcb7920eb399
ok 4381 b1f37410d79d
ok 4382 94dc8d1c941a
ok 4383 4b8b64ef95f9
ok 4384 31e684e256e4
ok 4385 4c4ff4d7df22
ok 4386 bf1e58412afc
ok 4387 311406d4bfce
ok 4388 379a961c7182
ok 4389 b9d677f982ec
ok 4390 4cfefc9c83a8
ok 4391 831370241ec8
ok 4392 7eed40c5bb4b
ok 4393 eaf3f496970a
ok 4394 434b1d525f76
ok 4395 657a1d66ac84
ok 4396 9d95a9e11f7b
ok 4397 3d6fe79b6c2c
ok 4398 4db9cedb9589
ok 4399 191277dfdb65
ok 4400 9dd6df713b72
ok 4401 c1561ab08614
not ok 4402 ed875d2b6d5d
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen49.bats, line 10)
#   `x :=-1 +    y     ' '{}'' failed
# if (¬false)  then skip    else  
# while (¬(I  *  -4     = y))  do  skip ;
# 
# 
#  while (1+    x)*    ol     <y   +  -4  ∧  false   do   
# 
# x :=-1 +    y      = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 91 (Just (Tokens ('*' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172false)  then skip    else  \nwhile (\172(I  *  -4     = y))  do  skip ;\n\n\n while (1+    x)*    ol     <y   +  -4  \8743  false   do   \n\nx :=-1 +    y     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 4403 983197ea9dfa
ok 4404 35ed649e6077
ok 4405 80b92b4aa901
ok 4406 fb15decbc658
ok 4407 23050bd28388
ok 4408 758e0ce4abee
ok 4409 14aabd9933c1
ok 4410 d9acc4f43d2b
ok 4411 1ada7d91a67a
ok 4412 f4a2b6dc7162
ok 4413 88d8af965dc4
ok 4414 c0a84d899547
ok 4415 569710b8a91a
ok 4416 9b67ed2f9ec7
ok 4417 c30d875447d7
not ok 4418 4e7e9e0cc289
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen49.bats, line 171)
#   `while false   ∨    y+   3     <   y6 -     y   do skip    ' '{}'' failed
# while 2 *  -1<   0    +   4 ∧ I  +     y=    2  -   x  do 
#   
# while 4   *  y<    (k   + 1)   -  YV  ∧     x    +   -3     =     1    * 4    do skip     ;
# while false   ∨    y+   3     <   y6 -     y   do skip     = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 93 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "while 2 *  -1<   0    +   4 \8743 I  +     y=    2  -   x  do \n  \nwhile 4   *  y<    (k   + 1)   -  YV  \8743     x    +   -3     =     1    * 4    do skip     ;\nwhile false   \8744    y+   3     <   y6 -     y   do skip    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 4419 8d52950fddf9
ok 4420 6f966de20ae2
ok 4421 1bfe281745f3
ok 4422 e93d410e0576
ok 4423 ef21c2eb1fd5
ok 4424 d420b1ff7762
ok 4425 4f1ce751da74
ok 4426 4da8628d37cf
ok 4427 c3e62b46366a
ok 4428 2502564d8bd4
ok 4429 9ad98ba131cb
ok 4430 cd8dab123389
ok 4431 1e11ee01b92a
ok 4432 0cc3ea5f3210
ok 4433 535cc0ddb486
ok 4434 9d915e30744c
ok 4435 d1d166998da2
ok 4436 23083281d2d3
ok 4437 238138ec03ce
ok 4438 1a79a3c32920
ok 4439 a5f841513b6b
ok 4440 e47b2f655c02
ok 4441 29af94cd4462
ok 4442 323f919e7890
ok 4443 6327317191dc
ok 4444 505f4cd035a5
ok 4445 b220a58bd4ff
ok 4446 1cc7c1ecc515
ok 4447 e985cc8454e3
ok 4448 b1b653d2ac80
ok 4449 c3ffb37b4db6
ok 4450 06056cdeff73
ok 4451 54989145ee52
ok 4452 af92d0fb9768
ok 4453 d4f6a38ea7ef
ok 4454 bc59e197d421
ok 4455 e72b494a734e
ok 4456 95173569f318
ok 4457 4feea8fd49ed
ok 4458 a9cafab31bb5
ok 4459 dd973568a537
ok 4460 d167f96837f7
ok 4461 89deafe80ad5
ok 4462 d3b7effabe69
ok 4463 c1afab3e9c4f
ok 4464 fd3227c5b755
ok 4465 fcea6df70dfb
ok 4466 65f88bd2b69a
ok 4467 b6957d83f32d
ok 4468 60439a721f1b
ok 4469 aa8722aaaccd
ok 4470 bbb44e611d58
ok 4471 4ee22b4ebca2
ok 4472 c2981ddb7d43
ok 4473 4bd88f431bd5
ok 4474 58420deb9610
ok 4475 a52189f2e664
ok 4476 ab3e19a0e886
ok 4477 258514e793c9
ok 4478 7bf6a915c28e
ok 4479 4912b5ac8254
ok 4480 acb2f2bb992a
ok 4481 5877c850e095
ok 4482 e9a0b36d34e3
ok 4483 dd9580d9db1c
ok 4484 1da066858e22
ok 4485 4eb0572b6d6a
ok 4486 87c56d626a37
ok 4487 e37cca57d4a5
ok 4488 70a9f50b5594
ok 4489 799598a27680
ok 4490 152d12374aa8
ok 4491 9b598648f401
ok 4492 0f3993130ff5
ok 4493 6c27961ae3f4
ok 4494 4ca52dcf51e6
ok 4495 b2efb703be19
ok 4496 65ad2f3696af
ok 4497 d5c6bc1b4bf4
ok 4498 1ed76732e92d
ok 4499 a6695000b7a7
ok 4500 c7fbc4a5c0bd
ok 4501 871431a84514
ok 4502 9daef4b47e8d
ok 4503 0f2f6b61ba96
ok 4504 425b3a7c1364
ok 4505 d1fbc9eccda6
ok 4506 d68e1234536b
ok 4507 ac8e92c091ba
ok 4508 702d5afea864
ok 4509 bf2e994c90b6
ok 4510 0c833002cbb1
ok 4511 0e7d8e224d09
ok 4512 5dd114026bda
ok 4513 10beccd92550
ok 4514 22502ce83f2a
ok 4515 fa296d54c4fb
ok 4516 e6b1bfd001a7
ok 4517 2b6ef513971d
ok 4518 3e77c36b26a0
ok 4519 1dc3e1783d2a
ok 4520 2cbb77ef805e
ok 4521 078a0a06f92a
ok 4522 523a51e20aa2
ok 4523 3086ee4cdf8d
ok 4524 76cc9fc1aa8d
ok 4525 97862a8f745e
ok 4526 87a1c5721800
ok 4527 8a479f7ea618
ok 4528 baebb1ddf215
ok 4529 3331f83c2ca9
ok 4530 3c861beea8c2
ok 4531 64905387e3f8
ok 4532 b792da72d54d
ok 4533 e47d918eb678
ok 4534 f2a6c714b923
ok 4535 5c9174fee88d
ok 4536 911e1ff7a626
ok 4537 1eb4d182abb5
ok 4538 0624ac26f033
ok 4539 d9a90bc330d7
ok 4540 0c4485806a73
ok 4541 98e894babec7
ok 4542 a3dcfba204bf
ok 4543 583128de16f1
ok 4544 71362dee461f
ok 4545 3ff17da7705f
ok 4546 cabf02b66d0f
ok 4547 5982e1fbd723
ok 4548 8bda8b001654
ok 4549 5dfb1dc3a64e
ok 4550 f700a6ef63f2
ok 4551 3a8f04b61783
ok 4552 2f89603c562d
ok 4553 e13b67cea67a
ok 4554 23fd85a9d82a
ok 4555 be7d9c351f52
ok 4556 b13e63a06d9b
ok 4557 c37d8f9f4df8
ok 4558 2327a835bc86
ok 4559 24342f3edfda
ok 4560 53681d60f7e9
ok 4561 672b902fd639
ok 4562 d8c3390a44d9
ok 4563 b219c1ffe988
ok 4564 c303dfcf63c9
ok 4565 1d5cd533d39c
ok 4566 7d7978f4ae17
ok 4567 71c0c1ff5c0b
ok 4568 e0f5689e8c07
ok 4569 fe105dca0bc5
ok 4570 5ac7437baa71
ok 4571 181f571e299b
ok 4572 79cd3a381398
ok 4573 bab1611e4a12
ok 4574 69c5574ad767
ok 4575 8f326a53798c
ok 4576 6e3a9733a729
ok 4577 8df7a241c316
ok 4578 4ef1b5d09102
not ok 4579 d4de85b0e0ad
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen5.bats, line 758)
#   `z    :=    z  *    1    ' '{}'' failed
# while -2   -    y     <    -3    ∨   2*y   <     -4     +   oK  do  
#   
# skip     ; if (¬false)     then 
# 
#  skip    else  
# if ((-4    --1)   -z <  N   +    A     ∨     z   <   -4 +     z)     then  
# skip     else 
#  
# z    :=    z  *    1     = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 143 (Just (Tokens ('<' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while -2   -    y     <    -3    \8744   2*y   <     -4     +   oK  do  \n  \nskip     ; if (\172false)     then \n\n skip    else  \nif ((-4    --1)   -z <  N   +    A     \8744     z   <   -4 +     z)     then  \nskip     else \n \nz    :=    z  *    1    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 4580 fdb2bdcd0ca0
ok 4581 f8d4ee2a3b92
ok 4582 6ef3c06ad5a3
ok 4583 03030bdc62db
ok 4584 5f82f86c7b18
ok 4585 7abdf3344963
ok 4586 302360af9a7e
ok 4587 48c6c3ca7b22
ok 4588 385596ca3181
ok 4589 9a6caa952979
ok 4590 db874d896918
ok 4591 46330d85e303
ok 4592 cfb619d020bb
ok 4593 c73f26bac233
ok 4594 31f63b3523bd
ok 4595 7d04577c9cfa
ok 4596 12fc819d88f4
ok 4597 389537abcfb1
ok 4598 067c4b4dc57b
ok 4599 8af34817c054
ok 4600 ffe81f539047
ok 4601 c8df006d643e
ok 4602 4942f996c3e6
ok 4603 a2d92d6b0215
ok 4604 d370cda1911f
ok 4605 7d9ce6c7b90f
ok 4606 6c4a2496c753
ok 4607 d184e6cdf20f
ok 4608 0c58c591e524
ok 4609 43458b10f9a7
ok 4610 d260d7b7ebed
ok 4611 411a044a1650
ok 4612 47de42f930ac
ok 4613 a1faa7b7a8e6
ok 4614 cc5a0818190d
ok 4615 692ec8ca449c
ok 4616 bdff23c7af8f
ok 4617 513a8e8dbf11
ok 4618 e599983b3e21
ok 4619 f57cd7f8e2e5
ok 4620 6e380ca523e5
ok 4621 f73e3db2c0f9
ok 4622 9c40eef0c2c1
ok 4623 e1c02ebadd68
ok 4624 395469e3f290
ok 4625 a98db4a159ac
ok 4626 63e3efabfe8a
ok 4627 96e72e8eec03
ok 4628 9d27f15fed49
ok 4629 612858713f29
ok 4630 0b129d43e9e5
ok 4631 4f425987d7b6
ok 4632 51348b73b54f
ok 4633 6ba31a4447d0
ok 4634 de31516d02c6
ok 4635 065c0ba1495c
ok 4636 8e4b00fe279c
ok 4637 22dec3ad9f11
ok 4638 64d604ff1d2a
ok 4639 df8b433597c3
ok 4640 95bacd2d119d
ok 4641 8692158396c8
ok 4642 fab32b479681
ok 4643 f02045d65431
ok 4644 4e4a8d3ac293
ok 4645 f989212cb7ae
ok 4646 039a10e98207
ok 4647 e4d8d0f44507
ok 4648 7753f17496a3
ok 4649 90d4932d2095
ok 4650 ca260a219618
ok 4651 b1d0ebfce1f7
ok 4652 08da61278780
ok 4653 6b6fe48cfed0
ok 4654 24574e439913
ok 4655 ae15e1652a02
ok 4656 8f35944920a3
ok 4657 5f68cf554b23
ok 4658 e68255cf8fac
ok 4659 bb7b2537c4f2
ok 4660 4f70eff8d1f6
ok 4661 f15f87a52ae9
ok 4662 02a8bbd2cf4b
ok 4663 d5986c71b7bc
ok 4664 7b76dedee774
ok 4665 6d2560d7f26c
ok 4666 ba567ab3bb1e
ok 4667 bfb91d31e038
ok 4668 9a8a44debd3b
ok 4669 74d5bdd1dd7d
ok 4670 df436880b0b6
ok 4671 c38bf2d1e89a
ok 4672 c9117dde8100
ok 4673 78241fa45095
ok 4674 0ae6b30fee07
not ok 4675 65abc212f9dd
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen50.bats, line 773)
#   `skip' '{y → 4}'' failed
# if (U   +     k  =    3  *    y)      then   if (true     ∧  true)     then  
#  y   :=y     -    -4   else  
#  skip else   while true   ∨     g4    *     z     =  (-1-     L)  - z     do 
#  z     :=    x     ;
# while x    *y  =  -4    ∧   -1  -    x    =     1 *z   do while y  +    -1   <   2*z     do 
# 
# skip = {y → 4}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 174 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "if (U   +     k  =    3  *    y)      then   if (true     \8743  true)     then  \n y   :=y     -    -4   else  \n skip else   while true   \8744     g4    *     z     =  (-1-     L)  - z     do \n z     :=    x     ;\nwhile x    *y  =  -4    \8743   -1  -    x    =     1 *z   do while y  +    -1   <   2*z     do \n\nskip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 4676 fa48dd0410c9
ok 4677 b85b7aa6aedd
ok 4678 2054a5015bc7
ok 4679 152e35df22a3
ok 4680 faa60bc2927d
ok 4681 d2b5358379ba
ok 4682 57b7387fc6a4
ok 4683 36c2173a8bde
ok 4684 56118ce4284c
ok 4685 b55578f44022
ok 4686 0b0bdd3a3f16
ok 4687 297f2e7ebdc5
ok 4688 6fc3c20ca3e4
ok 4689 efbb18d769ec
ok 4690 7948cb97b7db
ok 4691 5209de29f641
ok 4692 ad4cfcc7b906
ok 4693 484b4b27ba99
ok 4694 3dc10e64b792
ok 4695 0827d72b50c5
ok 4696 c01b054fd354
ok 4697 457bc98fa002
ok 4698 79f24ca345da
ok 4699 c739c6bfa2f2
ok 4700 84e719796435
ok 4701 61cb1e42a2fa
ok 4702 d9f72d163646
ok 4703 74cfefb4307e
ok 4704 bfc3c87c0f01
ok 4705 017de9b50780
ok 4706 376748002d43
ok 4707 f947c82efecc
ok 4708 220619a6b031
ok 4709 fd83e4d0ae27
ok 4710 45b6c8ab7c3f
ok 4711 fe6c065b064b
ok 4712 cf4abe84a422
ok 4713 920b0f851718
ok 4714 21b992757982
ok 4715 287af0733c97
ok 4716 3ac4a48c8437
not ok 4717 dfa9b2d92e07
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen51.bats, line 156)
#   `while (¬false) do x :=     3     +     x   ' '{}'' failed
# if (3    +  1 = (-2     +  p)-     4     ∧    true)  then  
# skip     else   
#   while true∧    y +   z=  bI    - 4    do 
#  skip ;
#  while false     ∧-2     <   y   +   2  do  
# 
#  
# while (¬false) do x :=     3     +     x    = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 29 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (3    +  1 = (-2     +  p)-     4     \8743    true)  then  \nskip     else   \n  while true\8743    y +   z=  bI    - 4    do \n skip ;\n while false     \8743-2     <   y   +   2  do  \n\n \nwhile (\172false) do x :=     3     +     x   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 4718 51f531c8365d
ok 4719 a86fffc68ec2
ok 4720 e1b332ce4bf3
ok 4721 044305e57653
ok 4722 70271eddae3b
ok 4723 eb3604a7de49
ok 4724 0e5bd0b68124
ok 4725 0509d28782d8
ok 4726 2f5b1a01303f
ok 4727 e5f9452097a1
ok 4728 da2c6bd537dc
ok 4729 9b4bbcf0cc0a
ok 4730 bc16a8bfdb8d
ok 4731 fd502a861c60
ok 4732 bcd51c96df8f
ok 4733 2cae45718b33
ok 4734 c08290948648
ok 4735 0e729dbf3d46
ok 4736 bd5b71ea8106
ok 4737 04dead5bfb60
ok 4738 09698b4527f9
ok 4739 e2607d555d20
ok 4740 8ccd9b9bb022
ok 4741 d97e9efc5e6c
ok 4742 834a3f73bf4c
ok 4743 9e5606dfa352
ok 4744 2ce2b9cb3ba0
ok 4745 473f569bfd21
ok 4746 dee1bd12e499
ok 4747 d1f0cacf806c
ok 4748 8da0bc1fea6c
ok 4749 b271cd33b9da
ok 4750 351cafdf7654
ok 4751 edf7d135219b
ok 4752 53fbac847340
ok 4753 443f21884730
ok 4754 d3dbfe682d38
ok 4755 1e429a05c50c
ok 4756 003684adbdb2
ok 4757 37a89cb3d605
ok 4758 69bfd0dbd5fe
ok 4759 2d2b0c17ffb4
ok 4760 f4cdae4e11cb
ok 4761 2c77e35060df
ok 4762 52c2aa9b1266
ok 4763 1367f6537249
ok 4764 1d37ec63a57e
ok 4765 39928bf075ee
ok 4766 c63a3a5b79c9
not ok 4767 0552617bf3e1
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen51.bats, line 659)
#   `skip ' '{W3 → 0}'' failed
# if (¬(3   =   M  *     -1))    then 
#    W3   :=   x  -    y   else  skip     ;
#  
# while (1 + z) -MC    <-2   -     y   ∧   false   do 
#  skip  = {W3 → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 95 (Just (Tokens ('-' :| "M"))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172(3   =   M  *     -1))    then \n   W3   :=   x  -    y   else  skip     ;\n \nwhile (1 + z) -MC    <-2   -     y   \8743   false   do \n skip \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 4768 6fbe8edc39e6
ok 4769 05362f382ba8
ok 4770 6dccca3c5727
ok 4771 0d3b2504e68f
ok 4772 c3c5e4d539e8
ok 4773 0b9fd21f8a41
ok 4774 0aed98d56e7e
ok 4775 231d29ab7d06
ok 4776 2b0d62449c7c
ok 4777 93a675ae381e
ok 4778 6c95a3c439d1
ok 4779 045fd743814c
ok 4780 c0fb657fdb48
ok 4781 a4a09764c14a
ok 4782 fb204144bbec
ok 4783 d318931c1ec5
ok 4784 a42c689c9208
ok 4785 6531d1736a84
ok 4786 50380cc12eaa
ok 4787 7356069f2c0a
ok 4788 c9dfe3dd5a89
ok 4789 612bd4e1058d
ok 4790 56a66d3c992d
ok 4791 c9960e268297
ok 4792 403f734c034b
ok 4793 910d694d2a2c
ok 4794 b7fe83970c8c
ok 4795 4d8778de99ac
ok 4796 19238466ca98
ok 4797 08d417181fbb
ok 4798 562c1c99bc81
ok 4799 dbdfaeb4a278
ok 4800 0dfe28f7c12f
ok 4801 009da86313d8
ok 4802 ee0bbf7cd1d9
ok 4803 eb2eac38c8e7
ok 4804 6859f3c3a1e1
ok 4805 771e3b8dd6aa
ok 4806 5c769bf302d6
ok 4807 ee62a668d1d3
ok 4808 c4a8bf19f579
ok 4809 79dece2824de
ok 4810 9910354dc815
ok 4811 048b29cb71d7
ok 4812 728bfb99af07
ok 4813 6ff0fdb7b8ba
ok 4814 2b4a9e1db6aa
ok 4815 0e8e03ed2137
ok 4816 3a96a8bb3572
ok 4817 814da25deec9
ok 4818 8550156ab792
ok 4819 eaf8dd9a431c
ok 4820 2d18dc1b9a5e
ok 4821 456e280c4d8c
ok 4822 77d8ec5463d3
ok 4823 58461efba3ce
ok 4824 06859ede60fd
ok 4825 1db2bea18e19
ok 4826 496825cb3899
ok 4827 d036f69ce83c
ok 4828 817d97ca080b
ok 4829 40d132b2a0dc
ok 4830 034221efca83
ok 4831 4a35d86e501d
ok 4832 4b1b4b198c05
ok 4833 9ed62272e83e
ok 4834 2fcea35befb1
ok 4835 f4b6bad9fa64
ok 4836 656210e6b2e6
ok 4837 49de102e22f3
ok 4838 6acbeae795e3
ok 4839 45a426db188d
ok 4840 62f28ac0ddcf
ok 4841 2a8d463f595a
ok 4842 395d3c764084
ok 4843 1dd2b60c1240
ok 4844 08b26678e61a
ok 4845 99fbf98e52b6
ok 4846 5e5653be7020
ok 4847 4beb605bc7aa
ok 4848 b0a4925b1790
ok 4849 192b8cacdcea
ok 4850 e770858ad37f
ok 4851 5fcc9db5aafc
ok 4852 4a678e82b4fd
ok 4853 bcabfb7b0746
ok 4854 2c59d0fcf90a
ok 4855 9a4dd1d64a41
ok 4856 99d17808dc59
ok 4857 68da6dcce833
ok 4858 fc2d621b78fe
ok 4859 66707656dd32
ok 4860 aa055874ce16
ok 4861 e06f5af8aa6f
ok 4862 b529716e622c
ok 4863 d77d477212e1
ok 4864 01cf1bf6c8e7
ok 4865 4e95ee1fdaeb
ok 4866 394954a6bddc
ok 4867 35d5b29f72ae
ok 4868 f471d7373cab
ok 4869 c02f53446f8c
ok 4870 b206ee2b0ce1
ok 4871 256c7705d45a
ok 4872 51572eceffc7
ok 4873 f93f632ab415
ok 4874 9cd1603bb499
ok 4875 ed1f7d0e9f94
ok 4876 6e7cf08be65e
ok 4877 66521312d6dd
ok 4878 5a6e0a1bf802
ok 4879 6b5cae208355
ok 4880 c1327c63fbb0
ok 4881 8b9c7c8cbee6
ok 4882 0ecd0c0cdb18
ok 4883 ffe200f2fc9a
ok 4884 b0af3c5b6e2c
ok 4885 ca7020b3b9f6
ok 4886 0fed383e6926
ok 4887 e38da6ab1a50
ok 4888 1e559445e340
ok 4889 6951da055c83
ok 4890 89825f569761
ok 4891 6966c51106be
ok 4892 0892f92b4b2b
ok 4893 98fcf3575b72
ok 4894 01a58e639c93
ok 4895 13f06a187437
ok 4896 c4ab4835d572
ok 4897 443261279036
ok 4898 84ab45cbe456
ok 4899 4eecc1d3d32d
ok 4900 ab57e6f1c2b9
ok 4901 d9015b9bd0d8
ok 4902 736e9a7366fc
ok 4903 74799afe1882
ok 4904 5a93ad276f62
ok 4905 bdd48a27a74e
ok 4906 5cf95e641178
ok 4907 8e9e64e337b6
ok 4908 2c909dcd8f48
ok 4909 f54f478f0e3e
ok 4910 698d5fd6631e
ok 4911 e0338e0c77e4
ok 4912 9d2333daee23
ok 4913 dfe9e071c7c7
ok 4914 18b73b7af149
ok 4915 08eaa4c51749
ok 4916 81d8d08dd7c7
ok 4917 0eb0e6d370a9
ok 4918 002756aa3dff
ok 4919 e9aa30cfe722
ok 4920 24fbaccdbb6b
ok 4921 739112c757d4
ok 4922 7c0ba737d5a4
ok 4923 8e97c7a2728d
ok 4924 7630c073c826
ok 4925 4c02eff8d42c
ok 4926 3e9a2d2a6735
ok 4927 535f1121b452
ok 4928 32d3d2fd0cdf
ok 4929 cff6a76256f4
ok 4930 d98516e0540d
ok 4931 8240766c2bec
ok 4932 d4554a31763b
ok 4933 469b1cafbd3f
ok 4934 e252bc7d1048
ok 4935 1724a10e623c
ok 4936 9a8fe4337d7c
ok 4937 5e26b309eebe
ok 4938 1cdbbeff1c25
ok 4939 35445f3b344b
ok 4940 8380276dc716
ok 4941 9b4f5febccda
ok 4942 29166d54012c
ok 4943 a031f231dc30
ok 4944 acf234b21d25
ok 4945 f455f4f7b46e
ok 4946 1c2acb23c57e
ok 4947 e6906fc830bb
ok 4948 8e9b124ed833
ok 4949 b4e25ce28094
ok 4950 bc994f677dde
ok 4951 be8f3a173244
ok 4952 dff2b18925c4
ok 4953 1e98936208b8
ok 4954 66ee3aec707e
ok 4955 1510f1ed38a6
ok 4956 fe91d7399aca
ok 4957 19fdd94fdabc
ok 4958 92085a7baacd
ok 4959 c30c56f2739e
ok 4960 8125eeb9dda1
not ok 4961 1db4f2e459ca
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen53.bats, line 634)
#   `z    :=    -4   --2   ' '{}'' failed
# if (false ∧0  *     -3    <  3*    x)     then 
# 
#  tW :=     p*  -3      else  skip;if (false   ∨false)   then   
#  
# if (¬true)   then     y     :=-3     *  oo  else 
#   
# z    := 0    *     z else 
# 
#   if (4   *y <   x    -    -4∧2    *   -3<    x    +  x)   then skip   else 
# 
#  
# if (j     -  4   =   (y     +x)    -     y   ∨ true) then  skip   else 
# 
# z    :=    -4   --2    = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 311 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (false \8743\&0  *     -3    <  3*    x)     then \n\n tW :=     p*  -3      else  skip;if (false   \8744false)   then   \n \nif (\172true)   then     y     :=-3     *  oo  else \n  \nz    := 0    *     z else \n\n  if (4   *y <   x    -    -4\8743\&2    *   -3<    x    +  x)   then skip   else \n\n \nif (j     -  4   =   (y     +x)    -     y   \8744 true) then  skip   else \n\nz    :=    -4   --2   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 4962 5515cdebc1dd
ok 4963 07b387563e58
ok 4964 0c70060ba2e7
ok 4965 51c901621c2f
ok 4966 dabe2b3ac51b
ok 4967 da0c08f765ed
ok 4968 b0264fa17c95
ok 4969 5c694e81b526
ok 4970 39e4e6825423
ok 4971 729ff92b1bbd
ok 4972 6a01ceb84399
ok 4973 0fff3a29c34e
ok 4974 8ace87be20a0
ok 4975 80af8326220d
ok 4976 07ad7f890b89
ok 4977 8484b50718b4
ok 4978 eccfbae9fbff
ok 4979 13a51e686b98
ok 4980 a9246d63285c
ok 4981 3f23b86e871a
ok 4982 4a7f3928f6cc
ok 4983 4cecf5f96ece
ok 4984 f4a8c62d77e8
ok 4985 bebf713d211c
ok 4986 e7359e96b0c8
ok 4987 6ef5ba079149
ok 4988 8a94afd26504
ok 4989 518669d74e22
ok 4990 666448089960
ok 4991 a91a82ad4a08
ok 4992 f31d773a99f8
ok 4993 daead0e8697e
ok 4994 3a7d3966d683
not ok 4995 248fb8e70bf4
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen53.bats, line 958)
#   `if (-1    *-2     = 4     *  y  ∨ 2    *    z9  <   z     *     3)      then  z :=     0 + v3  else x     :=  -3     *u8  ' '{x → 0}'' failed
# while (4     -     -2) * z    <    L    + z   ∨ z    +  k =    2    *     3      do if (¬(-4 +G    <   x   *    2))   then  skip      else 
# z   :=B  +   -3 ;
# 
# if (-1    *-2     = 4     *  y  ∨ 2    *    z9  <   z     *     3)      then  z :=     0 + v3  else x     :=  -3     *u8   = {x → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 23 (Just (Tokens ('*' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while (4     -     -2) * z    <    L    + z   \8744 z    +  k =    2    *     3      do if (\172(-4 +G    <   x   *    2))   then  skip      else \nz   :=B  +   -3 ;\n\nif (-1    *-2     = 4     *  y  \8744 2    *    z9  <   z     *     3)      then  z :=     0 + v3  else x     :=  -3     *u8  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 4996 c4ce0f160c4f
ok 4997 86f5d69d97d9
ok 4998 590beeb1bf5c
ok 4999 3eea21ec8cd1
ok 5000 2b1554de96b6
ok 5001 2f7e39a8f7d4
ok 5002 838cd1265382
ok 5003 fd36709d6543
ok 5004 8bc681c13740
ok 5005 e474b0ed4e24
ok 5006 296c3c371d73
ok 5007 a2598cbdcda0
ok 5008 607aebe14f20
ok 5009 13368cd1894a
ok 5010 8a22be820fe5
ok 5011 416abb413fd7
ok 5012 7507ee76efa1
ok 5013 4c0b1724d207
ok 5014 6970a52bb7b6
ok 5015 d17892bd63f5
ok 5016 aa62fe06afee
ok 5017 f0d7b0ae51a9
ok 5018 27e45e1c7e2a
ok 5019 d55be2b75f3c
ok 5020 0d86a0a00047
ok 5021 73b53f83c907
ok 5022 d99f90fe08c2
ok 5023 7b62c228ba94
ok 5024 5a3fd1a0f6fc
ok 5025 06799c4375a1
ok 5026 b970eadee239
ok 5027 f447eff66d92
ok 5028 74084e65da0a
ok 5029 54de8d282da5
ok 5030 47335432e429
ok 5031 127588667743
ok 5032 a466f9160120
ok 5033 bac9bee989e1
ok 5034 81bcc55d2fff
ok 5035 854f56588425
ok 5036 0174e36c8c53
ok 5037 77a95aab3d83
ok 5038 a44994a5bcd9
ok 5039 ebec367d3137
ok 5040 e9481f8b9cf1
ok 5041 9abf90045b9a
ok 5042 b2b4e6453613
ok 5043 eecdff03c8b7
ok 5044 cfdefb20a3b5
ok 5045 228290a1be1e
ok 5046 083fbdf48184
ok 5047 3c10a0329660
ok 5048 a141d8f06a4f
ok 5049 8e57a3bf0b28
ok 5050 0aad5d399287
ok 5051 ad13bc3f3029
ok 5052 d3d2b179e749
ok 5053 8b5bcaef584b
ok 5054 3d913ea97ce2
ok 5055 4dc1bff9ecc1
ok 5056 fcb76c3b2327
ok 5057 d591f3ac7198
ok 5058 b0c2b041bd91
ok 5059 92affa6c630a
ok 5060 5f60d55177e4
ok 5061 3b0c92c0617a
ok 5062 9daf7bb0b394
ok 5063 20be38729127
ok 5064 6855088deaec
ok 5065 5fe4f53244b0
ok 5066 97b152970ca9
ok 5067 47dddf8fda52
ok 5068 5d6a077f6c00
ok 5069 c1cded42e765
ok 5070 fc36961e8007
ok 5071 20095787aac5
ok 5072 d78f0b2b0d28
ok 5073 ef6ddf776b30
ok 5074 140fc21c07aa
ok 5075 24b554ee565d
ok 5076 2ea1a1677b37
ok 5077 3fff81cd83a1
ok 5078 0ea8edac2236
ok 5079 53a8bd0e7017
ok 5080 08dedc6c5b7c
ok 5081 fabec2de796d
ok 5082 9429b167b17a
ok 5083 e78d19a5b3d4
ok 5084 b861d10782de
ok 5085 25ea9d2717f2
ok 5086 a8608ddbf4f6
ok 5087 712ef38a2042
ok 5088 fdb182d22a77
ok 5089 adfcaf9d8c80
ok 5090 9880d6b5b967
ok 5091 6f7c8cd6c18f
ok 5092 94605e8b1641
ok 5093 af4cc6462fad
ok 5094 80dcb8e89320
ok 5095 b8247b9db703
ok 5096 a9166b53a35b
ok 5097 e2d454c7088e
ok 5098 1cf7bb0ead1e
ok 5099 55aa743f4d84
ok 5100 99a48db76fc6
ok 5101 6635c2678a1d
ok 5102 baa4a5f360f6
ok 5103 9a5965984d3c
ok 5104 3d1d15c3f872
ok 5105 313db132eb53
ok 5106 fe6ac478ecdd
ok 5107 704a7fc073ef
ok 5108 ce193229b6ba
ok 5109 15748b43ff3a
ok 5110 ec1adeb9d63b
ok 5111 5032c175da3e
ok 5112 8e13c8c12e34
ok 5113 0631f51b213e
ok 5114 b4fde19f9be9
ok 5115 630d17bd3288
ok 5116 c0cf14dc1f27
ok 5117 22ad5809e2b6
ok 5118 3482d49c2820
ok 5119 4e255512d6b4
ok 5120 e82f24d12214
ok 5121 d04956092abc
ok 5122 a760845f4ef7
ok 5123 be9ed44ea2f7
ok 5124 583cdd7e4379
ok 5125 b2635c6d1a1e
ok 5126 ebc311131f2d
ok 5127 95da3368ad49
ok 5128 e7123220880a
ok 5129 3ed5efc97d4b
ok 5130 f7022ffbb1af
ok 5131 3710ecfe2408
ok 5132 10a6c62febe6
ok 5133 a4ad2d7ebf2d
ok 5134 38d9a1b35eaa
ok 5135 ec337021b816
ok 5136 caaccdfa2c75
ok 5137 9237456d3f38
ok 5138 1f92e424eaf9
ok 5139 b8ec58592cd0
ok 5140 df39fe6e5d1b
ok 5141 39d6221ba260
ok 5142 aafbf02a12c5
ok 5143 247670dac9a1
ok 5144 12a3dd3090a1
ok 5145 492698712c01
ok 5146 93db45201cc9
ok 5147 de0552cb7bf5
ok 5148 c7e16815bdd6
ok 5149 10ee02a987da
ok 5150 c8f30e50dabb
ok 5151 920fe53828ea
ok 5152 f006c388e6e7
ok 5153 1300d842619e
ok 5154 ff72451ff86c
ok 5155 97379525e251
ok 5156 7dad2a348d28
ok 5157 5e9653c03a28
ok 5158 17fbd98bcdc9
ok 5159 16ab2259f7e3
ok 5160 4a558a17e594
ok 5161 16fe4de7b4ac
ok 5162 42df225cb976
ok 5163 29bb637c7dd1
ok 5164 9943c5059412
ok 5165 4e302bdfd4e7
ok 5166 b6b966f91bc0
ok 5167 9f43684029c4
ok 5168 a1d93626f02f
ok 5169 fb76f93deab7
ok 5170 36862963fea8
ok 5171 506ceae3214f
ok 5172 e893560b66ea
ok 5173 c01d35422ced
ok 5174 b0f5f7c6eb78
ok 5175 61b56d51e1f7
ok 5176 fbde9af3ee9d
ok 5177 e4fd0cd95e63
ok 5178 93c607d5e44f
ok 5179 6ada6b1ae00e
ok 5180 e35fd02b048c
ok 5181 d60f44254699
ok 5182 88e614feeb3e
ok 5183 6cbac75954c6
ok 5184 0bb86550320d
ok 5185 0fd8fb2b5e27
ok 5186 6b45557ce0fa
ok 5187 dcd24b3aa369
ok 5188 891aca930d0c
ok 5189 05ebec35ebce
ok 5190 3c5ce13743aa
ok 5191 e66003f7142b
ok 5192 e90cf44e3b38
ok 5193 d109a1d66c1e
ok 5194 66e665882251
ok 5195 ad035a54f464
ok 5196 05641e33cc4e
ok 5197 a6173a0e6bfd
ok 5198 31b90102e705
not ok 5199 429d5951ba27
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen55.bats, line 957)
#   `z     :=   1    -  4 ' '{z → 0}'' failed
# if (x   =    x     *    0 ∨   false)  then   
# 
# z    :=0  -  z else 
#  
# skip   ; 
# 
# if (y   -G     =    x+   x  ∨    true)    then    while (¬((x +   Z)*  x=   y   *     z))    do 
# 
# skip else 
# z     :=   1    -  4  = {z → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 153 (Just (Tokens ('=' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (x   =    x     *    0 \8744   false)  then   \n\nz    :=0  -  z else \n \nskip   ; \n\nif (y   -G     =    x+   x  \8744    true)    then    while (\172((x +   Z)*  x=   y   *     z))    do \n\nskip else \nz     :=   1    -  4 \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 5200 2bc53ec4d1ec
ok 5201 9c38d5e06bde
ok 5202 a3b8f8a4f67f
ok 5203 9dd37c6efbb0
ok 5204 698a1f46a3bd
ok 5205 8c26eebd208b
ok 5206 54791888b4ae
ok 5207 32e2e292761e
ok 5208 770350e3cf96
ok 5209 85d6b6f0167b
not ok 5210 5e059c2d4470
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen56.bats, line 83)
#   `while y     + x <     -4    +2∧  true  do skip   ' '{}'' failed
# if (1  -   y<    z     *   1∨     z- -1   =z     - y)      then if (1- 3  = (x  --1)    -   x∨     1  *     A9  <-2   +   -4)     then 
# z := 1+    xG  else 
#   
# skip      else  skip  ;
# 
#    while y     + x <     -4    +2∧  true  do skip    = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 88 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (1  -   y<    z     *   1\8744     z- -1   =z     - y)      then if (1- 3  = (x  --1)    -   x\8744     1  *     A9  <-2   +   -4)     then \nz := 1+    xG  else \n  \nskip      else  skip  ;\n\n   while y     + x <     -4    +2\8743  true  do skip   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 5211 05ae15ee5853
ok 5212 e9af161cfcb4
ok 5213 6149ba872284
not ok 5214 13195afa92c0
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen56.bats, line 116)
#   `skip' '{}'' failed
# while z     +  x   <     (2    -     Vt)   * -1   ∨ ZH+a7   =   1   +     3     do 
# 
#  y  := z   *    c ;
#  while 0   +  -3  =     -1+z∨     y    -s0=    -4   *  -1 do 
#   skip = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 43 (Just (Tokens ('*' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "while z     +  x   <     (2    -     Vt)   * -1   \8744 ZH+a7   =   1   +     3     do \n\n y  := z   *    c ;\n while 0   +  -3  =     -1+z\8744     y    -s0=    -4   *  -1 do \n  skip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 5215 82815ca0d6f1
ok 5216 6d789ddfa04c
ok 5217 328f8c6693ed
ok 5218 621fd533e2fa
ok 5219 9043d3ceb972
ok 5220 494bc23047fd
ok 5221 0a117048f8b3
ok 5222 e8dde43a5e05
ok 5223 27c24b88c322
ok 5224 fc4df3f4cd85
ok 5225 b886855d0391
ok 5226 1a4f3108d8c9
ok 5227 1aa09af7e98a
ok 5228 9eac82e333c3
ok 5229 7991075e42b8
ok 5230 de75de3bca4c
ok 5231 f7a383053837
ok 5232 dec186333804
ok 5233 2b7f940978eb
ok 5234 e0f7e25b8958
ok 5235 9e286cfa424d
ok 5236 558bba8bb9b5
ok 5237 858ac9bb0898
ok 5238 a5b491d7b4dd
ok 5239 51c94adf7c27
ok 5240 7d59e627d556
ok 5241 13b22f3c31a3
ok 5242 6a813d4c252f
ok 5243 afe85dc468ee
ok 5244 a66ecf38c88f
ok 5245 813e258ff862
ok 5246 9f0b10928f93
ok 5247 95d1032df85e
ok 5248 018320b55c70
ok 5249 64862a8c7156
ok 5250 5f8d098948ef
ok 5251 dcad15ffb599
ok 5252 828e07c8ecf6
ok 5253 3a662b1d7a28
ok 5254 d4b871f8962f
ok 5255 5c91f4359d46
ok 5256 e0d745e0d6f4
ok 5257 decb49aeb1af
ok 5258 ab3565fdcb10
ok 5259 1699f4b5e080
ok 5260 d1c7eaa3046e
ok 5261 cf00bc9332f5
ok 5262 08b7bc77a5da
ok 5263 a1f1595d31f8
ok 5264 4c55b83ee2e8
ok 5265 3b5d8a72589f
ok 5266 e06619a90328
ok 5267 91ac243e6317
not ok 5268 bbd381a70f8d
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen56.bats, line 662)
#   `skip   ' '{}'' failed
# while y    *  x=y -  y     ∧     -4 *    3     = -2   -   y      do skip; 
#  while y*x = C    *    y  ∧ (-3 + z)  * -1  =  4 *     -2 do 
#   
#  skip    = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 113 (Just (Tokens ('*' :| " "))) (fromList [Tokens ('\172' :| ""),Tokens ('\172' :| "\172"),Label ('b' :| "ool expression")]) :| [], bundlePosState = PosState {pstateInput = "while y    *  x=y -  y     \8743     -4 *    3     = -2   -   y      do skip; \n while y*x = C    *    y  \8743 (-3 + z)  * -1  =  4 *     -2 do \n  \n skip   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 5269 dbb04899dd86
ok 5270 6f7fa7d9ad08
ok 5271 ee0b2d8b76ab
ok 5272 16ceec150aed
ok 5273 8ef90dae1840
ok 5274 74ae8a0711e9
ok 5275 c183518b9ad0
ok 5276 372ecf667d45
ok 5277 82c0569885ec
not ok 5278 0eeeef2585b4
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen56.bats, line 788)
#   `skip' '{x → 3, y → -4}'' failed
# if (sU <-1 +    2∨Da   -y< 1    +     -3) then   
# if (OV   +  1 = u   -   y   ∨    false)     then y    :=    2  *    0    else  
# 
#  x :=    3+    z  else 
# 
# if (x     - y<4   - 0  ∧  -4    *-3  <  4) then 
#  B :=    -4     *     z     else  
#    skip     ;   if (false∨ (0     +z)     -y=     gV-    0)  then 
# 
# 
# y    :=     T +    -4   else 
#   skip = {x → 3, y → -4}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 282 (Just (Tokens ('-' :| "y"))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (sU <-1 +    2\8744Da   -y< 1    +     -3) then   \nif (OV   +  1 = u   -   y   \8744    false)     then y    :=    2  *    0    else  \n\n x :=    3+    z  else \n\nif (x     - y<4   - 0  \8743  -4    *-3  <  4) then \n B :=    -4     *     z     else  \n   skip     ;   if (false\8744 (0     +z)     -y=     gV-    0)  then \n\n\ny    :=     T +    -4   else \n  skip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 5279 6f97e1b715ca
ok 5280 b9a5c982d035
ok 5281 d06de984b22b
ok 5282 176b3d96cd8d
ok 5283 9418ec4c5afa
ok 5284 67fa924a71c9
ok 5285 6323e65f93cb
ok 5286 909183c5fed3
ok 5287 2dc9d0ed86a4
ok 5288 0fd9f917a4f9
ok 5289 82eef6db7029
ok 5290 e833f4785aa5
ok 5291 cd87da7f31fd
ok 5292 d1ee9ee99339
ok 5293 0a6945ea7b0b
ok 5294 51ca3f718f45
ok 5295 e309a26b0374
ok 5296 cc9339b86af8
ok 5297 132d21493e4f
ok 5298 3678f902a49c
ok 5299 7e0d1257e36d
ok 5300 1d0700fe5701
ok 5301 23705715e060
ok 5302 b677f75b3c55
ok 5303 1a0341c6f1bc
ok 5304 2e313113105a
ok 5305 a79d9612937f
ok 5306 99c21379c622
ok 5307 f1df50d122ed
ok 5308 d25862ca3539
ok 5309 ae5d512e8973
ok 5310 5936fdfaa655
ok 5311 42550a3d600f
ok 5312 d831fa28f7b4
ok 5313 4b32cc3462fa
ok 5314 49e47b6d12c0
not ok 5315 19d9810fd052
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen57.bats, line 151)
#   `skip   else   x:=     y     +  z   ' '{z → 3}'' failed
# if (¬((-2   -   -3)  * d    =  z   * gz)) then  
# 
# while (¬(2  *   y =     -2    -   vG))   do   z     :=ZA +     -4 else  
#   z   :=     1   -  -2     ; 
# 
#  if (x  + mF < -3+ a6    ∨   y *x     <3  +  y) then 
# 
# skip   else   x:=     y     +  z    = {z → 3}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 28 (Just (Tokens ('=' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172((-2   -   -3)  * d    =  z   * gz)) then  \n\nwhile (\172(2  *   y =     -2    -   vG))   do   z     :=ZA +     -4 else  \n  z   :=     1   -  -2     ; \n\n if (x  + mF < -3+ a6    \8744   y *x     <3  +  y) then \n\nskip   else   x:=     y     +  z   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 5316 d24dc0ec1644
ok 5317 0d3b84c93e2e
ok 5318 162b85712e2d
ok 5319 9b6eb788bc3f
ok 5320 c3e17ff5d47c
ok 5321 afc513a459bd
ok 5322 b26d7a27f0b0
ok 5323 83dcf87aebc1
ok 5324 85406ba3b123
ok 5325 ff1666f07f8d
ok 5326 6472ddf5c4b1
ok 5327 ad7d9911089f
ok 5328 e11310d9dc2a
ok 5329 39e20ae8a079
ok 5330 0d13a51949d1
ok 5331 0d22d0821f8d
ok 5332 e5a7545b0398
ok 5333 33d4e15372c4
ok 5334 fbd24d9944e6
ok 5335 175207eb9515
ok 5336 9457486e0e2f
ok 5337 98be005c718f
ok 5338 f253e629870d
ok 5339 f98cb31a9bf2
ok 5340 404b35870b3e
ok 5341 be2981359fc6
not ok 5342 0a8d8043263d
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen57.bats, line 466)
#   `skip    ' '{}'' failed
# if (false  ∨  -3+    -3 =    z *T)      then 
# 
# if (true   ∧ (0  -4)  - -2= P   *   -3)      then  y :=    x - z      else j  :=     2*   1  else 
# skip ;
# 
#   
# while z   +     z   =1 -  C ∨    x  *    ZW<     0+   x      do 
#  
#  while (¬false)  do 
# 
# skip     = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 69 (Just (Tokens ('-' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (false  \8744  -3+    -3 =    z *T)      then \n\nif (true   \8743 (0  -4)  - -2= P   *   -3)      then  y :=    x - z      else j  :=     2*   1  else \nskip ;\n\n  \nwhile z   +     z   =1 -  C \8744    x  *    ZW<     0+   x      do \n \n while (\172false)  do \n\nskip    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 5343 a3521c06d208
ok 5344 8f6b9274fb8b
ok 5345 284a5a473919
ok 5346 4e867578c5a1
ok 5347 08621e0fd284
ok 5348 8368f258cb34
ok 5349 a1ac441ecc43
ok 5350 b61bd1bc2483
ok 5351 bbbce1a5f630
ok 5352 d09204eb18d1
ok 5353 11535483e7f1
ok 5354 a3b98f03c758
ok 5355 318809b9b001
ok 5356 0a0cb63c7b48
ok 5357 9ebcf5e79967
ok 5358 884d7973bd1c
ok 5359 c416b740cc78
ok 5360 05a55bccaf5a
ok 5361 3c8a6135afe7
ok 5362 aec230172db3
ok 5363 705a825d2216
ok 5364 23037d336232
ok 5365 90ac0e357eed
ok 5366 eacbbfa66775
ok 5367 f5f7654c48cf
ok 5368 1e7ab142c501
ok 5369 22a715a1340c
ok 5370 19a2809b18ce
ok 5371 a16770cc03cd
ok 5372 03b5409d67a0
ok 5373 035026523bb8
ok 5374 59f9ecf348a2
ok 5375 41a83474bd8f
ok 5376 777f64cbca19
ok 5377 1e376b6e0ce7
ok 5378 645e9139456a
ok 5379 ac5d827bd376
ok 5380 8b2e913ed67f
ok 5381 3c9ff2ecf2f1
ok 5382 854c4da6a436
ok 5383 dfbae70c6f2e
ok 5384 4e6a02f6a848
ok 5385 6f439110655a
ok 5386 42449ef5b574
ok 5387 d9177572590c
ok 5388 bf538e4b8e54
ok 5389 379f56556bd0
ok 5390 35df51964f49
ok 5391 b5af53c431eb
ok 5392 b389a0511552
ok 5393 e74b2e026d0c
ok 5394 0f60bf3d079a
ok 5395 6376245917a4
ok 5396 7c0b5f5bcd65
ok 5397 4105a54b5c4d
ok 5398 33dbe4bf69c2
ok 5399 328777282d10
ok 5400 950d04f88122
ok 5401 e669fe1cc402
ok 5402 3e5c723c5811
ok 5403 03c07890abf5
ok 5404 4faafb09efde
ok 5405 e6d2b9f32c27
ok 5406 8cdc5c672003
ok 5407 52cf0098249d
ok 5408 bf9e6ad2115e
ok 5409 49d070691493
ok 5410 565b12256f97
ok 5411 b0971c523053
ok 5412 e5fc52334b09
ok 5413 2f870772ef7d
ok 5414 e89a9bc14a06
ok 5415 6a389456bda4
ok 5416 4e79ffc0bcbc
ok 5417 eef660bbf848
ok 5418 dba6b4fccddc
ok 5419 9c83a554c2bf
ok 5420 643f7820dd53
not ok 5421 8cdea64f57c7
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen58.bats, line 228)
#   `y  :=   2*    -4   ' '{}'' failed
# while (3   +    1)     -  x  =  -3     +  -2     ∧false    do 
# 
# 
# 
# x    :=  -3;
#   while false    ∧  true  do 
#   
#  y  :=   2*    -4    = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 23 (Just (Tokens ('-' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while (3   +    1)     -  x  =  -3     +  -2     \8743false    do \n\n\n\nx    :=  -3;\n  while false    \8743  true  do \n  \n y  :=   2*    -4   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 5422 217a02ebfc7c
ok 5423 c7a310d733c6
ok 5424 92c8341d27f2
ok 5425 2f64a245abd9
ok 5426 0186b6063a81
ok 5427 57de8ba31d2e
ok 5428 c82dbcac296a
ok 5429 188b950d14e7
ok 5430 1846c2857dd0
ok 5431 a43d12c78f50
ok 5432 0364c3d29240
ok 5433 799f16fa17ad
ok 5434 61d9bb909ea8
ok 5435 8b8fc5a085ca
ok 5436 99460ba622b8
ok 5437 3b49c9795da8
ok 5438 4e331a7f444c
ok 5439 32b059197664
ok 5440 5454385ea3a6
ok 5441 61cd81f70c11
ok 5442 2e4760f1e735
ok 5443 d176f20968d3
ok 5444 12f99fbfa917
ok 5445 22d287d3b0af
ok 5446 cddbf4272fae
ok 5447 0a28b0a77c7c
ok 5448 de0f858d6592
ok 5449 003c57880eaf
ok 5450 b405d39bc81d
ok 5451 a842f197a57b
ok 5452 3e9b10859ee6
ok 5453 499ac5353022
ok 5454 941c30f39c88
ok 5455 557c18b38c03
ok 5456 8ba7d603e617
ok 5457 af2dda9fbc66
ok 5458 83dd8ef32c8e
ok 5459 0848b8d29e38
ok 5460 d9a196843272
ok 5461 f13f7c2e281f
ok 5462 c5dd0fef2377
ok 5463 49bbb0e1707c
ok 5464 cb5e3ba75952
ok 5465 1a059b058ae0
ok 5466 27ec6309cc4d
ok 5467 222c2a2dc9eb
ok 5468 cf1f53b5dfe4
ok 5469 c3d2a0b9f8cf
ok 5470 c307967f7bbc
ok 5471 7172c0fbfbb0
ok 5472 9d713884e217
ok 5473 5d8c7a5a8dcd
ok 5474 f9a64198b5a5
ok 5475 c54917c405c4
ok 5476 e7ac57c621a3
ok 5477 d641117b2e55
ok 5478 c91adadebdde
ok 5479 073eb0b689be
ok 5480 2e1fff2d64a3
ok 5481 c41aa354b179
ok 5482 cfcc2baeb2ec
ok 5483 6cdc1d3557c4
ok 5484 37449dd08eb6
ok 5485 c68cac380750
ok 5486 8303840559c9
ok 5487 9e33ea2e6e2b
ok 5488 efa155b1e7d3
ok 5489 4c837126117b
ok 5490 dd3f3016b3ad
ok 5491 a099bca46a47
ok 5492 809c0fb7f999
ok 5493 924ceb6d6e72
ok 5494 986c2102f2be
ok 5495 dce31088b263
ok 5496 30c2eaee22e4
ok 5497 4b0d7aea3bb8
ok 5498 01df85431e13
ok 5499 0a5fe3e5621f
ok 5500 3c2540ee7f96
ok 5501 172ffca74e2b
not ok 5502 a2f4ef37f89c
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen59.bats, line 11)
#   `y := a    - 1 else y :=     z+   V     ' '{y → -1}'' failed
# while false   ∨(y    +   y) *     -1     =    3-   4   do  
# 
# skip   ;
# 
# 
# if (¬false)  then   
#  
# y := a    - 1 else y :=     z+   V      = {y → -1}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 28 (Just (Tokens ('*' :| " "))) (fromList [Tokens ('\172' :| ""),Tokens ('\172' :| "\172"),Label ('b' :| "ool expression")]) :| [], bundlePosState = PosState {pstateInput = "while false   \8744(y    +   y) *     -1     =    3-   4   do  \n\nskip   ;\n\n\nif (\172false)  then   \n \ny := a    - 1 else y :=     z+   V     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 5503 dd6adfc11a4f
ok 5504 66a72d203e01
ok 5505 e7690bd3f0e7
ok 5506 fcca791b5c1e
ok 5507 a38f1a41f8d2
ok 5508 60026613bc78
ok 5509 19036eed1d9b
ok 5510 9eb4913bd224
ok 5511 0f958bd5cb32
ok 5512 9736618a3c62
ok 5513 aec338d10fa0
ok 5514 1fb7fe482508
ok 5515 aecf85251724
ok 5516 a8cd69954261
ok 5517 2d720e65f5dc
ok 5518 cb37bb7c7c7c
ok 5519 989f30bf7eb5
ok 5520 977702987209
ok 5521 d07d9c33d60e
ok 5522 12ac0d179c47
ok 5523 e76b1b71e54e
ok 5524 8191d835b277
ok 5525 76b00d553375
ok 5526 193855e5fe2b
ok 5527 bb8361230832
ok 5528 0cd9f6390ae1
ok 5529 2a87a0757db3
ok 5530 e8215e18b122
ok 5531 cd5a6bfe54e0
ok 5532 9c2313180332
ok 5533 dfdf10a70017
ok 5534 11c0081273e7
ok 5535 5703464acf5f
ok 5536 38dc70557739
ok 5537 7cfe427e66a8
ok 5538 caa045f3434a
ok 5539 a4592de07715
ok 5540 6621179dfaee
ok 5541 2d95d50782a2
ok 5542 df7a272c3afb
ok 5543 43a7084a5b1e
ok 5544 7f9b3af9fd9f
ok 5545 26febffbe419
ok 5546 f11daaefc5e0
ok 5547 201e0bfdf809
ok 5548 634749909ee2
ok 5549 254f7e550a32
ok 5550 6a39dc47075d
ok 5551 97f4f861b744
ok 5552 f42c6e7fa1a2
ok 5553 e70c496981ff
ok 5554 43035006bf04
ok 5555 a3abeea96ec8
ok 5556 b385252a1e15
ok 5557 71d862b5670d
ok 5558 dc3a7fbb4591
ok 5559 30a9b8e57d50
ok 5560 a79bfb1ad019
ok 5561 80ca0fc32e0c
not ok 5562 164ea7132b73
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen59.bats, line 587)
#   `y  :=   0 *     0   else skip    ' '{O → 0, y → 0}'' failed
# if (x   -     0    <    2 * y  ∨  y+  x<   -1   +    2)     then O:=     z-Jm  else  while (x -     4)*  z    =     x    +    0     ∨    j    -  z <  0    *     x    do 
# 
# 
# 
#  z    :=  x   *  z     ; 
#   if (¬false)      then  
#  y  :=   0 *     0   else skip     = {O → 0, y → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 102 (Just (Tokens ('*' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (x   -     0    <    2 * y  \8744  y+  x<   -1   +    2)     then O:=     z-Jm  else  while (x -     4)*  z    =     x    +    0     \8744    j    -  z <  0    *     x    do \n\n\n\n z    :=  x   *  z     ; \n  if (\172false)      then  \n y  :=   0 *     0   else skip    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 5563 5262e2175f99
ok 5564 9fc1f6f0ffc2
ok 5565 35f52e646b91
ok 5566 9ffaaa9aeb9e
ok 5567 6db4bfb67d0b
ok 5568 95e9b6c5f61f
ok 5569 ebd945374947
ok 5570 79d384ade48d
ok 5571 908ffd3c8f6f
ok 5572 2070b99747cf
ok 5573 d55ef36e1f3f
ok 5574 a863b1b32149
not ok 5575 ee3714ad6487
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen59.bats, line 703)
#   `skip' '{}'' failed
# while (x  -    gk)*     y<  4     -0  ∧     f7=     -1   +     -3      do y   :=  y   -     z     ; if (true ∨ 0 <     -4    --3)  then  if (¬(2   +    x<   G8+    -2))    then 
# 
# 
# 
#  skip    else 
# z    :=   y +   1    else   
# 
# 
# while x  * x  =4  -     x∨x +   Go=     3   *  3    do  
# while false     do 
# 
#  
# skip = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 18 (Just (Tokens ('*' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while (x  -    gk)*     y<  4     -0  \8743     f7=     -1   +     -3      do y   :=  y   -     z     ; if (true \8744 0 <     -4    --3)  then  if (\172(2   +    x<   G8+    -2))    then \n\n\n\n skip    else \nz    :=   y +   1    else   \n\n\nwhile x  * x  =4  -     x\8744x +   Go=     3   *  3    do  \nwhile false     do \n\n \nskip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 5576 8026516841f2
ok 5577 cec79df7b877
ok 5578 32cca0714e5b
ok 5579 271cf5187e5a
ok 5580 36c8640171d2
ok 5581 3c07f63a750e
ok 5582 eae5bcdc0f11
ok 5583 fe84051ad473
ok 5584 dc5dc09db3fb
ok 5585 42edf5ef027c
ok 5586 0e35230f45e5
ok 5587 f06fc08db28b
ok 5588 b41840f597bf
ok 5589 4ff28c0d7ad9
ok 5590 359aeb90f698
ok 5591 4e68bb729cbc
ok 5592 1f0dd85fcd1e
ok 5593 0f6218ad06cf
ok 5594 e920493c0732
ok 5595 dd7aca4c9ac9
ok 5596 cfae17d53211
ok 5597 645c601f11e3
ok 5598 8bf518214828
ok 5599 dd3e416cb21b
ok 5600 5bae5f53b5f9
ok 5601 13f35bb80628
ok 5602 59ce2bf670c3
ok 5603 ca53d455f8ff
ok 5604 65b5daab388a
ok 5605 cda5334d93fe
ok 5606 9b1c83afa61a
ok 5607 0fbb5c336cdd
ok 5608 737f98df6cb6
ok 5609 1063acdffa4e
ok 5610 51fcd92ffedb
ok 5611 303ae8b50ba8
ok 5612 5b4045f30446
ok 5613 ff463cf307fa
ok 5614 ee29ad967528
ok 5615 d9822cd9790d
ok 5616 897c502f1bc3
ok 5617 5c1c71b37a5c
ok 5618 d21862418103
ok 5619 55b6d5dff2a3
ok 5620 91420df5aef7
ok 5621 67fe04a4bb8e
ok 5622 16c6b5a4f28b
ok 5623 8a8f3c3a4384
ok 5624 1c729f2a5e07
ok 5625 c26d294d9857
ok 5626 bd7098b62b56
ok 5627 c6bc7d2e3816
ok 5628 bc276d923154
ok 5629 dd17c372c9ab
ok 5630 192683ab5a3f
ok 5631 e82d3555bd67
ok 5632 2adbf6fadc87
ok 5633 0b9fb165e429
ok 5634 a4f3b549e378
ok 5635 ea64ef879d49
ok 5636 7b174b4642a7
ok 5637 4cbd68740822
ok 5638 77f08495d4ec
ok 5639 0238d6f2da73
ok 5640 a1028ce8dcea
ok 5641 263dc35f9f48
ok 5642 b62a39e55835
ok 5643 31ecfe0212d6
ok 5644 3d02b5b46868
ok 5645 7d7aee5c4db3
ok 5646 dba32e98dd44
ok 5647 360d76f14692
ok 5648 cba00746f0d5
ok 5649 d5251cfbfd6a
ok 5650 2c2af2928c19
ok 5651 eaed413bb016
ok 5652 aedfcce1dbac
ok 5653 3f002bb5b1fd
ok 5654 4deb39d91fe9
ok 5655 baada34eb909
ok 5656 5e1758581ffd
ok 5657 9d539fe226f0
ok 5658 ffba88f0d7cc
ok 5659 eb0437116d18
ok 5660 d0577fbc0ad0
ok 5661 c11132c1c277
ok 5662 c68af2716fe0
ok 5663 41f6ebd8b482
ok 5664 8a40906b5b1f
ok 5665 6644b2a12035
ok 5666 806a3ddc8f46
ok 5667 f4b728ad1b44
ok 5668 381bb2cd37fc
ok 5669 cae2c281f4b0
ok 5670 5fea556170fa
ok 5671 d91ff224b83d
ok 5672 ddf8188f3cb4
ok 5673 47bdac030d3b
ok 5674 decbbd7dce08
ok 5675 5ea8b5da72a3
ok 5676 5fe50dcdc0e9
ok 5677 df3139292ed9
ok 5678 c9008bb5dc6f
ok 5679 f9fbe2ec64a0
ok 5680 c1f09d67f871
ok 5681 333f001b1825
ok 5682 65e530318085
ok 5683 d33beb85d0b4
ok 5684 7301b3f42456
ok 5685 6152dad9b6eb
ok 5686 7e60e0ef8c3d
ok 5687 92b41870a000
ok 5688 aecce2dd4ba0
ok 5689 3fe5dffb16d6
ok 5690 946f5fd5d9c6
ok 5691 7ae1a3811de2
ok 5692 05482503fe20
ok 5693 116fa8007d23
ok 5694 aff13d023b36
ok 5695 7b5199c40f21
ok 5696 fdb26a545ccd
ok 5697 b840c077ea42
ok 5698 b78a56eeac9e
ok 5699 cdea8fd25f97
ok 5700 12cb368039a1
ok 5701 6c8b4f983569
ok 5702 15bb86cdaa1d
ok 5703 55c0de9b1bce
ok 5704 83b609b361e3
ok 5705 d5ccdd3caced
ok 5706 9732d57603eb
ok 5707 8825e833c079
ok 5708 31f56ead10b3
ok 5709 5ccaba542781
ok 5710 5002a605c367
ok 5711 47fdbadf50bf
ok 5712 4d0e373ca964
ok 5713 d2bc5c2e8440
ok 5714 76ccedee9557
ok 5715 720bb29d6239
ok 5716 fa81b6809216
not ok 5717 306b406ed2a9
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen60.bats, line 156)
#   `skip   ' '{x → 2}'' failed
# if (¬(y  -    z   <  -4    * z))      then  x     :=2  -     x      else    
# skip ;
# 
#   while (¬((1+     4)  *   -1 < 4 +     -2))  do 
#  skip    = {x → 2}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 115 (Just (Tokens ('<' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172(y  -    z   <  -4    * z))      then  x     :=2  -     x      else    \nskip ;\n\n  while (\172((1+     4)  *   -1 < 4 +     -2))  do \n skip   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 5718 6aa3606ffde9
ok 5719 4fadb6918362
ok 5720 693e9c2ca32c
ok 5721 e0b46e1aa207
ok 5722 fb8297faaed5
ok 5723 abce804cc12c
ok 5724 a68e53a68ada
ok 5725 90720525393c
ok 5726 0f6b5e977c42
ok 5727 8041cc489d6f
ok 5728 b395a5c62fdb
ok 5729 cfd9fde8f99c
ok 5730 813fd4011934
ok 5731 3af611eb934b
ok 5732 bed8449d5f93
ok 5733 e29787060bc4
ok 5734 e5beff10d433
ok 5735 2fd004819849
ok 5736 31ee6a726f94
ok 5737 d7424337b59d
ok 5738 e2e5b15ff294
ok 5739 1e7361f83e87
ok 5740 f3c140720019
ok 5741 4a096f2eaefe
ok 5742 8dc03265a049
ok 5743 ceb446c88487
ok 5744 f4e57f60233b
ok 5745 48a736c5b1da
ok 5746 43e98602f838
ok 5747 a9aef227edfd
ok 5748 3a6fad1726e2
ok 5749 527fc54fa2f9
ok 5750 ff65122d4e7b
ok 5751 996d387ac630
ok 5752 d873a317b64b
ok 5753 b55d60f66ee7
ok 5754 2ea344418c91
ok 5755 2eb3fd18bc69
ok 5756 041362a1ede2
ok 5757 b5d17992337a
ok 5758 a8e2da9c91f0
ok 5759 ae4971c591ff
ok 5760 f7b9923ef6eb
ok 5761 ee1d0d154cab
ok 5762 c7f9e279ffe2
ok 5763 d3c03fec3130
ok 5764 146344631cd8
ok 5765 f9d29bb3f139
ok 5766 babe58de5c85
ok 5767 90dcafd2abf7
ok 5768 7bb205ec6a60
ok 5769 9c8bcb6498f2
ok 5770 e4dee38f8942
ok 5771 93bebc8aa6eb
ok 5772 3e0b9084b5fa
ok 5773 d5ed7599b090
ok 5774 6c58bde8962f
ok 5775 d1f1b109e46b
ok 5776 f6052a5029fe
ok 5777 93a692961951
ok 5778 494b84a9d5c5
ok 5779 3822c6d08513
ok 5780 390f452a90f5
ok 5781 28bfdf5bc873
ok 5782 ebee01cfcabb
ok 5783 dd49b0527be9
ok 5784 b43d761673d2
ok 5785 f37fa2fb7bfc
ok 5786 5152cab41ac1
ok 5787 1425743db7f7
ok 5788 0bea883788f1
ok 5789 265a5625275e
ok 5790 e5a487e84378
ok 5791 14d9a1908b45
ok 5792 7289d772a706
ok 5793 7b85a086fd3f
ok 5794 cfb55a9c2f2a
ok 5795 b43cf2da122a
ok 5796 9816a0195813
ok 5797 87ca5b607125
ok 5798 e7ae959fd8a0
ok 5799 07a8f509cd27
ok 5800 2b134327a557
ok 5801 09dc197636c0
ok 5802 1fb9ef07cacd
ok 5803 e63ce3b504ce
ok 5804 9c80c6570f6b
ok 5805 26301b1f30b4
ok 5806 057599224d68
ok 5807 80ec2eb17acb
ok 5808 2ac36b98d2ca
ok 5809 31d8d9c93091
ok 5810 bb8de7bbb429
ok 5811 9c5db016599a
ok 5812 fd5ef0fffd16
ok 5813 8349513a6c4c
ok 5814 78545460cf7b
ok 5815 a59968bbc976
ok 5816 622bb5f9559a
ok 5817 4d72104cd5c6
ok 5818 a82c4e93c284
ok 5819 8a40f5e90389
ok 5820 15392abfde2b
ok 5821 0dfa79ed1647
ok 5822 aa01b6e8ec49
ok 5823 21ac989a8d99
ok 5824 dbb50af0a313
ok 5825 f1b69a931346
ok 5826 0cf1980c58e8
ok 5827 f43a393d48f7
ok 5828 ea00310f31bc
ok 5829 106c751a3f2a
ok 5830 85d36729508a
ok 5831 bd5cdd4bceaf
ok 5832 3211b7d04675
ok 5833 a4a6735f4a76
ok 5834 e65311be486a
ok 5835 a61bb52a8bac
ok 5836 de365f11d5ab
ok 5837 2d378f2f7261
ok 5838 365ec89349ec
ok 5839 d41efef6bbbe
ok 5840 c36a9e5e8c73
ok 5841 c288cda7f1a3
ok 5842 be2bc16b3653
ok 5843 cb34ed2daf2d
ok 5844 ecc2ec27d634
ok 5845 b4ebf0e26cef
ok 5846 757965a80304
ok 5847 5b45001e0814
ok 5848 13096dcf1cea
ok 5849 2a1e576b08e7
ok 5850 c41066253923
ok 5851 699b16b963a6
ok 5852 5fb8e29969ee
ok 5853 eaa301d3ef86
ok 5854 9392868ed80e
ok 5855 bc98c6523063
ok 5856 91a2f0bc0a05
ok 5857 0388155907e8
ok 5858 fa1cb7f9d0cf
ok 5859 7478b2b9c245
ok 5860 ed6ca2a96d83
ok 5861 51c7ede38e48
ok 5862 cf327ef0a725
ok 5863 d5860eeb15cc
ok 5864 9d8cd96a30bc
ok 5865 081bb807a8d5
ok 5866 6b19f141b74f
ok 5867 e9df146888db
ok 5868 67332744d07a
ok 5869 a70de6af275b
ok 5870 6d5cc337cb66
ok 5871 1bf48fe2db52
ok 5872 1ca0d3c57f9e
ok 5873 5df7a55320af
ok 5874 40f69629b144
ok 5875 ec63824ab4c3
ok 5876 4a94ba4820de
ok 5877 9e0cb6a4f526
ok 5878 823359ec00c2
ok 5879 22e2927e4cb8
ok 5880 d52fa2755a9c
ok 5881 332e6a24e3b8
ok 5882 d9df40e49668
ok 5883 c413c1fcd5b2
ok 5884 01cfaacb8089
ok 5885 189be2079fde
ok 5886 00826a5b2538
ok 5887 b9a07042c1b2
ok 5888 fe9caccf7877
ok 5889 54df6349177e
ok 5890 7296bc537517
ok 5891 3ba6c79d6ec3
ok 5892 595bce3ac07a
ok 5893 ca2ea2e9f615
ok 5894 42ef403d410e
ok 5895 2788fb6e0c39
ok 5896 e102e9b34983
ok 5897 3888bb19ad08
ok 5898 762c47010332
ok 5899 645c3d44860d
ok 5900 4cc3f36fa337
ok 5901 3125e42ff607
ok 5902 19082d7ec731
ok 5903 e48072281d99
ok 5904 ef28062c9313
ok 5905 f3d1c23e5fe0
ok 5906 037e3dc13689
ok 5907 f0e10d145d6c
ok 5908 981cbfc544f9
ok 5909 d17605c1cef8
ok 5910 e045299450b2
ok 5911 3ce76fe92200
ok 5912 d15b8f4a236d
ok 5913 59790b9ce276
ok 5914 7be99c2a4d3f
ok 5915 5ab2680272ee
ok 5916 51143d98c00e
ok 5917 1f4a93b98b77
ok 5918 bcead34acc8b
ok 5919 821b21bb1dc2
ok 5920 bb39a009e052
ok 5921 7045392e7207
ok 5922 926cff75a635
ok 5923 a95a7db01c94
ok 5924 6c69fa751663
ok 5925 007c2100c458
ok 5926 adb7aaff472d
ok 5927 4170ca261dfa
ok 5928 e556943e6903
ok 5929 b02ade83b6fe
ok 5930 dac7a290aea6
ok 5931 25d833d76bc8
ok 5932 5b1ed9d06d1b
ok 5933 3b81babac992
ok 5934 9723c0fffbcd
not ok 5935 f7f21338e9f3
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen62.bats, line 324)
#   `y:=   3 +    2    ' '{y → 5}'' failed
# while 3  +  0    <    2   *   0   ∨ (z  -    r)  -  x=   -3 +    -4  do z:=0 -     -1 ;if (¬(3  +    -2     <     y    -   -2))     then 
# 
#   z := y+ 0   else 
# 
#   y:=   3 +    2     = {y → 5}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 49 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('\172' :| ""),Tokens ('\172' :| "\172"),Label ('b' :| "ool expression")]) :| [], bundlePosState = PosState {pstateInput = "while 3  +  0    <    2   *   0   \8744 (z  -    r)  -  x=   -3 +    -4  do z:=0 -     -1 ;if (\172(3  +    -2     <     y    -   -2))     then \n\n  z := y+ 0   else \n\n  y:=   3 +    2    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 5936 fea76e4afd01
ok 5937 7e4696d2a5b9
ok 5938 fd0ca39517f6
ok 5939 9d083f35f500
ok 5940 7779e6037ade
ok 5941 9284f2f2d08e
ok 5942 5608eaa0fb8c
ok 5943 d3f0fca81030
ok 5944 c9e7452a3c99
ok 5945 3d8e59f428a5
ok 5946 31d1a756531c
ok 5947 4b81c42d7310
ok 5948 611771852c67
ok 5949 0f0f176c413a
ok 5950 b12559b197e6
ok 5951 6dee53822c14
ok 5952 b91eb01f1e4b
ok 5953 d5967a165e6f
ok 5954 20e867689477
ok 5955 9acef25d99eb
ok 5956 20e194b5cff5
ok 5957 f7abc74f5fd4
ok 5958 79331ee608b5
ok 5959 4a373fdb080a
ok 5960 985cb90ffe4b
ok 5961 2b3f45d072e9
ok 5962 54b71a61f5d0
ok 5963 4b828e5208a2
ok 5964 cbdb7638696e
ok 5965 a177fbd4f43c
ok 5966 d1759ee98646
ok 5967 fd457d3c27b1
ok 5968 8d56443bf87e
ok 5969 cef42bef0113
ok 5970 9c6f3cd13aaa
ok 5971 96364436adc0
ok 5972 68e3703feab9
ok 5973 81f7ebcc24ed
ok 5974 86d1f53be064
ok 5975 9fcceb45c662
ok 5976 0a8014a10dcb
ok 5977 f05b7aa23eb2
ok 5978 70eb702ff167
ok 5979 d3c6ef0da819
ok 5980 8d21b73649f0
ok 5981 199fa923bdfa
ok 5982 8fb721589c63
ok 5983 216caef4805d
ok 5984 93bd2d2a7378
ok 5985 49bf2f275f74
ok 5986 b9e1a706ef1e
ok 5987 1079df78f4da
ok 5988 9b680c1fdc97
ok 5989 33a82413bb55
ok 5990 6a2d2b9b56a3
ok 5991 569eb932eaab
ok 5992 e8d5dad0a4d2
ok 5993 08e4855790ba
ok 5994 46c8dc698d49
ok 5995 f54f68c3d4c6
ok 5996 805cbc42e187
ok 5997 032c2adda0fb
ok 5998 ff49bbfdf25d
ok 5999 43fef9a3dd68
ok 6000 053b7ad85a46
ok 6001 42df749fa760
ok 6002 5ab2c9adc819
ok 6003 35acb684c062
ok 6004 41af7c5e12ce
ok 6005 7ca569f01881
ok 6006 250d7a83c67f
ok 6007 13adadf47e5d
ok 6008 4ebabcaba0f2
ok 6009 2b760b506288
ok 6010 41a065bfdf74
ok 6011 6a8f83e6a539
ok 6012 b2780a8e5471
ok 6013 b98ae4208f53
ok 6014 bed86d90b9f2
ok 6015 3c5e9b01f135
ok 6016 2ef7a612614a
ok 6017 eba965b3e45c
ok 6018 3af50a872f90
ok 6019 26958394f08e
ok 6020 04c3989d1ee7
ok 6021 8f31d00e7aa6
ok 6022 59ecc45c3dca
ok 6023 e7f5b5201ccb
ok 6024 389abdfa6eb0
ok 6025 d5ae7d591ca2
ok 6026 a68bdf829f8a
ok 6027 ec2e0bae04a9
ok 6028 dcb8be52e8d0
ok 6029 55cf153b2b64
ok 6030 60182993f428
ok 6031 f35f8c147f59
not ok 6032 8315e53a1612
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen63.bats, line 310)
#   `skip      else  x     :=     -3     ' '{y → 0}'' failed
# if (false     ∨     C5    *     -4<  V5  +   -3)    then 
# 
# skip    else 
#  
#  skip  ;if (x    +z    <  1)     then 
#  if (false ∨ -4 *    1  <    3  *-2)      then 
#  skip     else 
# y   :=F  -z    else if ((x    + x)*     -4  =  3 +sA ∧  z     +    -1     <    -3-    y) then  
# 
# 
# skip      else  x     :=     -3      = {y → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 222 (Just (Tokens ('=' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (false     \8744     C5    *     -4<  V5  +   -3)    then \n\nskip    else \n \n skip  ;if (x    +z    <  1)     then \n if (false \8744 -4 *    1  <    3  *-2)      then \n skip     else \ny   :=F  -z    else if ((x    + x)*     -4  =  3 +sA \8743  z     +    -1     <    -3-    y) then  \n\n\nskip      else  x     :=     -3     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 6033 0095a2be346a
ok 6034 f4ed744cc78b
ok 6035 0aa833e158b6
ok 6036 588a305d7e1f
ok 6037 472dd5915082
ok 6038 3793f5839b75
ok 6039 1d7167ec9abf
ok 6040 29ccfac8d817
ok 6041 b226ab8b93e5
ok 6042 6e4efa99f0a6
ok 6043 ee1656aaf73e
ok 6044 cb4b9246d5bf
ok 6045 b8358dafc527
ok 6046 2455a6f5a0bb
ok 6047 577264805a64
ok 6048 d7ab6cd5a505
ok 6049 54e41227f21c
not ok 6050 05df73d4ffc0
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen63.bats, line 481)
#   `x     :=   -4 *    2 ' '{x → 8}'' failed
# if (¬false)  then   x    := 2     * 4    else 
# skip   ;  if (x     -    z     =  x   + y    ∧y     +  0   <   (-2  +x)  -   y)     then skip      else 
#   x     :=   -4 *    2  = {x → 8}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 120 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172false)  then   x    := 2     * 4    else \nskip   ;  if (x     -    z     =  x   + y    \8743y     +  0   <   (-2  +x)  -   y)     then skip      else \n  x     :=   -4 *    2 \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 6051 83770bcdc86e
ok 6052 7069d64b387f
ok 6053 8c2918316954
ok 6054 e22ecb8ae4bc
ok 6055 aedae45f247a
ok 6056 b6c45e1bb71e
ok 6057 97474f1d472b
ok 6058 369b63f23ccf
ok 6059 f360c99c1e80
ok 6060 e4178c4cbbc4
ok 6061 c15e7d971b5f
ok 6062 bd5b1df3dc64
ok 6063 d2cf9e24d841
ok 6064 ba536746f3ba
ok 6065 53aca35cc912
ok 6066 a0470b2094af
ok 6067 d975ce9e5331
ok 6068 b51069008055
ok 6069 ce7929e06c8d
ok 6070 1d7bc916e3c7
ok 6071 c9a9df2b0087
ok 6072 85b8b94f0f3e
ok 6073 a95a7db01c94
ok 6074 99af57b45ffa
ok 6075 074a11a69680
ok 6076 715c5858c52d
ok 6077 eb0e1f82609c
ok 6078 8685e91d3dc8
ok 6079 b479a1fd54b8
ok 6080 7676a6abdca6
ok 6081 c4f1e066082e
ok 6082 e34de5db7334
ok 6083 45d7c179092c
ok 6084 6e5af327e466
ok 6085 fe56322bb178
ok 6086 1161324aa844
not ok 6087 c18e002119dd
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen63.bats, line 823)
#   `while (¬((x    -     -1)  *   HE   < z -    -3))     do    skip' '{}'' failed
# if (¬(y     +  RW< uF+B))  then 
#   skip   else  skip ;  
# 
# 
# while (¬((x    -     -1)  *   HE   < z -    -3))     do    skip = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 94 (Just (Tokens ('<' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172(y     +  RW< uF+B))  then \n  skip   else  skip ;  \n\n\nwhile (\172((x    -     -1)  *   HE   < z -    -3))     do    skip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 6088 ea964a9819cb
ok 6089 92c54e247443
ok 6090 656e0df46583
ok 6091 c0990d893b2d
ok 6092 84dc6b2f5ee7
ok 6093 971f91e858a5
ok 6094 d9c2d27aec55
ok 6095 4acedc0341e4
ok 6096 23e874a2b3ad
ok 6097 83916bcff133
ok 6098 66d01eb68a4f
ok 6099 a8954ccbc33e
ok 6100 248c1872a68b
ok 6101 225c2e1bd859
ok 6102 6eff7df0c9cd
ok 6103 a1b335fa7e2c
ok 6104 7dbfacac19e6
ok 6105 3220ba95f213
ok 6106 33b01f9f9b3a
ok 6107 1ce906922a1e
ok 6108 f3fd9a1de2fb
ok 6109 f38b5a1d00fd
ok 6110 6c91f72e8c4e
ok 6111 0d58be1f5c92
ok 6112 001f16634683
ok 6113 27509034cc30
ok 6114 37e05be057e4
ok 6115 c275f991bc73
ok 6116 ddd95513dd62
not ok 6117 b8ffed00e468
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen64.bats, line 185)
#   `z :=     z    ' '{}'' failed
# while false  ∧   true    do x :=    eC   - z ; 
# while z- 3   =(2  -  1)*    z do  
# 
# z :=     z     = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 71 (Just (Tokens ('*' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "while false  \8743   true    do x :=    eC   - z ; \nwhile z- 3   =(2  -  1)*    z do  \n\nz :=     z    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 6118 9cea107f35c2
ok 6119 a0d023b95d3c
ok 6120 18f5f48d299d
ok 6121 3b81c4a9c57a
ok 6122 e38ab0055edd
ok 6123 5e016b1a4eb7
ok 6124 fa1cd9c2e63a
ok 6125 4296b93739b4
ok 6126 0e7e7891a711
ok 6127 f144e96253aa
ok 6128 6236a633ec3c
ok 6129 838db4a5c960
ok 6130 29543596b5ec
ok 6131 559934f4b5b1
ok 6132 3158a81302e4
ok 6133 5a6b615159b3
ok 6134 4a867f22ce1c
ok 6135 3c1ef2033102
ok 6136 ecf3d597da31
ok 6137 614ae0ab1d97
ok 6138 fee6d3e08e94
ok 6139 bfcd880c7848
ok 6140 ac55db61b6b7
ok 6141 759943aab4be
ok 6142 3ea998c5cb6f
ok 6143 aef409b8592d
ok 6144 528f4fb7dac7
ok 6145 77cfc84ccb11
ok 6146 023b4c05b34c
ok 6147 352bcfda1719
ok 6148 71f7e3d4ecb7
ok 6149 7d2b66b8bad2
ok 6150 5eea910ea470
ok 6151 b3a8a72d23cd
ok 6152 3b2cc2d02bcc
ok 6153 241af260db98
ok 6154 41c4a417983d
ok 6155 d5a769188885
ok 6156 ebd5cc997de7
ok 6157 b1491130ebd1
ok 6158 66879f4ecce0
ok 6159 0513b0bf9be7
ok 6160 5135adab0ce3
ok 6161 69de664eaa91
ok 6162 424d2bd15ea1
ok 6163 fb2549da79ea
ok 6164 71c528096e27
not ok 6165 d6c9f130b35b
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen64.bats, line 658)
#   `while (¬(z     <  -3)) do  dh    :=    4  *  z  ' '{y2 → -3}'' failed
# if (y  +     0  < y    +     na    ∨     y   *     y <  3  +     y)      then   
# y2 :=    y   +     -3  else 
# 
# 
#  
# while (¬(3     +4   =x  *   y)) do      x    :=   0*  (z  --2)   ;
# 
# 
# 
# if (¬((UM  -    -2)  * x<-1     +     l))     then skip     else  
#   while (¬(z     <  -3)) do  dh    :=    4  *  z   = {y2 → -3}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 208 (Just (Tokens ('<' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (y  +     0  < y    +     na    \8744     y   *     y <  3  +     y)      then   \ny2 :=    y   +     -3  else \n\n\n \nwhile (\172(3     +4   =x  *   y)) do      x    :=   0*  (z  --2)   ;\n\n\n\nif (\172((UM  -    -2)  * x<-1     +     l))     then skip     else  \n  while (\172(z     <  -3)) do  dh    :=    4  *  z  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 6166 73f58a412fa3
ok 6167 d047cfe86ab9
ok 6168 9ccff0a37c04
ok 6169 ef9652e470c4
ok 6170 04ecbafdf05b
ok 6171 e3d1bd1ca2bf
ok 6172 dea6d19f62ca
ok 6173 cff00cfcb44a
ok 6174 7f9df836e3fb
ok 6175 99d6c5f1c408
ok 6176 40178f5779d1
ok 6177 67218424124d
ok 6178 71e68d391708
ok 6179 e1e227c73785
ok 6180 05b0153ce554
ok 6181 160ed632eb6b
ok 6182 bd96f7bacd46
ok 6183 8c57127bcd34
ok 6184 dbebc0eecaf7
ok 6185 fcbdb2220009
ok 6186 bb6d0fa69432
ok 6187 087e8fbe270d
ok 6188 36a75aa0eaeb
ok 6189 811bf1b28e94
ok 6190 d6e94bb42a89
ok 6191 a57d02482309
ok 6192 6b7c177cd906
ok 6193 ba34cb75d844
ok 6194 66fb2d1a29b9
ok 6195 135859858303
ok 6196 e0cd94ebb2c8
ok 6197 ec847bd0d329
ok 6198 eaed9325a4e4
ok 6199 cad16856282c
ok 6200 2790f3cb6e40
ok 6201 0a17c4f090e7
ok 6202 aef9681c44fb
ok 6203 4a270cca344e
ok 6204 fca7f02614d8
ok 6205 13c13a29d689
ok 6206 e445253f1f13
ok 6207 ec42cecaeaa0
ok 6208 20fbbbb146c0
ok 6209 c9f0d7f447bf
ok 6210 f5ff1bac51d0
ok 6211 7d8996f260d7
ok 6212 014af6463298
ok 6213 85af7c938c42
ok 6214 03090eb6426d
ok 6215 5e519458b2e7
ok 6216 c4900f93b8fe
ok 6217 f0b18aa9e298
ok 6218 be1920c48e85
ok 6219 95baed4c827d
ok 6220 ee56a63b871d
ok 6221 44dea543f52c
ok 6222 62cf504d138b
ok 6223 60be9ee6a5f3
ok 6224 ee6e9f20313e
ok 6225 1ac0ff3fc81b
ok 6226 aca9b697e904
ok 6227 e16496fd1066
ok 6228 4d935d58b44a
ok 6229 ea1507decd24
ok 6230 28c6e32d2db3
ok 6231 f236fc154789
ok 6232 41c3821eebeb
ok 6233 c295378660e7
ok 6234 15f96f9dda82
ok 6235 2d0694b209d2
ok 6236 c232f1bb308a
ok 6237 58b833e5444b
ok 6238 614fd22c7ecb
ok 6239 fa7e8f728ebc
ok 6240 2a5cf20b202d
ok 6241 2d95d6a4e9df
ok 6242 4aaab2708e47
ok 6243 73c367d29368
ok 6244 afd75637c258
ok 6245 ec69f91e2500
ok 6246 9f6869601a14
ok 6247 015f98778ba3
ok 6248 e7fac98e71c7
ok 6249 574d756349ed
ok 6250 cd61fd513e96
ok 6251 689fbee82c8f
ok 6252 b65635b6505f
ok 6253 4445477bcd6f
ok 6254 3a13a74479b5
ok 6255 533005b362d5
ok 6256 f9424e69a08f
ok 6257 cb5778cfcc0f
ok 6258 afd7787f3f0c
ok 6259 91e9f4763a4b
ok 6260 a3dba8b148a3
ok 6261 021f49c1e46f
ok 6262 22f863648c90
ok 6263 2ce026a90349
ok 6264 09ce07a3b7d9
ok 6265 70aba98c8b0c
ok 6266 2ebeb8666ca5
ok 6267 21721fb894db
ok 6268 f8104d7096d2
ok 6269 8e3bb128536f
ok 6270 24a6f481300f
ok 6271 77a4d80168eb
ok 6272 d058c4b1125b
ok 6273 278cbb1e7eab
ok 6274 0c3d26bdb6d0
ok 6275 1a8c5c4b7b1c
ok 6276 32c5ea590d58
ok 6277 ca49fcc616ed
ok 6278 08b34618f5c0
ok 6279 fe35152d1229
ok 6280 c92b345da733
ok 6281 24b653836173
ok 6282 e399ae2b7f60
ok 6283 4fde01681cf3
ok 6284 f71d3806b85d
ok 6285 95d22e46e5a0
ok 6286 c597f81dbe20
ok 6287 df28ebc38e9a
ok 6288 c39f52f6610b
ok 6289 cc9c86cbee16
ok 6290 5506a47e0b5d
ok 6291 ec035e13ac56
ok 6292 db781825a841
ok 6293 83c32a4af493
ok 6294 f056f6052a9a
ok 6295 0c76d6e78f3b
ok 6296 424662daeb97
ok 6297 713463524a07
ok 6298 d02295140c81
ok 6299 c67d342a3c89
ok 6300 af7a619202c9
ok 6301 4061d9b1f3b5
ok 6302 2167df1f155a
not ok 6303 4b3d88741329
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen66.bats, line 18)
#   `skip' '{}'' failed
# while -3     - -4     =   z    * 0   ∧ y   *     x     <(FH     -   z)  -    -1   do 
#  
#   x     :=  Bi    +y    ;
# 
#  
# while 0   *    -1   =-4  *    -4    ∧    y   + ea  <   2 do  
#  
# skip = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 72 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "while -3     - -4     =   z    * 0   \8743 y   *     x     <(FH     -   z)  -    -1   do \n \n  x     :=  Bi    +y    ;\n\n \nwhile 0   *    -1   =-4  *    -4    \8743    y   + ea  <   2 do  \n \nskip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 6304 ac12fe19726c
ok 6305 d70f0ed8be7f
ok 6306 0944aa808ac7
ok 6307 48f8e5ac26b8
ok 6308 8e2cb4d4a88f
ok 6309 b32a4eb52264
ok 6310 3b9e24ddd6d0
ok 6311 b63cd43a851f
ok 6312 1aa5d769725e
ok 6313 be4003573b76
ok 6314 789fe5edde79
ok 6315 cda45a188fe8
ok 6316 b749bb59b641
ok 6317 37d06d18b879
ok 6318 3032d79f2ae3
ok 6319 b51fa6d0b567
ok 6320 105b3067bfe0
ok 6321 3405b95bd877
ok 6322 fdfb039ea383
ok 6323 ccdd713a3d60
ok 6324 30029f02bf34
ok 6325 b246ca572cd6
ok 6326 33b7d0d5221c
ok 6327 8742f58b0fc4
ok 6328 f37501d1a16f
ok 6329 998c3d473f38
ok 6330 056e36a2aa4e
ok 6331 f9554442d96f
ok 6332 dd1111635c1d
ok 6333 9b8988e17460
ok 6334 9f52835533c9
ok 6335 64c139b5e7ce
ok 6336 33133b187838
ok 6337 eb17d044b413
ok 6338 c971f90a4202
ok 6339 83587e4fba23
ok 6340 fd1c1532c319
ok 6341 56b6433d2ce3
ok 6342 256c03d635e8
ok 6343 a11c22fd818a
ok 6344 a21c9a814ae3
ok 6345 a73f58091a71
ok 6346 4f0c68baed0b
ok 6347 60aa7e48d2d3
ok 6348 c8eb55c228e9
ok 6349 9e6fd2fb4595
ok 6350 4a7d22d376f1
ok 6351 1560fff7f140
ok 6352 2832ec34ca68
ok 6353 69d72f814188
ok 6354 7f0254e2e2e5
ok 6355 e76f17c5d3c9
ok 6356 54fcf7dcf861
ok 6357 dd2030696798
ok 6358 245b81099617
ok 6359 f19b796820e5
ok 6360 6607335befad
ok 6361 59e2c2cee3ef
ok 6362 d1ab5147477c
ok 6363 5192427470d9
ok 6364 757358f962d2
ok 6365 664965ab1052
ok 6366 32cdb8583b2a
ok 6367 c4560cb49e34
ok 6368 d62ad1e22f7b
ok 6369 782492224627
ok 6370 bfb0c22f093a
ok 6371 0becdc094588
ok 6372 aa0e59722953
ok 6373 6d4efc464917
ok 6374 8da4d39af7fc
ok 6375 ebc6196f0171
ok 6376 db55376b1b80
ok 6377 39c17c643c8c
ok 6378 02412f81b01e
ok 6379 74830bb0b7cf
ok 6380 49eec15dc210
ok 6381 db126adebe07
ok 6382 a58fd451f9da
ok 6383 d05c7c72744c
ok 6384 47c24fbb2a3c
ok 6385 3163112d7cd8
ok 6386 94755cb4ed94
ok 6387 a024a509e4ed
ok 6388 4dad222f208d
ok 6389 2afb4087fe7a
ok 6390 ac2dd7fec830
ok 6391 bd6cd1fc0625
ok 6392 335360e783d2
ok 6393 f6876d1db461
ok 6394 f6f612941e80
ok 6395 eefd1c61b801
ok 6396 1de7481e006f
ok 6397 92fd01024f9c
ok 6398 e5946c922489
ok 6399 70854fc5fef9
ok 6400 07cf70ec9a43
ok 6401 4a5e1ceba17f
ok 6402 63141908b716
ok 6403 72d0a80166fe
ok 6404 e52df6da31a0
ok 6405 91e9f4763a4b
ok 6406 7ff676f78853
ok 6407 e07713fe1977
ok 6408 5624eded2d1e
ok 6409 bc2f66e0bdf5
ok 6410 9761e2c4398b
ok 6411 cdc2af87c30c
ok 6412 f3f0742cf208
ok 6413 fc8638ac9d4a
ok 6414 dec0c65c8e71
ok 6415 9b4eadeaee78
ok 6416 619f2fbabb2c
ok 6417 37bb382d5a51
ok 6418 38af3e54b8b8
ok 6419 7e87d01dc611
ok 6420 1206f373129b
ok 6421 3a810ebc6eb4
ok 6422 d466c1f0201e
ok 6423 3fb4a3a75620
ok 6424 ca157e4294de
ok 6425 f0ee37c56f8f
ok 6426 69d960224bad
ok 6427 fabbd9dfcdcf
ok 6428 ce394a7c4219
ok 6429 61514299a1b0
ok 6430 cf298f73f5a1
ok 6431 585c54e2c4cf
ok 6432 45702a096716
ok 6433 b578f2e1a386
ok 6434 6d2999cb7a78
ok 6435 f4c03453729a
ok 6436 8be6dcd1d62b
ok 6437 a45934b306ae
ok 6438 8b4a296a2a1a
ok 6439 43996a49be77
ok 6440 edf5d1c231cc
ok 6441 dcb278e78660
ok 6442 4f5b9f9ebaed
ok 6443 c7e16815bdd6
ok 6444 d15144376932
ok 6445 01e7a8e7fc61
ok 6446 50864c5c883e
ok 6447 45d42e851f16
ok 6448 e47e8fdc6d3b
ok 6449 e8447027bc81
ok 6450 90d7e0b5bd46
ok 6451 6fb2d482703d
ok 6452 1686d4ccfcb0
ok 6453 3e989d364db8
ok 6454 2f9adc9a33f8
ok 6455 20ad30c833cc
ok 6456 38ff965ec2d2
ok 6457 e8b1cab32b9f
ok 6458 4b34a671ba83
ok 6459 e45eec2d0432
ok 6460 d92fcbe24231
ok 6461 2d6cb9952094
ok 6462 ea2facdcda8b
ok 6463 e42197425356
ok 6464 f43ef3769ffe
ok 6465 41244ecd1efd
ok 6466 175865759f87
ok 6467 4a1c0ede74eb
ok 6468 bcae397c8d87
ok 6469 c5c6c2068d9f
ok 6470 a4c858354de1
ok 6471 5edb0d09d13f
ok 6472 35eddaac4c3c
ok 6473 34c4d13785ba
ok 6474 e5d221342f6a
ok 6475 9289c1a78aac
ok 6476 7acd2c6593a6
ok 6477 6d079d9cd277
ok 6478 19ac186f8175
ok 6479 54fc5e05dad6
ok 6480 aea110074460
ok 6481 796e43c29e76
ok 6482 b8c7902308ca
ok 6483 b93caed33470
ok 6484 a32e1dcbc99f
ok 6485 4016964003ec
ok 6486 182f152ddaae
ok 6487 4a7cc578466f
ok 6488 143b8bf7b572
ok 6489 8725855558f5
ok 6490 140360554e5c
ok 6491 fff8f5c74970
ok 6492 b30a33ccca9f
ok 6493 2c7d6f78fed5
ok 6494 84a369ae9804
ok 6495 7e2fc70e6a48
ok 6496 e3cc6c2fec70
ok 6497 6c572d5128e5
ok 6498 9e193b21d9dd
ok 6499 b9380869a5a6
ok 6500 b6b541eb2c49
ok 6501 cd3d0c5c7f28
ok 6502 243975a3c6d4
ok 6503 57211778021f
ok 6504 91dea9c33594
ok 6505 c501f2cd9d32
ok 6506 e18533942ece
ok 6507 b504c3057dac
ok 6508 84fed62d8123
ok 6509 12cd3fc01a48
not ok 6510 07cfd063e1b2
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen68.bats, line 82)
#   `if (h1 * 3     = 1 *   -4  ∨    -3   *-1    <  (y  - x)   *z) then x  :=-4     +  3  else  skip     ' '{}'' failed
# while false     ∧  xY  -x     < 2  *    x      do  
# 
#  skip    ;
#  if (h1 * 3     = 1 *   -4  ∨    -3   *-1    <  (y  - x)   *z) then x  :=-4     +  3  else  skip      = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 123 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while false     \8743  xY  -x     < 2  *    x      do  \n\n skip    ;\n if (h1 * 3     = 1 *   -4  \8744    -3   *-1    <  (y  - x)   *z) then x  :=-4     +  3  else  skip     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 6511 0be288765818
ok 6512 9d23805e0240
ok 6513 a15fcdda0cf0
ok 6514 d9745d1cf5bc
ok 6515 118dd2b702bc
ok 6516 7bf96eb3c5f6
ok 6517 6ff7d35ee06b
ok 6518 8cff33159c77
ok 6519 8f5c744fba69
ok 6520 e07efb653a20
ok 6521 06caa6bee77c
ok 6522 5c378eb15e1b
ok 6523 8b742636090f
ok 6524 012d006539a0
ok 6525 6f0e16a747c5
ok 6526 539c11336aa5
ok 6527 13a4e8b03cdd
ok 6528 b2efdacc39ef
ok 6529 c33d776b2625
ok 6530 cbac7af06fcd
ok 6531 deb24e78073c
ok 6532 a4d92b742244
not ok 6533 123bcce25c9a
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen68.bats, line 320)
#   `skip      else skip   ' '{}'' failed
# while (¬(y*z    <   y     +  4)) do 
# x   :=    2 ;if (¬((z     -     z)     -  x  =x   *  -4)) then   
# 
#  y    :=z  -    0   else 
#  
# if (¬true)     then 
# if (-3-  2     <x + -2)   then   skip      else  
#  
# 
# skip      else skip    = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 82 (Just (Tokens ('=' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while (\172(y*z    <   y     +  4)) do \nx   :=    2 ;if (\172((z     -     z)     -  x  =x   *  -4)) then   \n\n y    :=z  -    0   else \n \nif (\172true)     then \nif (-3-  2     <x + -2)   then   skip      else  \n \n\nskip      else skip   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 6534 b30bebbe4cb7
ok 6535 4f54615eb390
ok 6536 2c7ded188d81
ok 6537 66ab5ae098a7
ok 6538 e137bc33eae8
ok 6539 87bc8358954e
ok 6540 055d93232c3c
ok 6541 08c525768b1f
ok 6542 7cea9f2b8179
ok 6543 2d718731e219
ok 6544 b3730682e714
ok 6545 e57728c8594d
ok 6546 f15608489529
ok 6547 8d8b96931a00
ok 6548 7f756faa6a37
ok 6549 a30ca3fb48ac
ok 6550 694c895cf10b
ok 6551 129a0e5aa76c
ok 6552 88e57ecb94a3
ok 6553 d2ffd2e36e4f
ok 6554 55d87b7df6bc
ok 6555 07ff3f85da35
ok 6556 6c210fffb5f6
ok 6557 8b542e48313c
ok 6558 191afed13ff6
ok 6559 45db62e97367
ok 6560 05869b020f85
ok 6561 82c44c156ee1
ok 6562 06de9fb30848
ok 6563 9ae16f055f78
ok 6564 5430b9b1dcd5
ok 6565 5cad02f23a03
ok 6566 ba328be50456
ok 6567 b695de532c66
ok 6568 b0e8e539d84e
ok 6569 e9d0ce657f71
ok 6570 5117b5ee1d6d
ok 6571 dd4d183a5b52
ok 6572 be3c464b1998
ok 6573 1f553ecb2e9a
ok 6574 fb96c646f865
ok 6575 7ba15dac54e2
ok 6576 7f61da77ae64
ok 6577 e214a0f261d4
ok 6578 00200d35e5b8
ok 6579 b3820c330a09
ok 6580 00f050aba52f
ok 6581 f168aaba0407
ok 6582 73957d14428a
ok 6583 68edf818dd5f
ok 6584 62fab2b44398
ok 6585 e432412d4a73
ok 6586 9f9500c2189a
ok 6587 b9c8c7b10e73
ok 6588 3eb4dd441c7b
ok 6589 9141a29a1eea
ok 6590 a4505437adb6
ok 6591 ec056db1ae6e
ok 6592 8cf03fa6496e
ok 6593 a616a1b1d337
ok 6594 d41539a68365
ok 6595 198dd9694400
ok 6596 d85e2dd2b69a
ok 6597 e226c2fff360
ok 6598 c36b2c4cd6da
ok 6599 6f349064ea20
ok 6600 f96005f4a322
ok 6601 f9a8315a251a
ok 6602 b96b61760a30
ok 6603 0b1ee62c4645
ok 6604 d68985438ba5
ok 6605 05638a920cff
ok 6606 784469ebf7b5
ok 6607 4693a09c61d0
ok 6608 56ee731361ca
ok 6609 3b7b4f9a39b3
ok 6610 bc2342db78cf
ok 6611 0c7218f33aa4
not ok 6612 54eecd45d332
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen69.bats, line 120)
#   `skip  ' '{}'' failed
# while Gj    -Y    <   z ∧3     <   2     -     x do  
# 
#  if (¬(x +   -4    =(3   -  4) --2))  then   
# 
# skip     else 
#   
# z:=   y  -  y  ;
# 
# 
# if (¬(z     * y     =   y     *    Aj))    then 
# 
# 
#  y     :=  2     -    z else 
#  
# skip   = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 86 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while Gj    -Y    <   z \8743\&3     <   2     -     x do  \n\n if (\172(x +   -4    =(3   -  4) --2))  then   \n\nskip     else \n  \nz:=   y  -  y  ;\n\n\nif (\172(z     * y     =   y     *    Aj))    then \n\n\n y     :=  2     -    z else \n \nskip  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 6613 eababa9d1e84
ok 6614 e544e9e32edd
ok 6615 55c8fb508e57
ok 6616 c2a5df72c5ed
ok 6617 955effc8f0c5
ok 6618 5b1e7e4ad050
ok 6619 6f349064ea20
ok 6620 66a36a8d5bc1
ok 6621 08b0711a2912
ok 6622 78e3cae92700
ok 6623 8570c90327e3
ok 6624 7b4b00e88394
ok 6625 a26a50780d0c
ok 6626 ddb07d5d064f
ok 6627 140a91f7ab89
ok 6628 c4c66ab06100
ok 6629 0fd6772da0ed
ok 6630 2d99450913f6
ok 6631 03a5ba300922
ok 6632 ef5bdb328728
ok 6633 e7ee22142696
ok 6634 52eb1838f7fe
ok 6635 b70548092fb1
ok 6636 251b983e262a
ok 6637 3006da1372a3
ok 6638 5fe63692aad2
ok 6639 672141eb48b6
ok 6640 8fc6531af131
ok 6641 7fa2a79e8904
ok 6642 fcb0f48f6ac8
ok 6643 ce0d20cb00bb
ok 6644 a7f431e0636f
ok 6645 c8821a1a9686
ok 6646 3771c8ad4426
ok 6647 9460f858ad48
ok 6648 18891a0d5e93
ok 6649 8f31c0c806b1
ok 6650 2c0d6609e91e
ok 6651 e56ebff8e77d
ok 6652 fcdeebe5130e
ok 6653 dc75a944b9c5
ok 6654 cfebc9f374cd
ok 6655 5dddeea8e75c
ok 6656 672bf0afca03
ok 6657 fa044a20410e
ok 6658 d2f731affbd8
ok 6659 af882e70c2b1
ok 6660 a1cc31be4937
ok 6661 d3db6d760491
ok 6662 8ed60c670f14
ok 6663 8055053207b4
ok 6664 2d1ef4478045
ok 6665 703804b6ec59
ok 6666 3b3880d5d5ee
not ok 6667 422cdf5dcc20
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen69.bats, line 670)
#   `z  :=     0  else z :=  0 +    y ' '{x → 2, z → 0}'' failed
# if (¬(-4-    y     = cC))      then  
# 
# x := 2   -    y else if (¬(-2     +   y =  -4  -    -1))   then 
#  
# x := -4     *y      else  z   :=  x    *    x  ;
#  if (false  ∧2  -2    < x+ -4)     then   
# 
# while (¬(-4     <   (z-     -4)    -     -1)) do while x    * -2=4     *DV  ∧    false    do 
# 
# 
# 
# 
# z  :=     0  else z :=  0 +    y  = {x → 2, z → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 234 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172(-4-    y     = cC))      then  \n\nx := 2   -    y else if (\172(-2     +   y =  -4  -    -1))   then \n \nx := -4     *y      else  z   :=  x    *    x  ;\n if (false  \8743\&2  -2    < x+ -4)     then   \n\nwhile (\172(-4     <   (z-     -4)    -     -1)) do while x    * -2=4     *DV  \8743    false    do \n\n\n\n\nz  :=     0  else z :=  0 +    y \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 6668 d49ea217b3cc
ok 6669 ca1cb78c162d
ok 6670 9dfc8384296a
ok 6671 ab2630b91aa0
not ok 6672 12677cf97567
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen69.bats, line 720)
#   `skip     ' '{}'' failed
# while (¬(wc  -  4  <   0    *    y))      do   x:=     y   +x   ;
# 
# 
# 
# 
# if (¬(c   -3   =   z  *     g1)) then  
# if (1   - x =    -3+-2 ∨    -3     +    1     <     y)     then 
# 
# skip     else  
#   z :=0   *    -4   else 
# while 2     * z<   (-3 -   z)  - y ∧z  *   -1    <   x    *    0   do   
#  skip      = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 249 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "while (\172(wc  -  4  <   0    *    y))      do   x:=     y   +x   ;\n\n\n\n\nif (\172(c   -3   =   z  *     g1)) then  \nif (1   - x =    -3+-2 \8744    -3     +    1     <     y)     then \n\nskip     else  \n  z :=0   *    -4   else \nwhile 2     * z<   (-3 -   z)  - y \8743z  *   -1    <   x    *    0   do   \n skip     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 6673 0528cf5e929c
ok 6674 1af863fb4009
ok 6675 803f1da9b078
ok 6676 f9a0f6993628
ok 6677 fd73930a30b7
ok 6678 99115289985e
ok 6679 9fcab82d94f0
ok 6680 c9cc6bcb9683
ok 6681 2d9e10c5a68b
ok 6682 76d820009949
ok 6683 76b6e5c20c6b
ok 6684 1245223f112c
ok 6685 b58f0759e03c
ok 6686 8870a6babef4
ok 6687 428eb5a2ee96
ok 6688 44dad4220a39
ok 6689 22b7bcbf26fe
ok 6690 de8d585be2c6
ok 6691 8bab9d7a4a50
ok 6692 9bc056d3cf67
ok 6693 a9887b1d20f5
ok 6694 e9b801eff5e2
ok 6695 fe6dc98dce3f
ok 6696 7b1aa38daea9
ok 6697 bcc94fb87401
ok 6698 3a794fada848
ok 6699 c2ea69c1bde0
ok 6700 ecc7245b1d16
ok 6701 4239fd5f8b2b
ok 6702 cfecd637dc83
ok 6703 6a7cc9536c8a
ok 6704 00eceae87656
ok 6705 26e95eb04d46
ok 6706 4fd4ca8bbc43
ok 6707 16d141163b99
ok 6708 c46fcb48a979
ok 6709 407a5c87fde9
ok 6710 775fd068fb9d
ok 6711 c0a6152a73ea
ok 6712 2f810f6e3569
ok 6713 2e7102874ac1
ok 6714 07aaae8a7836
ok 6715 f5f2d1d62bd1
ok 6716 ec7981bac12d
ok 6717 e55958062dc7
ok 6718 3212ea98799a
ok 6719 0d888ea3a403
ok 6720 d2850d859c3b
ok 6721 2660a51dbd4f
ok 6722 f3e49507b7b1
ok 6723 b09f84cac290
ok 6724 52c13d108f4a
ok 6725 80f35d703faf
ok 6726 5809b0108b70
ok 6727 54f1e3327a8b
ok 6728 c54342aa0d75
ok 6729 fb078c41c88e
ok 6730 c863e3ab0e69
ok 6731 019bf1d36f69
ok 6732 70fe3fcf3ee4
ok 6733 d134454f5644
ok 6734 dcd84e7bcc83
ok 6735 479b07607847
ok 6736 ff55b6c2c952
ok 6737 80287b413447
ok 6738 c462be537bac
ok 6739 a505061a28a6
ok 6740 12fac4582ff2
ok 6741 8744de94c2d9
ok 6742 6ebe2aefecc9
ok 6743 72e45b947d88
ok 6744 b22b6af7f957
ok 6745 0fc2cf7451a8
ok 6746 6d00c1911ab0
ok 6747 ecbf670ef598
ok 6748 27fe86e32e72
ok 6749 67a89fbeaedc
ok 6750 fbc2ad615aae
ok 6751 23b227e9907b
ok 6752 2f718aa30c83
ok 6753 ea49c4da86af
ok 6754 90b2b42b8e3d
ok 6755 37a958be91e6
ok 6756 7669d5aea9f8
not ok 6757 7ce9f697158f
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen7.bats, line 540)
#   `x  := x   * 4    ' '{}'' failed
# while (¬(3     * y     =BJ     *  4))   do 
# br :=0 + z     ;
#  if ((y     +    2)   - 0    < -1 *     -1    ∨     x -    y <z-  -4)  then  
#  skip    else 
# 
# 
# while (¬false)    do   
# 
# x  := x   * 4     = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 90 (Just (Tokens ('<' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while (\172(3     * y     =BJ     *  4))   do \nbr :=0 + z     ;\n if ((y     +    2)   - 0    < -1 *     -1    \8744     x -    y <z-  -4)  then  \n skip    else \n\n\nwhile (\172false)    do   \n\nx  := x   * 4    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 6758 483777a4eb8e
ok 6759 f23ea0a53a79
ok 6760 ad99ff320299
ok 6761 446a59e3314f
ok 6762 b9160e159fbe
ok 6763 47c566d77e48
ok 6764 483dd9b0e510
ok 6765 987adbe64c56
ok 6766 ba6f0a1966ef
ok 6767 56c206a3a8cb
ok 6768 4a91e1b79e16
ok 6769 2f7e5b55f076
ok 6770 72cc40fc2ecf
ok 6771 72d745a4c259
ok 6772 a95a7db01c94
ok 6773 6b92abfa2b25
ok 6774 cdb790c7c82f
ok 6775 40a3c1c53ade
ok 6776 f282acae52ff
ok 6777 e518e198a454
ok 6778 c80164086279
ok 6779 fcc6ef5b44f3
ok 6780 ec9cfbc83e3a
ok 6781 ffbc7bdbbbe6
ok 6782 6c1680260032
ok 6783 2600321f2341
ok 6784 d56774a93df5
ok 6785 4a6d98504f71
ok 6786 87862dfb8a44
ok 6787 686fce25c871
ok 6788 82c17e2e2a54
ok 6789 d42e9595c66a
ok 6790 55e27f384140
ok 6791 7e2ee11e0aca
ok 6792 15658c61a444
ok 6793 fba593de9064
ok 6794 f3684a05caa8
ok 6795 bc4ab9d8563a
ok 6796 15af0f5752be
ok 6797 2102475385ec
ok 6798 5b848d472a7f
ok 6799 c0b171c75d00
ok 6800 9edaffa5fabb
ok 6801 45a0eb09a029
ok 6802 890a47fe32dc
ok 6803 7c43dcc2ebc2
ok 6804 1d57e74914e9
ok 6805 56dffcb063f4
ok 6806 03a197303152
ok 6807 653bece8a824
ok 6808 a154b18694e7
ok 6809 bafc08a1415b
ok 6810 91ec02453070
ok 6811 f4dffdf2ab1f
ok 6812 2cc63bc22ba2
ok 6813 a6325ddbdf44
ok 6814 6a07ca83f886
ok 6815 e4a9ddb5e69c
ok 6816 1531ad37827e
ok 6817 b3aee3891177
ok 6818 fff788f8c96d
ok 6819 4b5576410b71
ok 6820 8f4e31a218c8
ok 6821 3f4e07e37b57
ok 6822 02f68c7475b8
ok 6823 dc58302abe9a
ok 6824 a4c172331385
ok 6825 0e94ea13f0cc
ok 6826 22ed41aa582b
ok 6827 3f15937a7c14
ok 6828 5186dcb584a1
ok 6829 3343c36dfe08
ok 6830 28d923bbb565
ok 6831 997eff9497ae
ok 6832 d27bbe02b4e3
ok 6833 96b06e53d255
ok 6834 83b6e5a36489
ok 6835 a118837fa164
ok 6836 1e43edf295b2
ok 6837 b243f6b47cd2
ok 6838 70b803ec5997
ok 6839 e1a62cbb273f
ok 6840 2cd6a9bd0a3f
ok 6841 a4ca0b473b01
ok 6842 5894a9c4a18d
ok 6843 0510965a078d
ok 6844 53841f245413
ok 6845 777d06a57888
ok 6846 7a8a45311ef1
ok 6847 3b2ac503d9e2
ok 6848 1df9dab8b577
ok 6849 cbd8a15eeede
ok 6850 8defb4ea6367
ok 6851 cc1fdf0222c4
ok 6852 4d9f8319e359
ok 6853 cdff32317d20
ok 6854 1ec9d4f31be9
ok 6855 7d01b934c59b
not ok 6856 83a6c9942ca9
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen70.bats, line 566)
#   `x   :=  x   +y    ' '{}'' failed
# while (¬((-1   +    x) *   z   =   x- z))    do   skip     ;
#   while -4  -   4    =     A  +    y     ∧y  =1 +    b2  do 
# 
#  
# x   :=  x   +y     = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 31 (Just (Tokens ('=' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while (\172((-1   +    x) *   z   =   x- z))    do   skip     ;\n  while -4  -   4    =     A  +    y     \8743y  =1 +    b2  do \n\n \nx   :=  x   +y    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 6857 ee15cbaa57eb
ok 6858 dcfc9885d3dd
ok 6859 8a586556eebc
ok 6860 9495d595a761
ok 6861 36a3227159a1
ok 6862 9eb0fd97492f
ok 6863 30693b6367a2
ok 6864 71e2ca83bf68
ok 6865 f44bf5430ff2
ok 6866 7a0623117831
ok 6867 bbc5fa46ffa1
ok 6868 3871b6d105ee
ok 6869 88203e3e07d0
ok 6870 db3ff09b9345
ok 6871 6df613b58f5c
ok 6872 5617174401c4
ok 6873 1057c8287bba
ok 6874 9254e3c5ed6a
ok 6875 fcf57126d09c
ok 6876 7146c827d4fe
ok 6877 9a2284d06790
ok 6878 fcc6237b4e31
ok 6879 a53223fad7ad
ok 6880 c1e0496c3a68
ok 6881 ab89c67b4489
ok 6882 c5b6c1f37535
ok 6883 d34dc9e883af
ok 6884 0633fa7a58ca
ok 6885 c66105f4e850
ok 6886 eb4b6cd35623
ok 6887 d60bd6bf19ef
ok 6888 29d0079eb4cf
ok 6889 97eed3f90373
ok 6890 78457301bd57
ok 6891 e9518c7d3014
ok 6892 a13009a9f663
ok 6893 c86ae4d39112
ok 6894 0c0adae6305b
ok 6895 1bce7aca4bde
ok 6896 b766d009b714
ok 6897 ea33b0cc1b3a
ok 6898 030d2c52d8e5
ok 6899 590282b36cdf
ok 6900 717538075745
not ok 6901 f045c91a61c2
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen70.bats, line 1009)
#   `y    :=     x    +  y' '{}'' failed
# if (2-    y    =     rm     -   -2∧ 0   *   4    =  x+ z)   then  
# 
# skip  else  
# 
# 
# 
# x     :=     4  * -4;
#   
# if (z    +  2     =   0  -    z    ∨    3    *y  =   bp+x) then skip    else  if (false   ∨    x  =  M6   -    -2) then   
#  if ((S   - z)   -    -4  < 0  * -3    ∨     true)    then WO   :=     te     -     x      else   skip      else  
# 
#   y    :=     x    +  y = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 258 (Just (Tokens ('<' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (2-    y    =     rm     -   -2\8743 0   *   4    =  x+ z)   then  \n\nskip  else  \n\n\n\nx     :=     4  * -4;\n  \nif (z    +  2     =   0  -    z    \8744    3    *y  =   bp+x) then skip    else  if (false   \8744    x  =  M6   -    -2) then   \n if ((S   - z)   -    -4  < 0  * -3    \8744     true)    then WO   :=     te     -     x      else   skip      else  \n\n  y    :=     x    +  y\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 6902 780071e7caaa
ok 6903 b4c3458140b6
ok 6904 760f9a7c42fe
ok 6905 35c1d6a23112
ok 6906 10ad9daa9481
ok 6907 859fac6d0d32
ok 6908 2a5a2161c4b5
ok 6909 9a809d83e12c
ok 6910 7b1c5d22190a
ok 6911 6db661bf68a6
ok 6912 73c7f8bd57bb
ok 6913 a61b6b8cc757
ok 6914 a6e77a9415f8
ok 6915 306b6207e3c6
ok 6916 8071dd0cc449
ok 6917 3893afa15b2e
ok 6918 755cf1ce6b6a
ok 6919 b7f9cbcc0e4b
ok 6920 b7bbae2b60f3
ok 6921 c34129c3e5be
ok 6922 8260791ec398
ok 6923 635f7101246f
ok 6924 ffec6961100e
ok 6925 8fcf2831deec
ok 6926 483564195730
ok 6927 450f56b7976b
ok 6928 92cbf86c135a
ok 6929 90254f13bb37
ok 6930 4c8926a2923b
ok 6931 4b1ce2020b20
ok 6932 40da1ad36841
ok 6933 9a07dd30c707
ok 6934 892a9f7e8471
ok 6935 576f440b5e9e
ok 6936 60cda9e9dcd6
ok 6937 1b68956b4106
ok 6938 f844204afcd3
ok 6939 6438d373ae52
ok 6940 223299eb8c9f
ok 6941 d8c24722f92e
not ok 6942 618805a69eee
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen71.bats, line 406)
#   `x    := 4  -y  ' '{x → 4}'' failed
# if (false     ∨-3 *     x    <3*   z)   then t9     :=y   +z else 
# 
#   
# skip   ;  
# 
# 
# if (x  *   V   =(3  -  z)- z    ∧    A   -     x    = 2  +  -2)  then  
# x   :=     4 - x   else 
#  x    := 4  -y   = {x → 4}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 109 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (false     \8744-3 *     x    <3*   z)   then t9     :=y   +z else \n\n  \nskip   ;  \n\n\nif (x  *   V   =(3  -  z)- z    \8743    A   -     x    = 2  +  -2)  then  \nx   :=     4 - x   else \n x    := 4  -y  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 6943 eff4cc1d5127
ok 6944 029033cff7db
ok 6945 5bd11bfc429d
ok 6946 7b11c81f7876
ok 6947 75b083c8cd12
ok 6948 1ca7bde27532
ok 6949 b90b34af7980
ok 6950 3f2e5b21f3bb
ok 6951 98d17bb20e23
ok 6952 f3ead4f3bee4
ok 6953 ee862c76082b
ok 6954 aab5d77b7b4c
ok 6955 fd622c38fa77
ok 6956 1fb40012fc4f
ok 6957 1d3c627dec85
ok 6958 cabcd7d070a7
ok 6959 d9e88a246a4f
ok 6960 bc7abdde2b38
ok 6961 1a1ef37e9eea
ok 6962 db8852b1ef5c
ok 6963 37acaf1aae46
ok 6964 97819c090681
ok 6965 1225b9de8069
ok 6966 c47f31cdac99
ok 6967 fd1d9cee851c
ok 6968 12bb395c7d72
ok 6969 c7e16815bdd6
ok 6970 3bede78ef953
ok 6971 31ad9637468c
ok 6972 c3a0b36c8cfe
ok 6973 7f51c2dc0de7
ok 6974 12fccd4ef440
ok 6975 8753f5959aed
ok 6976 2c64a9c33b80
ok 6977 f71839b3d71d
ok 6978 83e2922950eb
ok 6979 65ea0cc60826
ok 6980 2c7457e9a870
ok 6981 ce79c7f97488
ok 6982 bc2cdcbee595
ok 6983 7225e9d4d213
ok 6984 5232bfa577b1
ok 6985 9cdd1b6e9998
ok 6986 4af0c950da0a
ok 6987 3c8be560693a
ok 6988 90397ebb8a96
ok 6989 993d12501269
ok 6990 55549eb92fca
ok 6991 6b68b605529c
ok 6992 57673d49bcbb
ok 6993 97a70adbf722
ok 6994 addad6a1cc3e
ok 6995 14d300c04e98
ok 6996 cfe8a6f089a9
ok 6997 03dec47d14ff
ok 6998 ccb397654a8f
ok 6999 90231b396d89
ok 7000 69cb597a9707
ok 7001 8f8812d3c7cf
ok 7002 e365533ca74e
ok 7003 e1b30672c4af
ok 7004 a731a63b062c
ok 7005 bc01e51f6b2d
ok 7006 b9d70034292f
ok 7007 04fb5d853807
ok 7008 f86558efac32
ok 7009 8f631e477de5
ok 7010 f7c31ffd3c3c
ok 7011 0b7903cc77d9
ok 7012 eb455c76fc8f
ok 7013 b3fdd04e44b1
ok 7014 f370fec2659b
ok 7015 20b0ca637174
ok 7016 6de7071b8247
ok 7017 ea5de1a2a6ee
ok 7018 a4eb98eacfdc
ok 7019 93485347a325
ok 7020 0ae35a2298ce
ok 7021 2b2dde2fb79c
ok 7022 07b81eb055f8
ok 7023 8a03a6912aca
ok 7024 476cddd2c76c
ok 7025 4ec58791aaaa
ok 7026 a2922a21ffa2
ok 7027 9d8ec7f1ed20
ok 7028 28810bb62ec5
ok 7029 3ad512ecd6c0
ok 7030 86ba61a2aa97
ok 7031 5fb5380b0d2b
ok 7032 798e053dbca9
ok 7033 264e210dd76e
ok 7034 f73927a1c608
ok 7035 18d595a1e107
ok 7036 e3b7be6a1df2
ok 7037 4d966cbadd78
ok 7038 761c99e94bdf
ok 7039 3d9ad5808b46
ok 7040 6cfcfa915821
ok 7041 4ac941773417
ok 7042 37d772da31e1
ok 7043 05f78d92e05a
ok 7044 a6eb68d74771
ok 7045 1f56d1899a9b
ok 7046 dae71297fcf0
ok 7047 b4ac3ed419de
ok 7048 84d208b7d16a
ok 7049 972f81576b6b
ok 7050 498b5687b27f
ok 7051 b68ddec1403e
ok 7052 d43185e2abee
ok 7053 98d93a8d6e30
ok 7054 dc6247434c71
ok 7055 6ecfe270677f
ok 7056 31b331d4b79b
ok 7057 f767867003df
ok 7058 0ac7f7ce6a83
ok 7059 be5c17aa900e
ok 7060 d636d81e10e9
ok 7061 228cfd693706
ok 7062 d49101644592
ok 7063 91cf105e746f
ok 7064 1c05e2ca48a1
ok 7065 dabaf395d440
ok 7066 74869f56f1fd
ok 7067 9e41ae4d0863
ok 7068 e8ac45dae458
ok 7069 d1b55bfe2b81
ok 7070 74f8e8478152
ok 7071 3e7f5b9c1830
ok 7072 ca919de5bc34
ok 7073 b72b3db6ec0e
ok 7074 2642959c3db7
ok 7075 0cb35dfa7893
ok 7076 2f1e2b1a1303
ok 7077 82232a6a8a52
ok 7078 33703d7db77b
ok 7079 93cf3938105f
ok 7080 1d2c9c48d14d
ok 7081 d3f247bdd539
ok 7082 6b7b31a4637d
ok 7083 135baf98d6d0
ok 7084 503bdaabc9f2
ok 7085 ddbd3bc215ca
ok 7086 4fc525084a5a
ok 7087 8d0b8da02dba
ok 7088 4d2d5c6d2a1b
ok 7089 2db8daff0ac0
ok 7090 1c6da2b99ab8
ok 7091 4b79def8e488
ok 7092 4f48e41a8c7e
ok 7093 903825f73217
ok 7094 d3840ec6d31b
ok 7095 a1b211e88df4
ok 7096 bc6012d48ec0
ok 7097 e8350274733c
ok 7098 f76a78ec99b5
ok 7099 2af2d4103282
ok 7100 97e4561ef6a2
ok 7101 09562cd6cd64
ok 7102 f37b217da3b8
ok 7103 9428d5d56db5
ok 7104 8f015b2d48f3
ok 7105 11a8503143fc
ok 7106 bcdce28fc1a7
ok 7107 cfb5c2e55531
ok 7108 6cbe029ca909
ok 7109 3b0073eed77c
ok 7110 be56261c3628
ok 7111 c2c8a8bb8183
ok 7112 8c51d12d4412
ok 7113 f449271c5ee9
ok 7114 55d949b111e5
ok 7115 aada9015ced1
ok 7116 6a81405da303
ok 7117 3969d52bac61
ok 7118 76e8b2e20970
ok 7119 83354d55a88b
ok 7120 84c9b0bd377c
ok 7121 66536e64b5ca
ok 7122 5e87f89864c8
ok 7123 9bda446e608c
ok 7124 c61c748040d0
ok 7125 c17d607edf68
ok 7126 08472fc702cd
ok 7127 283a730ffeb9
ok 7128 dd234c7db7ea
ok 7129 700978866bac
ok 7130 11ceb188f642
ok 7131 420fda57d9e7
ok 7132 062430066fbf
ok 7133 05490c2523ab
ok 7134 c7d6e2e3d6c1
ok 7135 4ac5ccb1501c
ok 7136 f63af7c6559a
ok 7137 18726c9e265d
ok 7138 03af724c5a50
ok 7139 f063ae4224a8
ok 7140 05b1d1613b42
ok 7141 7b36470b848b
ok 7142 ffa77c181217
ok 7143 ce4a54e57a21
ok 7144 dba199077449
ok 7145 1c061ef8057c
ok 7146 91e76248973a
ok 7147 74613412a23f
ok 7148 5c94fe3af470
ok 7149 3d83f63a6f20
ok 7150 8155ee3eac75
ok 7151 d8cb0a6e9425
ok 7152 ebaada7d8f11
ok 7153 3c34e9b3f72b
ok 7154 1f9ceafd589a
ok 7155 6b95ffb0bf9c
ok 7156 84e870a62d20
ok 7157 994dd1157fdd
ok 7158 ae174ce28cce
ok 7159 bb72fc09d0dd
ok 7160 084ef912a18f
ok 7161 558e55561128
ok 7162 49e9de809c0d
ok 7163 17135ae595fc
ok 7164 553b41285618
ok 7165 1be3d0a0d7d5
ok 7166 ec3df29f9113
ok 7167 37f9268e583d
ok 7168 b6f0dab03824
ok 7169 336d4ed9f4a6
ok 7170 6bcc42bdf2ea
ok 7171 d5671cbbf892
ok 7172 3e8ba36b8c46
ok 7173 79dd4d0c5e8e
ok 7174 92db82462bb8
ok 7175 c4dc35d8b5d9
ok 7176 762a38ba171d
ok 7177 174b9b1be493
ok 7178 a87a1fdc2efa
ok 7179 62ce1badb44d
ok 7180 101cf927f1d8
ok 7181 6ca6a5ba73be
ok 7182 b901c0f713b9
ok 7183 1947ff48f5da
ok 7184 f9e052245477
ok 7185 b66615d460e1
ok 7186 ad27f4fedf48
ok 7187 181b04990333
ok 7188 111c3eb3dc32
ok 7189 4feb38e89be5
ok 7190 13e5661efa54
ok 7191 f625489055eb
ok 7192 7e37917c7c89
ok 7193 c7d9214a516e
ok 7194 f4cf290f9cea
ok 7195 6b8902dcd040
ok 7196 66bb986f071f
ok 7197 97255aeadefd
ok 7198 47122c575e24
ok 7199 aa67e6f990a8
ok 7200 bb1151b14ce3
ok 7201 54333559477d
ok 7202 98cd66dc3388
ok 7203 74789369ff57
ok 7204 663efa95d63e
ok 7205 23a02ead49a1
ok 7206 8ffbef0831b9
ok 7207 264363bdff1c
ok 7208 a8f8e149330a
ok 7209 81b079a7dbd1
ok 7210 6591cfadd38d
ok 7211 b155ae18fee9
ok 7212 ec5b9afb570b
ok 7213 7d25173ee098
ok 7214 095190a7bc84
ok 7215 1e978055a673
ok 7216 6c13ffceb4d2
ok 7217 3ccaddd46a2c
ok 7218 a89075194d95
ok 7219 bcc44b3312cf
ok 7220 3216a6e39e1f
ok 7221 4381dbfdfb6c
ok 7222 0545d758058d
ok 7223 440df8ccd55e
ok 7224 bf0deb6b84ec
ok 7225 67a21183b02b
ok 7226 0bcbfecf85f3
ok 7227 6676a855270a
ok 7228 ebd28f0f1d7f
ok 7229 091a83aeb194
ok 7230 1c29bb126e03
ok 7231 df328650073b
ok 7232 aa1e8abc9ad2
ok 7233 44959807b9b3
ok 7234 f9dc28c66575
ok 7235 bd2746b3e1eb
ok 7236 07461bd7888c
not ok 7237 623cd3ad9e49
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen74.bats, line 407)
#   `skip    ' '{z → 0}'' failed
# if (1   <    4 + lg ∧   -1   -   3     <   1- x)     then z :=    x - y      else   if (¬(z*x  <   (-1- y)--4))    then skip    else  
# 
# skip;
# 
# 
# if (¬(3    +     x   =-2 -    4))  then  skip      else 
# 
# 
#  while 4 *    z     =  z     +  4     ∨   y     -z <  2 -   1    do  
# skip     = {z → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 106 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (1   <    4 + lg \8743   -1   -   3     <   1- x)     then z :=    x - y      else   if (\172(z*x  <   (-1- y)--4))    then skip    else  \n\nskip;\n\n\nif (\172(3    +     x   =-2 -    4))  then  skip      else \n\n\n while 4 *    z     =  z     +  4     \8744   y     -z <  2 -   1    do  \nskip    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 7238 88cb81516800
ok 7239 20407f9b5d07
ok 7240 80c9db61b3d9
ok 7241 c0460d26a3a9
ok 7242 241f5508ed47
ok 7243 e1869d452fbc
ok 7244 f368927110e6
ok 7245 cc61d633ede1
ok 7246 de3d60c7c022
ok 7247 294936309de6
ok 7248 9db19035d069
ok 7249 dec06989295e
ok 7250 513d5e96aeef
ok 7251 cedbb643d791
ok 7252 622c205358b6
ok 7253 8d7efb57bd54
ok 7254 95477d68a0e4
ok 7255 461706dfcff5
ok 7256 64d53fba0cf3
ok 7257 003baa0cd0d2
ok 7258 41954ccd8eb9
ok 7259 59512f7569e5
ok 7260 dc77141df6f3
ok 7261 186200589d28
ok 7262 9847533a0f8f
ok 7263 8b454582393f
ok 7264 5ae7b168489b
ok 7265 a97def8262db
ok 7266 ae58a26e24c4
ok 7267 b996d4c41eb4
ok 7268 52de5094054e
ok 7269 517a680331f7
ok 7270 2c4b3701db5a
ok 7271 fe2ec0f4e830
ok 7272 5cd8365de62b
ok 7273 cc7e0d580220
ok 7274 c2521e207c09
ok 7275 8d606473c600
ok 7276 b1991eca3618
ok 7277 f4fe5f4d3a0f
ok 7278 2ff115c34024
ok 7279 604898ade833
ok 7280 e92ac0082583
ok 7281 7a8553a46727
ok 7282 280f42cf055e
ok 7283 592deaa45e4c
ok 7284 c32c910bd660
ok 7285 bfba06c3cc5b
ok 7286 0372c274d4a7
ok 7287 8f6f83f46970
ok 7288 d1d62858f989
ok 7289 0c7a5b81b36e
ok 7290 2273f91ec05b
ok 7291 55ce45937f72
ok 7292 737b1f159400
ok 7293 bc691837fec6
ok 7294 ee95c108ffbd
ok 7295 f49cd7e0edb7
ok 7296 f0c6475780d5
ok 7297 eed6a3a5d5f6
ok 7298 0d078c312d17
ok 7299 5361a09d0624
ok 7300 c366288a9098
ok 7301 e29d63848225
ok 7302 5d62e3334240
ok 7303 04d00682cffc
ok 7304 1815f85a623c
ok 7305 c73d5bbd0cbd
ok 7306 37bf80f3a59e
ok 7307 96da24cb72fb
ok 7308 d873e25410a4
ok 7309 3d5fdc589b8e
ok 7310 0136ce194085
ok 7311 c0933034e08d
ok 7312 36fb7afa99a2
ok 7313 1032c7960771
ok 7314 bcca5d35f306
ok 7315 bb7285310d51
ok 7316 ca63151bbeb8
ok 7317 bed8418b8bbe
ok 7318 62406bc8787a
ok 7319 d9a912dcaca6
ok 7320 e1e2aaf16bd0
ok 7321 53c73fb288e2
ok 7322 ef4b0a1c7539
ok 7323 8b3c461e292b
ok 7324 0a0ed7c5eeec
ok 7325 a19bb90d47ef
ok 7326 6d9504e182c9
ok 7327 8a810921592d
ok 7328 20869df6af26
ok 7329 f5ebecec4d27
ok 7330 154501b77fd7
ok 7331 e0ca374c2c10
ok 7332 bc209171f12f
ok 7333 897dd6fa5f9c
ok 7334 3caff68edec9
ok 7335 29b79ef1613a
ok 7336 7662fd234667
ok 7337 28415a896eb7
ok 7338 156b58e3708a
ok 7339 a54394bf8857
ok 7340 e25cda42c396
ok 7341 588990334b4c
ok 7342 af95ffc8277b
ok 7343 8abba8a397a5
ok 7344 1796b9c2c74f
ok 7345 29258d3df885
ok 7346 e5e196cacaab
ok 7347 70f44d3a5f57
ok 7348 689cb9c91872
ok 7349 b0bd9040b064
ok 7350 923d7bbe3e15
ok 7351 61ad32dc2718
ok 7352 3214f4361a7d
ok 7353 a6fd09423a33
ok 7354 9c3b638df2ed
ok 7355 799b9e104044
ok 7356 b851fcdbc1fe
ok 7357 24bed81e231f
ok 7358 21e25c4e8d73
ok 7359 6a5bc45e69d9
ok 7360 f10186b40a9f
ok 7361 c7e16815bdd6
ok 7362 605da90ef015
ok 7363 94c7655a4dc1
ok 7364 6f349064ea20
ok 7365 c29fc4a6c447
ok 7366 0019fb3ebbd7
ok 7367 174da6eaf80b
ok 7368 185d9140117e
ok 7369 df17d41d9abd
ok 7370 91193c2a40f8
ok 7371 7b6d76413527
ok 7372 04509a84bd6b
ok 7373 4d8f25bd06ca
ok 7374 f47111027bad
ok 7375 7e206b6c6d4d
ok 7376 baa7bf9ee064
ok 7377 7a5c760e41f1
ok 7378 3af1ef85ae83
ok 7379 8d820f6aa0b0
ok 7380 e7c649496b30
ok 7381 e1bac17a47b4
ok 7382 e9ad205c4554
ok 7383 899f7ba00cea
ok 7384 f5385c9a054d
ok 7385 d4d6841c3de5
ok 7386 651ad1fbafb0
ok 7387 7f15124109c6
ok 7388 edfccf66613d
ok 7389 5471637fa934
ok 7390 e2dd82c7103e
ok 7391 85dbbd7642ea
ok 7392 c30d875447d7
ok 7393 9cf21f9c9128
ok 7394 2136483bdacf
ok 7395 169eacac0beb
ok 7396 1c85f51db33a
ok 7397 162a04142291
ok 7398 2ef04d5bf963
ok 7399 a4d51b241fe8
ok 7400 0a7caa7e7eb5
ok 7401 8354b43b65d2
ok 7402 d208e7ddf57c
ok 7403 a92e704eea7f
ok 7404 f5f96c89bab3
ok 7405 b2c7b18c7abb
ok 7406 725e5f74f58a
ok 7407 ef3ed8a3ed69
ok 7408 d7d5e3041318
ok 7409 4f016468b9ee
ok 7410 15e5cd88e761
ok 7411 79f79b08d9f3
ok 7412 4c5509c71da7
ok 7413 401640aefbdb
ok 7414 f26c4c619acc
ok 7415 14e7d8005021
ok 7416 407acb5dd5ee
ok 7417 83660893a474
ok 7418 baad3dd73b93
ok 7419 b0859e780c02
ok 7420 15546ea843a4
ok 7421 46bfd69affce
ok 7422 427c2fcdddf8
ok 7423 1733ef119a73
ok 7424 5e1b85368d82
ok 7425 66d6cefdef80
ok 7426 6b2d890e7864
ok 7427 4b0675b1ce35
ok 7428 db2adce40434
ok 7429 700ad10f7965
ok 7430 16d1a8671cb1
ok 7431 0198495329dc
ok 7432 5555a47d8491
ok 7433 49c8f546f988
ok 7434 faf6a127ba9f
ok 7435 36fabfcac4a2
ok 7436 bc22ee40e2fe
ok 7437 dd79af0a748c
ok 7438 144a3b0192db
ok 7439 610ebff77bae
ok 7440 1f48b9217ab9
ok 7441 8ca746ed63f0
ok 7442 c326f31df58d
ok 7443 56c2f3dc8b57
ok 7444 ab62f60243d2
ok 7445 2ddc1a302a2b
ok 7446 237e5e47a224
ok 7447 ef0f5dfa18ed
ok 7448 75e12222ced7
ok 7449 d0448a5187b3
ok 7450 18050445ed08
ok 7451 0c9e8692e4f0
ok 7452 74f0830bb43a
ok 7453 6748e6b4e21f
ok 7454 e93500d3fba9
ok 7455 5335ffdd129e
ok 7456 c2a3da08d223
ok 7457 68dd0f48a7b4
ok 7458 865353699f30
ok 7459 49af9a95baeb
ok 7460 b5ec38e82c8e
ok 7461 024cbaa57daa
ok 7462 0cbbced48612
ok 7463 04a90f79a142
ok 7464 66e8e6e9e39a
ok 7465 e395f3a767e4
ok 7466 cbfdb2674780
ok 7467 cdf9810309d7
ok 7468 e85421039e33
ok 7469 93fb79961417
ok 7470 0e1f3b846f8e
ok 7471 c9ad99463cd3
ok 7472 146471c6be5e
ok 7473 d11a37e5b847
ok 7474 501b5db4edf5
ok 7475 f833947ac425
ok 7476 ac501cf33abc
ok 7477 300299a498eb
ok 7478 419eadd1829b
ok 7479 d6caf8f909f5
ok 7480 c7e43361e3ee
ok 7481 439611542e6d
ok 7482 86cf5955ecba
ok 7483 abf29f979f04
ok 7484 f4e4059e27f6
ok 7485 368366ee18f7
ok 7486 d77bdf746486
ok 7487 a0d4a7471a5e
ok 7488 f8e00cd3985f
ok 7489 781b52eabc11
ok 7490 6f1aed7199eb
ok 7491 d057fe91a8f8
ok 7492 1877ca9412b2
ok 7493 09df18b6b5a9
ok 7494 26de6f698f91
ok 7495 272722d121af
ok 7496 c30d875447d7
ok 7497 d2d9e667aee8
ok 7498 cd41ccc559db
ok 7499 74f62a531545
ok 7500 542e1a3fb125
ok 7501 68883f647a06
ok 7502 a2a6da6c06bb
ok 7503 a49be1927dae
ok 7504 f1bebc9a7d30
ok 7505 b994a06985a4
ok 7506 803e7d887caf
ok 7507 5ab67a93c72c
ok 7508 3b1ef3da7c62
ok 7509 f20d04f5520a
ok 7510 d223447f6b43
ok 7511 4895db7490e2
ok 7512 15a01c528c7c
ok 7513 ea1dded110bb
ok 7514 2b3160af86b8
ok 7515 dc595cba58b3
ok 7516 58f016368353
ok 7517 5d6c986c831b
ok 7518 a6a72de61578
ok 7519 26a017981cc0
ok 7520 a4ce5e78a0da
ok 7521 8ba18a44f895
not ok 7522 730bfa5fd052
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen77.bats, line 228)
#   `x  :=     1    *   z else  J  := 0- x ' '{x → 0}'' failed
# while -3-v=  2+   y ∧   L   *     -3   <   x     *-1  do 
#   
# 
# J  :=     -2    +   4    ;  
#  if (-2   *    -4<(y  +    x)     *     -4   ∨    true)  then 
#  
# x  :=     1    *   z else  J  := 0- x  = {x → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 125 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while -3-v=  2+   y \8743   L   *     -3   <   x     *-1  do \n  \n\nJ  :=     -2    +   4    ;  \n if (-2   *    -4<(y  +    x)     *     -4   \8744    true)  then \n \nx  :=     1    *   z else  J  := 0- x \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 7523 0bfb99fc08e9
ok 7524 dd5df8876da9
ok 7525 b89a0605f240
ok 7526 2f7e94ff676f
ok 7527 8709930aea86
ok 7528 1fd1deabb4a6
ok 7529 1d5516432c3a
ok 7530 7a8b1971eb27
ok 7531 b52e2658dd09
ok 7532 7292f7d31dc0
ok 7533 b1e422775b04
ok 7534 6fec31f6a37c
ok 7535 45bf36462c13
ok 7536 751d4de93bb6
ok 7537 17703e5dbe70
ok 7538 e954dce4a68f
ok 7539 f8ed8faa7723
ok 7540 ba8e9bfc92bc
ok 7541 b1de533b3d21
ok 7542 0c5f836697a7
ok 7543 b9f1dbcbc894
ok 7544 2272fd2a10fd
ok 7545 95653bf5b4b6
ok 7546 e14e6d35cf22
ok 7547 c30d875447d8
ok 7548 cdf12965b01e
ok 7549 c4b272b77070
ok 7550 cb4a28d7ca16
ok 7551 1b0ad730ee3e
ok 7552 acbc260a00ff
ok 7553 1a6abb31a7f6
ok 7554 058e530ae850
ok 7555 e9db1369c459
ok 7556 29ae8c1b73a1
ok 7557 a35aea2f4fe6
ok 7558 ab5628b6fb7d
ok 7559 373ebcb0c877
ok 7560 ad522935f10c
ok 7561 7bf39c2a0341
ok 7562 23e4ae6badea
ok 7563 e4687ca7da42
ok 7564 baacb94fe7d0
ok 7565 ab8efdea1301
ok 7566 2f1794b6b65d
ok 7567 243652c347e9
ok 7568 0d092b07e27d
ok 7569 3f13eb17f73f
ok 7570 3ecaf2570a91
ok 7571 850a767de323
ok 7572 c99bcdbd216e
ok 7573 4d1fd6f49917
ok 7574 a46c0f070017
ok 7575 c30d875447d7
ok 7576 38cc6dae19f6
ok 7577 583c37b51906
ok 7578 e8af3a0432a4
ok 7579 ef9f625737da
ok 7580 8c58473a19a8
ok 7581 214612198601
ok 7582 bddce06d2297
ok 7583 2362d0b10a94
ok 7584 7af159736fca
ok 7585 829be1c9fe1c
ok 7586 0fe6dc5357f7
ok 7587 5a02b6db6f53
ok 7588 beedf61ba8a9
ok 7589 217b1bdd634c
ok 7590 4a356fc3415e
ok 7591 bc618ca412ad
ok 7592 43da35c3a65c
ok 7593 77b7b9e656c9
ok 7594 d2944a2ab14d
ok 7595 84c9f9645379
ok 7596 abaf58106448
ok 7597 07a4303d0984
ok 7598 af812c6a0a7b
ok 7599 f2a7dc3abb23
ok 7600 94fd038ca97d
ok 7601 7191be8037ad
ok 7602 8313573e1b28
ok 7603 f37034761eb4
ok 7604 25037696594a
ok 7605 363660d89c11
ok 7606 799590714a44
ok 7607 b8ab57605880
ok 7608 fcb28bb755ac
ok 7609 2d32f97ec74b
ok 7610 cc65ea64718b
ok 7611 57161b93a778
ok 7612 dbc551495dfc
ok 7613 0b49908c31ab
ok 7614 b83ca3c92c9b
ok 7615 aaff190275a1
ok 7616 127706dcfd90
ok 7617 49d6d236ae07
ok 7618 93920a793f78
ok 7619 fe76e99b1463
ok 7620 5beaf9f5d518
ok 7621 0ac5136f83ac
ok 7622 2dfa55c00239
ok 7623 16cc6bfd8a0d
ok 7624 baab489c895d
ok 7625 c4fd41499172
ok 7626 e0633064f486
ok 7627 153ae3b95a7d
ok 7628 d573ef337acc
ok 7629 1205dfd30015
ok 7630 670d0192c37d
ok 7631 95717f437997
ok 7632 e610eb89d70f
not ok 7633 7afde86b2134
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen78.bats, line 287)
#   `skip   ' '{}'' failed
# while -4-   4     =    (-3     -    -1)     *     -1  ∧   false   do  
# skip; 
# skip    = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 44 (Just (Tokens ('*' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "while -4-   4     =    (-3     -    -1)     *     -1  \8743   false   do  \nskip; \nskip   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 7634 0f50b07e17f6
ok 7635 0be6c99761c0
ok 7636 f60c4b1ef415
ok 7637 f2abcedddd80
ok 7638 d7b349a75f1b
ok 7639 54f4a7527594
ok 7640 6ba500c9c332
ok 7641 94a4834c8c0e
ok 7642 45dda8b80c0e
ok 7643 c27f1e844ab0
ok 7644 144d449f14dc
ok 7645 5b52da516b42
ok 7646 917a33cbc0cd
ok 7647 f81ceacfbcda
ok 7648 0d7cca6065b0
ok 7649 e9ec8b178934
ok 7650 2ff1dc616cba
ok 7651 a551d9c198f3
ok 7652 826326f183f6
ok 7653 8e7604c6d998
ok 7654 afc2ae024698
ok 7655 27d18292823c
ok 7656 cd8e5dac7fa3
ok 7657 7dbac83ea8f5
ok 7658 bc55175091a4
ok 7659 35fc615d7609
ok 7660 c029a0642168
ok 7661 710dbca60f1e
ok 7662 00a75cc98d53
ok 7663 1f33f8d4e69a
ok 7664 374f49e26c85
ok 7665 ba43cc656d92
ok 7666 71d74534863e
ok 7667 0cb08c022da2
ok 7668 45beccafee67
ok 7669 3e4d1804912b
ok 7670 0e6e02bda005
ok 7671 1cd4c01527e4
ok 7672 0f2aeee5b381
ok 7673 ac4b87e66eb3
ok 7674 7b41ee63e976
ok 7675 44f85852db46
ok 7676 3b4ab7afe51e
ok 7677 a095bdee270f
ok 7678 15f3cb4671f2
ok 7679 9ec804939569
ok 7680 27fbefd1ba86
ok 7681 74ced6b2c497
ok 7682 73ef5c1a5748
ok 7683 02121d3d06bb
ok 7684 c8a0975981e6
ok 7685 79911d7a1b4d
ok 7686 2537b9b09948
ok 7687 9a79fc0f4c54
ok 7688 888fb66c9c9a
ok 7689 12228d843c60
ok 7690 eb83e39f22a9
ok 7691 20ac79bac1db
ok 7692 02602b43ddd1
ok 7693 64f00764ddf1
ok 7694 4af310a230e3
ok 7695 f5c5e9fcce47
ok 7696 75c7ca8fec39
ok 7697 0e3e246c1ae2
ok 7698 0e87daed1444
ok 7699 d9b3868ed6ca
ok 7700 05c82af7a086
ok 7701 6e485a20854a
ok 7702 ec1c145adc98
ok 7703 a35cf65dd4ec
ok 7704 a382574b6f97
ok 7705 2b7325206ffa
ok 7706 d95cf3c0e98a
ok 7707 1545958653c7
ok 7708 46bffc04a9f0
not ok 7709 455ee0fea908
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen79.bats, line 90)
#   `while (¬(x  *    x =     m + s))  do   y     :=  z-   x     ' '{}'' failed
# if false     then   skip    else  skip ;
# 
#  
# if (z + x    <    y   *    y ∨   (-4     -    4)    * -4    =    -3     -     -2)    then    
# if (z     -    z=     x     + 4     ∧   -1    *   4     =x  +   z)     then  if (3 +    -2   <   3 - 1∨   y*   x=  -1     *-3)     then 
#   
# skip  else   
# skip else 
#   z :=-3  -  T     else   
# while (¬(x  *    x =     m + s))  do   y     :=  z-   x      = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 96 (Just (Tokens ('*' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if false     then   skip    else  skip ;\n\n \nif (z + x    <    y   *    y \8744   (-4     -    4)    * -4    =    -3     -     -2)    then    \nif (z     -    z=     x     + 4     \8743   -1    *   4     =x  +   z)     then  if (3 +    -2   <   3 - 1\8744   y*   x=  -1     *-3)     then \n  \nskip  else   \nskip else \n  z :=-3  -  T     else   \nwhile (\172(x  *    x =     m + s))  do   y     :=  z-   x     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 7710 37f23955bc94
ok 7711 e74dddec9ee7
ok 7712 6fdaccdb8d14
ok 7713 c6a0739e4ac3
ok 7714 f7387498c07b
ok 7715 1ea8dc36f11e
ok 7716 600a4ed197fe
ok 7717 c72326d03885
ok 7718 01d71b94b0e3
ok 7719 4410abc3ce54
ok 7720 19b5e8433b0f
ok 7721 a21a8632f821
ok 7722 8991472469dd
ok 7723 6b2bbcac6ce2
ok 7724 5f43404088b5
ok 7725 f6c2fc385ddf
ok 7726 b5faa502aec0
ok 7727 4097339646d2
ok 7728 413fa5974cc5
ok 7729 0047e47bed55
ok 7730 7b584c7c2a79
ok 7731 0c1a20104d01
ok 7732 df0aa0eb55d2
ok 7733 b3ee54e2a0eb
ok 7734 57e1ed1bb32a
ok 7735 f4360d4e3546
ok 7736 0713c04dc903
ok 7737 c255611acf3c
ok 7738 553b8fdc0e13
ok 7739 346203db4e37
ok 7740 ead14bc6e98d
ok 7741 c05a7c527224
ok 7742 1e9a491a3f4f
ok 7743 beefa2dc0a0c
ok 7744 838fc658875a
ok 7745 cf30370fbc6d
ok 7746 9973cd26847a
ok 7747 c99db5dc8943
ok 7748 9c610cdb53d2
ok 7749 9e3fe5d3266c
ok 7750 364a05821465
ok 7751 f29a3f2cbb45
ok 7752 54a6ef65de53
ok 7753 ecf7f51d9b38
ok 7754 9a2308f2a520
ok 7755 024a802bda36
ok 7756 c0ea48b4c5fc
ok 7757 df693d33f112
ok 7758 bf1ba5c62d83
ok 7759 869c7d149674
ok 7760 5713876c48f5
ok 7761 aa5f90a0974e
ok 7762 0ddbab79979e
ok 7763 1ad8d2d697a6
ok 7764 853eae5c6b26
ok 7765 8d2de26cc222
ok 7766 cf77e6bb8cee
ok 7767 5bf50b57403e
ok 7768 c1dcc3cfca66
ok 7769 f8ebf4b336f6
ok 7770 49d84755673c
ok 7771 56bc8e232280
ok 7772 b48fe44a46a0
ok 7773 94323d46f0d7
ok 7774 a6346f409f59
ok 7775 4c8fd579418c
ok 7776 67c1f5de1800
ok 7777 0f3844746260
ok 7778 68efefdaa013
ok 7779 1509a04bf764
ok 7780 d447200ed931
ok 7781 652b745ebcae
ok 7782 06232d8fbd22
ok 7783 2ffa2860abd5
ok 7784 e31074657500
ok 7785 f6e337e03471
ok 7786 d45647230ead
ok 7787 4437b54f3176
ok 7788 cc34ce2aab17
ok 7789 a7029204df7b
ok 7790 efb959ed05c0
ok 7791 4b1a7afd9e89
ok 7792 44d7ed5529c0
ok 7793 7ff87512a07d
ok 7794 bcc8751dedc5
ok 7795 82c57efb20fc
ok 7796 92f745f88c7d
ok 7797 f7a1ef2c1d05
ok 7798 50d7f31201c4
ok 7799 241c1a234edd
ok 7800 6e7adb51fdf9
ok 7801 9edcffdf17ab
ok 7802 362c970a8c1a
ok 7803 ef8e7e714d2c
ok 7804 6f349064ea20
ok 7805 310a964443be
ok 7806 2a6e332a1e7c
ok 7807 ff26a693dce0
ok 7808 6706d2a86300
ok 7809 d00458a544ee
ok 7810 22c609c1d0a0
ok 7811 73fb4d760c54
ok 7812 1c1937dd3ef6
ok 7813 5ad928faedd6
ok 7814 97698c76d48d
ok 7815 fd4ee3aa45c0
ok 7816 67aca30e617d
ok 7817 cbe6a0ca92e8
ok 7818 2e724c599762
ok 7819 a173ce39647f
ok 7820 94df9944e3ac
ok 7821 247eb6bce41f
ok 7822 6bd2d30065b7
ok 7823 f9a58978650a
ok 7824 f1f706e02c44
ok 7825 5428b14d380b
ok 7826 f60b5272dd15
ok 7827 9c524240ca48
ok 7828 709def77398e
ok 7829 d72db18beae2
ok 7830 db542b9d6b89
ok 7831 d7a6c3fb2dbc
ok 7832 61ade9d3e7ac
ok 7833 89ac17c04aa1
ok 7834 b665126709f6
ok 7835 208d08e71440
ok 7836 5545ae8a9960
ok 7837 15d519920be6
ok 7838 d07772af7e4e
ok 7839 c8b3ce83e08b
ok 7840 c0cf94dc9f82
ok 7841 007235b25196
ok 7842 f3d525461137
ok 7843 a093c92acf1b
ok 7844 665c5214503d
ok 7845 8455ba50ea0f
ok 7846 ec6492d4e85f
ok 7847 c9f63fc76286
ok 7848 335670d23000
ok 7849 df44946a2a5b
ok 7850 23e02ec06d61
ok 7851 54e374a78b2b
ok 7852 7bfdcb46015c
ok 7853 786e5d4ea896
ok 7854 bca2daf8eb26
ok 7855 27320328978f
ok 7856 3a262fde1d1b
ok 7857 24a86605f2d6
ok 7858 d5037a400435
ok 7859 f93d99b1ef3e
ok 7860 78a41371ae3d
ok 7861 5394239e754b
ok 7862 160e2e03215d
ok 7863 4ecbea7edbdf
ok 7864 41af47ebc0c4
ok 7865 b1692743b9ab
ok 7866 41fa2126af98
ok 7867 5bbbd62e098a
ok 7868 7ecc58d29cf4
ok 7869 c7a7b7a429c4
ok 7870 79561e3ac5ba
ok 7871 fa47eb45866f
ok 7872 296eda3c1162
ok 7873 28bc80176050
ok 7874 8349a2ef797a
ok 7875 c5f490524eca
ok 7876 d708daff2035
ok 7877 2beafd838d72
ok 7878 66529c35a9fd
ok 7879 cff359680f26
ok 7880 2881da0279a1
ok 7881 d8060fb205ff
ok 7882 82878b95b9ff
ok 7883 870129cc00ae
ok 7884 707ba81689ec
ok 7885 c82823dc048b
ok 7886 6297dc610a52
ok 7887 7e904c7e2f00
ok 7888 91e9f4763a4b
ok 7889 334e6ddeacc0
ok 7890 0f4eaab969a4
ok 7891 dd143d00fed1
ok 7892 242665d562bd
ok 7893 863c388254d0
ok 7894 d52cec8b0014
ok 7895 6aa9ab29b772
ok 7896 f1ff77e880be
ok 7897 b9c3e2668cb1
ok 7898 00ad1caadd2e
ok 7899 c407df137ddc
ok 7900 45c791824d95
ok 7901 eaafb0935b05
ok 7902 c9481cd5f5b9
ok 7903 1d1d2cb2bda5
ok 7904 cdd85e3211ed
ok 7905 5d5bd07c440d
ok 7906 6ba62805a345
ok 7907 83640e226733
ok 7908 d674e0ebae70
ok 7909 d6f495fd2841
ok 7910 6f50ebc3be04
ok 7911 550ac4802545
ok 7912 c8b887f87aba
ok 7913 c597a4be4c53
ok 7914 8fcabb57362d
ok 7915 f5c9a816205a
ok 7916 4ed2431db8d0
ok 7917 98481b997dfc
ok 7918 578f336dc081
ok 7919 9de267f7f4e6
ok 7920 682ba2b1d3fa
ok 7921 eafe38340ead
ok 7922 139e992ee468
ok 7923 c2a17f2b3819
ok 7924 d8f555c9179b
ok 7925 323af95428e3
ok 7926 10fbe63293d1
ok 7927 706ea11b2232
ok 7928 84f989139806
ok 7929 52e33150b74f
ok 7930 332be65b9e95
ok 7931 f4b504fdde86
ok 7932 894a4ff30f26
ok 7933 8ffcb3855b88
ok 7934 6f3b97ed68ba
ok 7935 177a8d5be502
ok 7936 03d9883ea0b0
ok 7937 c08b9114c299
ok 7938 5f410bfe4f10
ok 7939 e6ca9e5e8ce4
ok 7940 fe273a3c8869
ok 7941 7c5a786c7d1c
ok 7942 cdc06316740e
ok 7943 19b37cf71b59
ok 7944 3b3eb71a1d74
ok 7945 85c094cc33cc
ok 7946 89be27bfada3
ok 7947 a88751407f60
ok 7948 fb4ac1d105cc
ok 7949 5a1be6b99d86
ok 7950 f5e432d329c6
ok 7951 e444e1aaa28a
ok 7952 e5e725f29eaa
ok 7953 bdace7018fec
ok 7954 258fed931498
ok 7955 27898badd229
ok 7956 6e42e5287039
ok 7957 24d0ea4aa9ce
ok 7958 d99f50d92558
ok 7959 483792b4bcbf
ok 7960 5c7c8a7ffd24
ok 7961 c0d96a6afece
ok 7962 c0b059b11d27
ok 7963 c365940ffb8a
ok 7964 286def22c7b8
ok 7965 d63ac33d96dd
ok 7966 3b9e127b0747
ok 7967 1187a2e7da9e
ok 7968 d1797f61de65
ok 7969 abea827a788c
ok 7970 b91c1a6cdfba
ok 7971 8f6fd950212c
ok 7972 023629d88fcb
ok 7973 0b79856ccf60
ok 7974 baf6f4203a91
ok 7975 eefa59c395fc
ok 7976 73746f5855ab
ok 7977 43003c895434
ok 7978 57c9b4358eb7
ok 7979 2549c3352a2f
ok 7980 545c0ffd6eb9
ok 7981 011d80fc0116
ok 7982 06190e332094
ok 7983 6774d4c6d353
ok 7984 f8361e0425c1
ok 7985 5e792848b0aa
ok 7986 f6ce23923ba3
ok 7987 17aaebcb5d3d
ok 7988 1fb138ef0176
ok 7989 2a732cf0987c
not ok 7990 e49520894e40
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen80.bats, line 922)
#   `x    := 1*  -1  else while (¬(0 +  z=  -1     *  y))  do     x:=    y  *    Z6   ' '{x → -1, y → 0}'' failed
# if (y    -  z< (y - d)  *x  ∧     true)   then   
# while z   +     3<   z     +    y  ∨    false    do 
# while (¬false)      do   skip   else   y    :=    z  +x   ;if (z<0     -   x   ∨ true) then 
# 
#  x    := 1*  -1  else while (¬(0 +  z=  -1     *  y))  do     x:=    y  *    Z6    = {x → -1, y → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 24 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (y    -  z< (y - d)  *x  \8743     true)   then   \nwhile z   +     3<   z     +    y  \8744    false    do \nwhile (\172false)      do   skip   else   y    :=    z  +x   ;if (z<0     -   x   \8744 true) then \n\n x    := 1*  -1  else while (\172(0 +  z=  -1     *  y))  do     x:=    y  *    Z6   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 7991 4ed8eadb9137
ok 7992 d3d89c3a3789
ok 7993 6f349064ea20
ok 7994 1b285a31726a
ok 7995 8ca866c2274b
ok 7996 0b441d5d4acd
ok 7997 76ce4d84c82a
ok 7998 a0b4c974a1c5
ok 7999 3cc1459a7bf0
ok 8000 b4d5e03a6a17
ok 8001 9be625376af4
ok 8002 4889c63917ca
ok 8003 a6c7bb9c2704
ok 8004 a40d865cb94c
ok 8005 abc1a127f85e
ok 8006 4281810070ee
ok 8007 7e5540cc79a4
ok 8008 4f8865a9ff04
ok 8009 9656c8778d3a
ok 8010 d016f8e8b063
ok 8011 7bdc1177c4d2
ok 8012 aac148c0a73a
ok 8013 5cd3d445c9a4
not ok 8014 1f49af3a0e83
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen81.bats, line 118)
#   `skip  ' '{S → 0}'' failed
# if (¬false)    then 
# 
# S:=    UU-    N     else 
#   
# skip  ;if (¬true)      then 
# 
# 
#   if (¬(-3= z* x ∧  true))    then sD:=     y  -     -1 else  sD    :=2 +     2  else   while -3    *     u4 <    d * 0    ∧1  - -2   =    (z     - z)-    -2    do     
# skip   = {S → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 232 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "if (\172false)    then \n\nS:=    UU-    N     else \n  \nskip  ;if (\172true)      then \n\n\n  if (\172(-3= z* x \8743  true))    then sD:=     y  -     -1 else  sD    :=2 +     2  else   while -3    *     u4 <    d * 0    \8743\&1  - -2   =    (z     - z)-    -2    do     \nskip  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8015 5bd97d297323
ok 8016 3e54a0062e97
ok 8017 cc1cdcd706bc
ok 8018 5ad0868a1d2a
ok 8019 3c8da9736110
ok 8020 1b1b428a667d
ok 8021 437a90f21a8b
ok 8022 8104398e57d5
ok 8023 446893cf25ed
ok 8024 2b163ffc588c
ok 8025 5af6da70cdd9
ok 8026 d041f343369e
ok 8027 17f64bbe4c55
ok 8028 bedc52309616
ok 8029 2e577e275056
ok 8030 cad8c6d67fea
ok 8031 e0cc1797a878
ok 8032 438afa74741e
ok 8033 62f727bcc31f
ok 8034 573a29e3c968
ok 8035 5dfb5fe7c35f
ok 8036 77e6b0718df6
ok 8037 9841c4f41517
ok 8038 e0e3899c58e2
ok 8039 bbba9bff66ee
ok 8040 f71f5192f8f7
ok 8041 85e73fa8d1bd
ok 8042 c7d7ee900483
ok 8043 08ef79b6e823
ok 8044 b8a13c7e0cd1
ok 8045 2297dcac6869
ok 8046 1df7ac80fe06
ok 8047 64565749b434
ok 8048 b2328e6de434
ok 8049 ffc6aedd8e19
ok 8050 df9fb1825aca
ok 8051 49cd2e5a97f2
ok 8052 ac5e3b72a052
ok 8053 281b3e376195
ok 8054 29f64bd664fc
ok 8055 8e2218001728
ok 8056 cdad19d6faff
not ok 8057 d9d44e61c5f9
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen81.bats, line 582)
#   `if (true ∧    true) then    skip      else skip  else   skip' '{}'' failed
# if (false    ∧    x+     y   =    3    +     x)     then if (z *     3    = -3   -y  ∧ -4  +  1<   x     +  -3)   then  
# 
# KC  :=    1 -  z  else   skip   else 
# 
# 
#  
# if (¬false)   then   
#  skip   else 
#  
# 
# z:=    x   *  -2    ; 
#   
# if (y    -   z  < (0- 0)-   z  ∧     -2 +-4  =    -4     +   -3)   then 
# if (true ∧    true) then    skip      else skip  else   skip = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 253 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (false    \8743    x+     y   =    3    +     x)     then if (z *     3    = -3   -y  \8743 -4  +  1<   x     +  -3)   then  \n\nKC  :=    1 -  z  else   skip   else \n\n\n \nif (\172false)   then   \n skip   else \n \n\nz:=    x   *  -2    ; \n  \nif (y    -   z  < (0- 0)-   z  \8743     -2 +-4  =    -4     +   -3)   then \nif (true \8743    true) then    skip      else skip  else   skip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8058 10b3aa0005f7
ok 8059 20d7b8422ef5
ok 8060 9fe004243ec0
ok 8061 b15d3a699906
ok 8062 23be8537e955
ok 8063 e8087b456df8
ok 8064 ebdf17de33d4
ok 8065 2832231b7868
ok 8066 6e38d0c67fe6
ok 8067 5453ba8d7fdb
ok 8068 718f488b52ad
ok 8069 bdd7618cd96c
ok 8070 d3d585b81a29
ok 8071 83d09514a1ff
ok 8072 6a6ea3ae430e
ok 8073 0b54e2a54abc
ok 8074 36175dafbe61
ok 8075 e10394ab8d93
ok 8076 38569118c9eb
ok 8077 af15f151c366
ok 8078 741ee27939e5
ok 8079 277c09e28e97
ok 8080 7372cf84c0b6
ok 8081 a31340f55677
ok 8082 cfb318831fab
ok 8083 591bdaf49eab
ok 8084 c56a7419a38a
ok 8085 b994ccea6f58
ok 8086 6c888f7c2879
ok 8087 57b00728ee44
ok 8088 50b2bade8d4d
ok 8089 cc38a5271da0
ok 8090 681971cbda7f
ok 8091 122154145d64
ok 8092 5eeea02a91c6
ok 8093 a69d10bac540
ok 8094 39d50ad14e7a
ok 8095 2403363d7c53
ok 8096 ecfb64e0c8a3
ok 8097 4d7cad2a3eb5
ok 8098 cc2e650483a6
ok 8099 f4629f613b0b
ok 8100 3650cde45f3e
ok 8101 bbfc89c00dd3
ok 8102 18336ee8d6f8
ok 8103 f0e8cbea8b9a
ok 8104 9db3aa9ac969
ok 8105 1bd44d739282
ok 8106 edf7fa4238bf
ok 8107 1cf7b7906d34
not ok 8108 f8d9a7f99c7c
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen82.bats, line 78)
#   `z     :=z*   x' '{x → 4, y → 0}'' failed
# if (y   +   z    <    x    + -3  ∨  true)   then  if (z    - o    =   (i6 + z) *     1 ∨    z+ -2     <  y) then  
# 
#  x :=4-x  else  
# skip      else 
#  
# if (¬true)  then 
# 
# 
# 
# skip     else  
#  
# skip ;
# 
# 
# if (false∨y     + 2 <  L8) then   
#  
# while SF * y  <x   -   2   ∨ Z  *   -3 <    -3   -  x   do  
#  skip      else 
# if (¬(y *     4  =    x+    -1))    then 
# 
#  y  := b1  +     0 else 
#  
#  
# z     :=z*   x = {x → 4, y → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 79 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (y   +   z    <    x    + -3  \8744  true)   then  if (z    - o    =   (i6 + z) *     1 \8744    z+ -2     <  y) then  \n\n x :=4-x  else  \nskip      else \n \nif (\172true)  then \n\n\n\nskip     else  \n \nskip ;\n\n\nif (false\8744y     + 2 <  L8) then   \n \nwhile SF * y  <x   -   2   \8744 Z  *   -3 <    -3   -  x   do  \n skip      else \nif (\172(y *     4  =    x+    -1))    then \n\n y  := b1  +     0 else \n \n \nz     :=z*   x\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8109 6b3732583280
ok 8110 108f9d69f90d
ok 8111 21aa44f695ab
ok 8112 e92dbf8f6500
ok 8113 6da2a9ff0a86
ok 8114 0499087559a7
ok 8115 f179ff39dde5
ok 8116 e34fc298c622
ok 8117 2507d172ac94
ok 8118 40afe53521d2
ok 8119 232cd5d72024
ok 8120 7f30dab63369
ok 8121 4cd8d029a8e8
ok 8122 9828a74a1b74
ok 8123 350f4a018c69
ok 8124 69979d07f49d
ok 8125 bd02bfde5d0e
ok 8126 5e13bad80060
ok 8127 f663b20aad20
ok 8128 ebfdab4808c3
ok 8129 87bae9ae62d2
ok 8130 90d7d58e36e2
ok 8131 d08c696ed38e
ok 8132 df434b1ca1db
ok 8133 5e21d7e1754f
ok 8134 2b903a8040b3
ok 8135 3a7ca85dda8f
ok 8136 1ce864d7b483
ok 8137 6712e29fa2b4
ok 8138 9b6e966a8a12
ok 8139 4d0bac723836
ok 8140 46a289c81eaf
ok 8141 c889db4b8066
ok 8142 811c151d0e73
ok 8143 f2777d394aa0
ok 8144 ffcb513e83dd
ok 8145 293faf47035c
ok 8146 f16dda15c6d1
ok 8147 552f12c7683d
ok 8148 53280d1b9cc9
ok 8149 d5ab1e2286ff
ok 8150 61a96e6b8cba
ok 8151 edfcfd08e79a
ok 8152 e2c809f11d3d
ok 8153 186bb4b1d756
ok 8154 8c4fd9084bf0
ok 8155 277719caa77b
ok 8156 41cf5c98b570
ok 8157 4bc619d7e273
ok 8158 74e4804345a8
ok 8159 597fdb618ec4
ok 8160 da4e3a15ae26
ok 8161 4937bed2f551
ok 8162 bbefc9f46f8c
ok 8163 28799b817554
ok 8164 fd38bdc6218e
ok 8165 42bfa9e8a703
ok 8166 e1d8ae6402bd
ok 8167 72c59604330f
ok 8168 6285dac189c9
ok 8169 0f878a9e7d72
ok 8170 8f66ea566250
ok 8171 5a618fe0ac64
ok 8172 026a9f47827a
ok 8173 68d487d21ba4
ok 8174 8c5b87478311
ok 8175 aa289d0789dd
ok 8176 4c510ceb56a1
ok 8177 93851e3cb261
ok 8178 0452cda91e31
ok 8179 e2847710951f
ok 8180 ab1bf68ad803
ok 8181 f0a1a826d7d7
ok 8182 f2e9cf5c6c4d
ok 8183 981803eb5952
ok 8184 a0f363aa7b3b
ok 8185 5cf3376a243e
ok 8186 0d15a5ebe99c
ok 8187 940536c771d2
ok 8188 a88f67868350
ok 8189 6b42df8ca943
ok 8190 c0e7df37b35c
ok 8191 a83cd465b0c2
ok 8192 5b40edf3d50b
ok 8193 ba7f654d92b4
ok 8194 2be8ac5f5073
ok 8195 11d82cb28939
ok 8196 cac2a219e1bd
ok 8197 dfa26337d09b
ok 8198 868fca184c6b
ok 8199 c7b4fed12fe4
ok 8200 2971c8702f48
ok 8201 5df1c3b915fa
ok 8202 8b7779770ecc
ok 8203 94af15ba6e8d
ok 8204 9891a18ae982
ok 8205 2c46c60cf856
ok 8206 c7814cf3bb14
ok 8207 4a869c16bdfd
ok 8208 ba09e5a425b8
ok 8209 8764085e6b3a
ok 8210 27eb0fe08f21
ok 8211 cd60c0d30910
ok 8212 0b3037ee0a45
ok 8213 3625450e8f69
ok 8214 2af973960659
ok 8215 bb5a922aba92
ok 8216 036ad656f182
ok 8217 7fdb489eaf33
ok 8218 aea2850f5e06
ok 8219 305cbd0a95c8
ok 8220 88f457351be1
ok 8221 fd364e86948e
ok 8222 2d6cc75b2c4c
ok 8223 6e77873b9237
ok 8224 14da70fa007b
ok 8225 81ca2b54709d
ok 8226 d14612db3182
ok 8227 91c26801f36d
ok 8228 0015d2dbe52a
ok 8229 8c58748c31ce
ok 8230 b3ca42df08b0
ok 8231 689bfa8c4621
ok 8232 29ff4fa20093
ok 8233 50e7cd9f9023
ok 8234 1208fae73ead
ok 8235 52f92db30ff5
ok 8236 3037a04b5df7
ok 8237 7cb4a35bf22b
ok 8238 462c2bb95fcc
ok 8239 62e58aeb8f6e
ok 8240 c76e373ede5e
ok 8241 e5023db436e1
ok 8242 16d5c5642802
ok 8243 0b8bfc4bc045
ok 8244 b5d24ffaf674
ok 8245 d8d067b77571
ok 8246 8560447bec97
ok 8247 850494e9111c
ok 8248 c0ab4fb06f51
ok 8249 056829aa630e
ok 8250 f4cff9bd5ce8
ok 8251 ee3319895c56
ok 8252 29d9de5f477c
ok 8253 4f94ff39c338
ok 8254 d7be92e68983
ok 8255 4ab86890439f
ok 8256 e1b902c17a1d
ok 8257 4e0841f35f97
ok 8258 e5f2cbd5cd05
ok 8259 12fbb65a46c9
ok 8260 095cccf755fb
ok 8261 a582536ea22b
ok 8262 600c25270a49
ok 8263 5c2e7511bbe7
ok 8264 4430da47bb52
ok 8265 3f7313abce00
ok 8266 c7e67d6c97c0
ok 8267 eb023010b737
ok 8268 33320b1eb6e0
ok 8269 7f193afe513e
ok 8270 aabc2275fe53
ok 8271 51111756d124
ok 8272 d707fa3b4bd8
ok 8273 c279ccf6bb2c
ok 8274 c11e69cdd463
ok 8275 4cdce3fc5458
ok 8276 4d6265a57585
ok 8277 891867265e4e
ok 8278 d63a7b488afb
ok 8279 d4a6f4d5e3d6
ok 8280 d9ac95c47cf1
ok 8281 3ddfc25d8135
ok 8282 555e93646210
ok 8283 a93dd946f96f
ok 8284 03fccd393302
ok 8285 5fa314e97d29
ok 8286 06bc75808c74
ok 8287 4553b1a5359b
ok 8288 5f3e85de0caf
ok 8289 37994f8428d5
ok 8290 0d70d1010671
ok 8291 c2d81adf1e9e
ok 8292 71e8d0cf11fc
ok 8293 8477a852f369
ok 8294 fd71cbb6b9d9
ok 8295 000c699f208a
ok 8296 60df786f787b
ok 8297 ff3cf8481114
ok 8298 8960999aa54d
ok 8299 196521cd5de9
ok 8300 40b8f190b31f
ok 8301 6e2306fdb177
ok 8302 9cd53b5e203e
ok 8303 222b604e314f
ok 8304 06a0949afd7f
ok 8305 db8b4a4a41cf
ok 8306 bf85eb384e86
ok 8307 2e811c7e2c5f
ok 8308 92d753cfe31c
ok 8309 ba60df9928fd
ok 8310 2407e20a9188
ok 8311 e09e0274efb2
ok 8312 b6c5190e5b56
ok 8313 fe05cebc0b7d
ok 8314 682241fdf0fd
ok 8315 628b6c4616fa
ok 8316 0c3292489c0b
ok 8317 3bc6d649da97
ok 8318 07fd4fa131f0
ok 8319 d30f1d12b170
ok 8320 be2349c0fe10
ok 8321 55a211607e75
ok 8322 4591aea30a18
ok 8323 07edbb2bde7d
ok 8324 f3e5bfc35f3d
not ok 8325 7de240a6a8b6
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen84.bats, line 252)
#   `skip  ' '{y → 0}'' failed
# if false     then  
# 
# 
#  skip else 
#  
# 
# skip  ;
#  
# 
# if (¬(z  -    1   =     (2 -  -3)     - -1)) then 
#  y  :=     ZO    else 
#  
# 
# 
# while true     ∧x-    x     =     y   +  4     do 
#    skip   = {y → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 86 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if false     then  \n\n\n skip else \n \n\nskip  ;\n \n\nif (\172(z  -    1   =     (2 -  -3)     - -1)) then \n y  :=     ZO    else \n \n\n\nwhile true     \8743x-    x     =     y   +  4     do \n   skip  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8326 efe598f04ca4
ok 8327 782e6c950816
ok 8328 d02452b5e88c
ok 8329 dc1ad7903167
ok 8330 b5e396744353
ok 8331 88377dba761c
ok 8332 0838bdadd74b
ok 8333 1a83076457cd
ok 8334 7902762c12d9
ok 8335 09630dbd8eef
ok 8336 105c38c58ce5
ok 8337 e721cf5743ef
ok 8338 644a1b8eee02
ok 8339 c15bd0bb182a
ok 8340 0f6a20470bc5
ok 8341 e635c8eb2119
ok 8342 86dcf1ccbefa
ok 8343 3c16c887be88
ok 8344 fc22cb1e8c53
ok 8345 25b540e5f805
ok 8346 6a200f7aad14
ok 8347 43ee3f92c500
ok 8348 a6db4c94888a
ok 8349 d7558530c38f
ok 8350 c11147a58d75
ok 8351 150f1b5f5d2c
ok 8352 430093a22632
ok 8353 cf13916a2838
ok 8354 5bdb38637bf9
ok 8355 fed3324f5ac8
ok 8356 deae190d838b
ok 8357 748c5cecb3c5
ok 8358 f97e9783c807
ok 8359 7fbfbc9880b3
ok 8360 156455ef32ac
ok 8361 4e45d4a4fbbf
ok 8362 835aa81e06ed
ok 8363 3547ee3bc6ce
ok 8364 a164f7534cea
ok 8365 143319aefe88
ok 8366 736697b04446
ok 8367 73925801ebd7
ok 8368 9eb4805f30a8
ok 8369 4942cc20efd1
ok 8370 fb39839bcc1e
ok 8371 a20ea89c3821
ok 8372 0670d6b042b3
ok 8373 aa47d7c1d6e4
not ok 8374 77ad1d845864
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen84.bats, line 750)
#   `skip   ' '{}'' failed
# while -2  +  z=   1   +  y   ∧    w     +1  =-2 +  x     do 
# 
#  
# if (¬(z  =   z   -  x)) then  
# z    :=     o   else    skip    ;  
# if (x   +   2     =   3)      then  while (¬(x *   -4  <0 -    4))    do   if (x     *  z     <   z*  0  ∧   -4  *   z<2 * 4)     then jh :=   x  *    3      else 
# skip else  
#   while z     -   x<  (-4     +-1)    *     y  ∧ false   do 
#   
# skip    = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 345 (Just (Tokens ('*' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "while -2  +  z=   1   +  y   \8743    w     +1  =-2 +  x     do \n\n \nif (\172(z  =   z   -  x)) then  \nz    :=     o   else    skip    ;  \nif (x   +   2     =   3)      then  while (\172(x *   -4  <0 -    4))    do   if (x     *  z     <   z*  0  \8743   -4  *   z<2 * 4)     then jh :=   x  *    3      else \nskip else  \n  while z     -   x<  (-4     +-1)    *     y  \8743 false   do \n  \nskip   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8375 ed6aafd7ad44
ok 8376 626b3dc97ae0
ok 8377 4664e00f8e11
ok 8378 68b28346c1b9
ok 8379 0a6458d17f33
ok 8380 c90203f2637d
ok 8381 49467156b3d9
ok 8382 12af066e9275
ok 8383 a067766692d8
ok 8384 e18e5dcf427f
ok 8385 71a8acae5e15
ok 8386 5555becfd14c
ok 8387 55fac55826fa
ok 8388 d17c464cac51
ok 8389 085d09e074db
ok 8390 86a7997492f7
not ok 8391 f1df567b78d3
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen84.bats, line 932)
#   `skip ' '{}'' failed
# if (¬(-2*  y <  0  -  z))   then 
# skip     else while (¬(x =    gN))     do 
# 
# 
#  x := x +     0     ; 
# 
# while -3    - -1    <     (x  +     -3)   *    x    ∧ -3 -y    <-4    *3 do 
# 
# 
# skip  = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 145 (Just (Tokens ('*' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "if (\172(-2*  y <  0  -  z))   then \nskip     else while (\172(x =    gN))     do \n\n\n x := x +     0     ; \n\nwhile -3    - -1    <     (x  +     -3)   *    x    \8743 -3 -y    <-4    *3 do \n\n\nskip \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8392 8dce1ce242e4
ok 8393 5ef3f5ffbfdd
ok 8394 33e95bf22a52
ok 8395 f320a3f89396
ok 8396 688d0deae0b6
ok 8397 385dec278503
ok 8398 e79358ebdf17
ok 8399 a278fd06bd4a
ok 8400 11680ad2925c
ok 8401 8c9de8fbd31b
ok 8402 f0afdb2c2abc
ok 8403 fac58bb802cc
ok 8404 6ac6dd8a22d9
ok 8405 0634032000ca
ok 8406 0591fa257f20
ok 8407 545c14fe5805
ok 8408 cb1859311cd4
ok 8409 c688fbdb513f
ok 8410 66017296f3ab
ok 8411 dad64ba495c4
ok 8412 a98c4da3b1be
ok 8413 78bdd0e57197
not ok 8414 7607709348a2
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen85.bats, line 138)
#   `while (¬true)      do skip    ' '{}'' failed
# while true  ∧     2 *  -3   =2   *    Y5     do  skip   ; 
#  while 4   -    y<     (3     -   z)  *     0   ∧     4-  y   <     x+   x     do   
# 
# while (¬true)      do skip     = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 97 (Just (Tokens ('*' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "while true  \8743     2 *  -3   =2   *    Y5     do  skip   ; \n while 4   -    y<     (3     -   z)  *     0   \8743     4-  y   <     x+   x     do   \n\nwhile (\172true)      do skip    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8415 3e7d2c085a0a
ok 8416 c784e08cfc55
ok 8417 1d1c899e48f1
ok 8418 08483592528e
ok 8419 712a974ae3a0
ok 8420 c947215fd9ab
ok 8421 87bd41f493e2
ok 8422 1ce43b834a82
ok 8423 6ea9184d36e6
not ok 8424 efdd28883265
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen85.bats, line 224)
#   `skip    ' '{}'' failed
# while (¬(x     -1  <     y)) do  
# 
# if (¬((x +    y)-  z  <   x  *    0))    then  
#   
# y     :=  z    + y else skip    ;
#  while (¬(x  *    c4=  x *0))   do   
#  skip     = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 57 (Just (Tokens ('<' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while (\172(x     -1  <     y)) do  \n\nif (\172((x +    y)-  z  <   x  *    0))    then  \n  \ny     :=  z    + y else skip    ;\n while (\172(x  *    c4=  x *0))   do   \n skip    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8425 33ed4b59d73b
ok 8426 7e74766cb61a
not ok 8427 edd13663f40d
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen85.bats, line 252)
#   `skip  ' '{x → 0}'' failed
# if (¬false)    then 
# 
# 
#  x:=  x    + z  else 
# 
# 
# 
#  if (¬(-3   =   z +  -2))     then skip else  
#  skip     ;
#  
# 
# while 4   =   1    +  l   ∨     y    =   (1    -  z)  *   -2    do  
#  
# skip   = {x → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 164 (Just (Tokens ('*' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "if (\172false)    then \n\n\n x:=  x    + z  else \n\n\n\n if (\172(-3   =   z +  -2))     then skip else  \n skip     ;\n \n\nwhile 4   =   1    +  l   \8744     y    =   (1    -  z)  *   -2    do  \n \nskip  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8428 9508fde65be9
ok 8429 21a7234a873f
ok 8430 4a7cde292146
ok 8431 2e402716868e
ok 8432 b9dd366a6d9b
ok 8433 52851f970c94
ok 8434 270b412ecab0
ok 8435 1b6ee05520f5
ok 8436 7263f4da899a
ok 8437 1974ae77887f
ok 8438 a1970301ac16
ok 8439 bdcfe90a3c57
ok 8440 50c5d607d456
ok 8441 5ea630e008ac
ok 8442 e6e1229f7731
ok 8443 e03b6bda6bf0
ok 8444 3768ea64a8bb
ok 8445 ecbaf75259e1
ok 8446 3240815291ee
ok 8447 3423183f55ad
ok 8448 91b34dd2d9da
ok 8449 52524bef02b4
ok 8450 cefac9433b68
ok 8451 d45af87593ca
ok 8452 4f3927694eee
ok 8453 0faa267836cf
ok 8454 d6ff38de9eaf
ok 8455 61253e2a15d6
ok 8456 c50a1fa7dd9e
ok 8457 c3d4e581ead8
ok 8458 ec018e1f749c
ok 8459 2662e4587c72
ok 8460 e894dd786fa5
ok 8461 81edc8540816
ok 8462 6a759f901869
ok 8463 194f315116a9
ok 8464 ae630c527591
ok 8465 65988400c7fd
ok 8466 25a0776902ce
ok 8467 d052fec0d72a
ok 8468 3a6188eb3f8f
ok 8469 f29f6aa47087
ok 8470 9182e21c017c
ok 8471 6ab1bdbfcf5d
ok 8472 b3e8a86d303e
ok 8473 f8d87faaa1b5
ok 8474 0d29235e8429
ok 8475 d1b3d98d992c
ok 8476 2e5a357b5d1c
ok 8477 2d8bb97b582a
ok 8478 0303e641b462
ok 8479 2087d5098796
ok 8480 f7bb99eb9fe9
ok 8481 df146227e17f
ok 8482 880ed50d22db
ok 8483 31fb2573a582
ok 8484 2b49579f3b20
ok 8485 950821d23c77
ok 8486 9fd4ff04af3d
ok 8487 518ef980554b
ok 8488 5dfe161f2879
ok 8489 54ad9d247e48
ok 8490 6ce0ca873421
ok 8491 4746719d2f26
ok 8492 488ac5d76d1b
ok 8493 79bf13541701
ok 8494 4d997f6b9160
ok 8495 7c22755977ae
ok 8496 f1c7149a2b64
not ok 8497 87c7ca23c04c
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen85.bats, line 985)
#   `x     := y     *x  ' '{x → 0, y → -1}'' failed
# if (false∧     z  +    x    <  -2   +   3)    then  
#  
# 
# skip  else  
# 
# y    := -3   -     -2  ;if (dW     -  4    = -3   * y     ∨    -2  *  -4 = (4   +x)*    4)     then x:=    (x +-2)  -  -3    else 
#  x     := y     *x   = {x → 0, y → -1}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 153 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (false\8743     z  +    x    <  -2   +   3)    then  \n \n\nskip  else  \n\ny    := -3   -     -2  ;if (dW     -  4    = -3   * y     \8744    -2  *  -4 = (4   +x)*    4)     then x:=    (x +-2)  -  -3    else \n x     := y     *x  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8498 d814f30a1479
ok 8499 7902c968bcab
ok 8500 cd257d5ae027
ok 8501 fb49647a285f
ok 8502 94743b44d080
ok 8503 0c1a850e8bba
ok 8504 9d77ce6d4648
ok 8505 1a9a0cd2bee5
ok 8506 200c9a309f3b
ok 8507 80dec241a48d
ok 8508 74f44738bd38
ok 8509 37aecc37b638
ok 8510 4855ab4c2fa9
ok 8511 88d4f1ce1b29
ok 8512 30b855a7334b
ok 8513 b51e87d68455
ok 8514 5738ef22ddf9
ok 8515 c5985d89dc7c
ok 8516 12bc6f8a8d08
ok 8517 233dd99edcb5
ok 8518 467a10b15a13
ok 8519 84e6c4e6940e
ok 8520 ca02d3856cdc
ok 8521 743b8a5718e5
ok 8522 e0be54e8a417
ok 8523 53b14fbc3fdd
ok 8524 ab877430207e
ok 8525 28b0389cfe9f
ok 8526 eaa6bf29d08e
ok 8527 8341ea5ab8ef
ok 8528 257cfa25666b
ok 8529 85ac90cb48c2
ok 8530 a28ce408abab
ok 8531 fd16199331cf
ok 8532 8c637effdfdd
ok 8533 6bba6ad9c792
ok 8534 226fdd763789
ok 8535 e16298ce8319
ok 8536 e48d4d4e5bac
ok 8537 0faed03d4096
ok 8538 49c6d54bc48f
ok 8539 e9b2249ef641
ok 8540 2a5de8e120d8
ok 8541 f551ccfe1e7c
ok 8542 69bc45f9ea7e
ok 8543 390166585690
ok 8544 de1a044726a6
ok 8545 6e7354c26b89
ok 8546 c54f43e26469
ok 8547 0269cd08e7ac
ok 8548 861fdd218344
ok 8549 8a72ab19c342
ok 8550 ab4e4e8e0ae5
ok 8551 bd7fd5fdb142
ok 8552 700585cea4a7
ok 8553 18a84d004bb0
ok 8554 322748463b4b
ok 8555 3e551cab8787
ok 8556 be261ca418de
ok 8557 21a91ab15217
ok 8558 0478750c7860
ok 8559 af1355e0ff2f
ok 8560 ff0c9d16ed99
ok 8561 ab70ee5554e7
ok 8562 a76d90f4d626
ok 8563 d66f05e64e82
ok 8564 ad66d38b9c80
ok 8565 c30d875447d7
ok 8566 f976b0e63ec3
ok 8567 4dbf93e473a4
ok 8568 b9df6b780fb0
ok 8569 c7b58900adeb
ok 8570 bbd07c79456b
ok 8571 deb33d74cc85
ok 8572 ec37fee724be
ok 8573 0315ed18b199
ok 8574 6fbc3addc0fd
ok 8575 ca61afee3b28
ok 8576 b98b4f43cebd
ok 8577 f1d1dc83001b
ok 8578 1cf2c1ffa8a7
ok 8579 f66453491ead
not ok 8580 32cfbe716570
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen86.bats, line 783)
#   `z     :=     -2+  x     else    skip' '{}'' failed
# while 3   - -3=   0   -    0  ∧-3 +  x     =  -4  *     x    do  
#  
# if ((x -   z)-    -1 =     y     -   j)  then 
#    z     :=-4+x else 
#  
#  E := -1   ;
# 
# 
# 
# 
# if (2*  3 =   -3*  4 ∨   false)  then 
#  
#   z     :=     -2+  x     else    skip = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 89 (Just (Tokens ('=' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while 3   - -3=   0   -    0  \8743-3 +  x     =  -4  *     x    do  \n \nif ((x -   z)-    -1 =     y     -   j)  then \n   z     :=-4+x else \n \n E := -1   ;\n\n\n\n\nif (2*  3 =   -3*  4 \8744   false)  then \n \n  z     :=     -2+  x     else    skip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8581 ea3a94bfda65
ok 8582 23e5b5bddfa8
ok 8583 2a0865324def
ok 8584 04a6d3096a5c
ok 8585 531fb5db6399
ok 8586 72ee22d4162e
ok 8587 906640dd0423
ok 8588 fe76bae10830
ok 8589 04660fd6490e
ok 8590 e0930f9395ac
ok 8591 679936c60be6
ok 8592 a17d946cb739
ok 8593 33e9bdbbbcfc
ok 8594 b01e7c10ea8b
ok 8595 f5cab607835d
ok 8596 04eceb169e52
ok 8597 98aa51f465b6
ok 8598 941fd73c658d
ok 8599 e9ce3720b7b9
ok 8600 0d5fe70f4f8a
ok 8601 986bd4b7b0a1
ok 8602 ec412561f694
ok 8603 b28161a10ecc
ok 8604 9f73ba15b9d9
ok 8605 e528f67439c4
ok 8606 fa20aa599f04
ok 8607 5c993bd283fe
ok 8608 45d5012a0fce
ok 8609 bcca5d35f306
ok 8610 c901d19da834
ok 8611 400f3c0e20a7
ok 8612 e60f7ac8bc46
not ok 8613 71c8f56ddd21
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen87.bats, line 118)
#   `y :=    x-  -3     ' '{}'' failed
# while z    * -4   =  (3     -    y)    -    y      do 
#    if (false∧ true) then  
# 
#  
# x:=1  +1   else skip; while x   -     x  <   L - B4     ∧  -1   *   -2  =   x    -     e    do  
# 
# 
#  y :=    x-  -3      = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 39 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "while z    * -4   =  (3     -    y)    -    y      do \n   if (false\8743 true) then  \n\n \nx:=1  +1   else skip; while x   -     x  <   L - B4     \8743  -1   *   -2  =   x    -     e    do  \n\n\n y :=    x-  -3     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8614 d8697ee423ac
ok 8615 668fc8c344de
ok 8616 2638cc160dcc
ok 8617 040455b3e0bb
ok 8618 c30d875447d7
ok 8619 ad53c299b901
ok 8620 892e3b3115b0
ok 8621 22f13ac2784a
ok 8622 0b6402428fb4
ok 8623 06b7416c0ab3
ok 8624 e1365ec52267
ok 8625 a988a22bee41
ok 8626 de085a6d0d1c
ok 8627 2f8fabd4dffe
ok 8628 8eabfa9f806e
ok 8629 2cdb7122bf0d
ok 8630 05c8c8b4603d
ok 8631 f12596f2dc29
ok 8632 2e6c24d32a66
ok 8633 fbd64dc3b085
ok 8634 3e45a7bddea7
ok 8635 49423c52fbc5
ok 8636 2f293af2ad40
ok 8637 661cf37f0701
ok 8638 19baa87d72db
ok 8639 4b2542cd97e6
ok 8640 862030692f6b
ok 8641 79f28bfd23bc
ok 8642 eb84f0264c8f
ok 8643 b13ece78f86c
ok 8644 962afe3f2b13
ok 8645 21c7a5baf399
ok 8646 2e977af0900a
ok 8647 56e0a8adcfc3
ok 8648 182f18015c32
ok 8649 85792d0a5d81
ok 8650 9d904f582e5a
ok 8651 b3bfc21a42df
ok 8652 5de5bef19524
ok 8653 619b18b13059
ok 8654 b35648076be0
ok 8655 0ab62763fc57
ok 8656 f37698897df3
ok 8657 a379b20167f8
ok 8658 d0fabccfc8d3
ok 8659 55e41de0f0b5
ok 8660 6db06730b419
ok 8661 9bb1e114c307
ok 8662 b24db81bf222
ok 8663 6b782ed4ba63
ok 8664 9cb83c412a45
ok 8665 28e6dea09f06
ok 8666 8d514db21620
ok 8667 c99876f5769d
ok 8668 cf35a87975d0
ok 8669 b9f6485b855b
ok 8670 408e1d359d66
ok 8671 291a614746b9
ok 8672 f14f5dce906d
ok 8673 871a705e70b8
ok 8674 06e09ceaa24c
ok 8675 e2ff8189d5c2
ok 8676 599232260d09
ok 8677 605cdf8e310d
ok 8678 a759c6b88b3b
ok 8679 77ce05c2347c
ok 8680 c760028e8dff
ok 8681 63822bb08166
ok 8682 66a9b8dd594a
ok 8683 b5cf488a07b3
ok 8684 8a81d70e5a30
ok 8685 bb90c14ab20b
ok 8686 c1704cdd0819
ok 8687 29ab26d49d50
ok 8688 cc54306dad0b
ok 8689 35eb40bfc6bc
ok 8690 c2917f257c2c
ok 8691 fe6b5eab97c6
ok 8692 ec2395882d89
ok 8693 c8c1d0b377cc
ok 8694 0a6f0ac3d3d9
ok 8695 d4cb066de884
ok 8696 97e967f5b0bd
ok 8697 b901272080a0
ok 8698 24aa99b95477
ok 8699 0256536145df
ok 8700 9ca0b0bcb34b
ok 8701 64e4dbb6dd28
ok 8702 c116684478a8
ok 8703 cd5451d867bc
ok 8704 692619a323cf
ok 8705 1b0f03c8d8f4
ok 8706 8d7e675b92c8
ok 8707 91ac0bb13f4a
ok 8708 433ae76d7f03
ok 8709 ca13853ba018
ok 8710 4c2be7630c0d
ok 8711 3ab700843027
ok 8712 fcbf3050c4c9
ok 8713 ba2c4bf9951b
ok 8714 a9ecbebe6a9a
ok 8715 389cbf6b4570
ok 8716 198976b003b4
not ok 8717 318bb1b08f3e
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen88.bats, line 191)
#   `skip' '{y → 0}'' failed
# if (¬true)   then   
#  skip      else while 2* x   <    (-3  --1)  *    x   ∨    false     do 
# 
#  skip  ;
# 
#   if (¬true)   then  
#  skip else if (¬(z    *   y  <    x   *     z))   then 
# 
#  
#  y    :=  0  * y  else  
#  
# 
# skip = {y → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 66 (Just (Tokens ('*' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "if (\172true)   then   \n skip      else while 2* x   <    (-3  --1)  *    x   \8744    false     do \n\n skip  ;\n\n  if (\172true)   then  \n skip else if (\172(z    *   y  <    x   *     z))   then \n\n \n y    :=  0  * y  else  \n \n\nskip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8718 c4a165f81e3c
ok 8719 1e21a7f50c56
ok 8720 be4eab74e9fc
ok 8721 766e8812da8b
ok 8722 37e42607eca3
ok 8723 093ad6b29a61
ok 8724 0480ed878de2
ok 8725 79b3bf4511db
not ok 8726 a7649a6674f4
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen88.bats, line 291)
#   `x   :=  z  -    4' '{}'' failed
# while false∧    3    *  0  =  z  * -3 do  
#  
# z   :=     -2  *   2   ;
# if (y   -    x  <     (4+z)-   -2) then  
# skip else   
# x   :=  z  -    4 = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 97 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while false\8743    3    *  0  =  z  * -3 do  \n \nz   :=     -2  *   2   ;\nif (y   -    x  <     (4+z)-   -2) then  \nskip else   \nx   :=  z  -    4\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8727 c58d9a8574eb
ok 8728 6bb286e17490
ok 8729 d54204f1d3ea
ok 8730 a8c2f060b0d7
ok 8731 78f26de397e0
ok 8732 8c405e9a2dd5
ok 8733 37d6cf38cce3
ok 8734 d051fc25eb0d
ok 8735 3920b623bf51
ok 8736 9eaa02141a91
ok 8737 bdde2308d5e0
ok 8738 e1095f7f09d1
ok 8739 f771bc3f5e63
ok 8740 0a81d34b0748
ok 8741 c4ad764a38dc
ok 8742 9d445d7d641a
ok 8743 82254d3c2433
ok 8744 4ae01b0adf02
ok 8745 abf377257c89
ok 8746 de78b0c69ac6
ok 8747 c7e16815bdd6
ok 8748 ca2f84ac8430
ok 8749 bfdad58ffbba
ok 8750 153c6b211ec5
ok 8751 f0a66d34ec33
ok 8752 a93374d70d8e
ok 8753 5667678a43cf
ok 8754 20f48242fb2a
ok 8755 03663d9b956f
not ok 8756 99fb2ba901ff
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen88.bats, line 628)
#   `P:=  z  - x     ' '{}'' failed
# while 4+    4  =    2    -    x ∧ z *  0 =    -4-   y do 
#    
# if (z *-4     <     l  -  Z2     ∨ M +   y <     z   *    y)    then     skip   else  
# 
# 
# y    :=     v   +   0 ; while (y    -     2)   -   y     =     -4     ∨     4    + 3  =W1    *   -2 do while -3    *   0 = y     * -2 ∧     y     +    z     =-4   +     y    do 
#     P:=  z  - x      = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 198 (Just (Tokens ('-' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while 4+    4  =    2    -    x \8743 z *  0 =    -4-   y do \n   \nif (z *-4     <     l  -  Z2     \8744 M +   y <     z   *    y)    then     skip   else  \n\n\ny    :=     v   +   0 ; while (y    -     2)   -   y     =     -4     \8744     4    + 3  =W1    *   -2 do while -3    *   0 = y     * -2 \8743     y     +    z     =-4   +     y    do \n    P:=  z  - x     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8757 3e7db7376ba8
ok 8758 8a59d8668bbd
ok 8759 0f4801444859
ok 8760 2b950bd58463
ok 8761 4b1edcad9fd1
ok 8762 120169a96002
ok 8763 3f9e12445ff4
ok 8764 11fb999e1cbc
ok 8765 f795f78f71ad
ok 8766 07c46ea1333a
ok 8767 f446496370f0
ok 8768 c2afd4e38870
ok 8769 504cad478491
ok 8770 c72da3d022ff
ok 8771 a53fcc4b3a57
ok 8772 a95a7db01c94
ok 8773 98d46aba7870
ok 8774 9232ddf0c3c1
ok 8775 b22b73d1be9a
ok 8776 d7dfba40e73d
ok 8777 1ddb8abc9ac5
ok 8778 51af5c3ed5f5
ok 8779 2eeef864c601
ok 8780 48958722f7c6
ok 8781 d43b8f127b59
ok 8782 5b534d28c77e
ok 8783 3338a500c1d6
ok 8784 4e2311e909d5
ok 8785 d55b45894f8b
ok 8786 a345a6d465c6
ok 8787 6c7b92ce9c2d
ok 8788 5c3b4b6c3974
ok 8789 09fea7500538
ok 8790 3c7eececf380
ok 8791 c1babe86335a
ok 8792 60788dbc6093
ok 8793 4392a4bf92fb
ok 8794 e35e48d64d06
ok 8795 9bfe774d6775
ok 8796 da487809861a
ok 8797 cb33334729a1
ok 8798 3677de5ecefb
ok 8799 e267c171b213
ok 8800 61b86468083f
ok 8801 a1eec5534589
ok 8802 42688478fe2b
ok 8803 0298dc8dfdc1
ok 8804 33fd41be6dbb
ok 8805 228aea2c9c24
ok 8806 16ea10d7a2f8
ok 8807 01dcfc733995
ok 8808 5c5bbefcb200
ok 8809 71c12f29c7bb
ok 8810 ba247ca8df66
ok 8811 e2f08f5e6600
ok 8812 a430aca83f1e
ok 8813 865efa6ea29e
ok 8814 b4ab26c0c475
ok 8815 d95158864dfa
ok 8816 ed40525f221c
ok 8817 0a0757bfc762
ok 8818 02fada10ae58
ok 8819 98aa135de149
ok 8820 dfc937fb8d1f
ok 8821 3b467323711f
ok 8822 8cb75577d176
ok 8823 9ae16545ddce
ok 8824 8fc3475fa2d0
ok 8825 123f09d488a3
ok 8826 7c7108714386
ok 8827 05f1fe4f5bdd
ok 8828 3c4f0a91b273
ok 8829 ddb0e2df0562
ok 8830 c954eb51aa93
ok 8831 538d365ff437
ok 8832 4cc82d532e44
ok 8833 5d2e813db92e
ok 8834 556330532808
ok 8835 6eb71b3becca
ok 8836 5f6f5caa8105
not ok 8837 0d95460ed30b
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen89.bats, line 382)
#   `x    :=   -3   + x   ' '{}'' failed
# if (true∧   z  *  C  < (-2    -   y)    *    2)  then 
# skip     else 
# 
#  skip ;while 1  *   1<     1   * y     ∧true do 
#  while K *   z   =x    -  y      do  
#  
# x    :=   -3   + x    = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 40 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (true\8743   z  *  C  < (-2    -   y)    *    2)  then \nskip     else \n\n skip ;while 1  *   1<     1   * y     \8743true do \n while K *   z   =x    -  y      do  \n \nx    :=   -3   + x   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8838 9d489d27a7e6
ok 8839 7fc70c198de3
ok 8840 61547eac3910
ok 8841 5cc1541d970b
ok 8842 fa7b38dc2d1d
ok 8843 828c72523c26
ok 8844 e993cef642fe
ok 8845 60b973bd9d80
ok 8846 e50d5fe65580
ok 8847 54d952d17828
ok 8848 38e75c6499a3
ok 8849 a01d2e664c17
ok 8850 93be88b08e9b
ok 8851 d2de13eefe0a
ok 8852 a52b5b86a6d6
ok 8853 93aab44be3eb
ok 8854 a1e877d4588d
ok 8855 9e9559d5b2e6
ok 8856 34d4198288ff
ok 8857 145452daab38
ok 8858 05eca3c2ae97
ok 8859 ec442fc23b30
ok 8860 14bf2a4421d7
ok 8861 784f3c7566f7
ok 8862 42c81e9069d3
ok 8863 20f15d0674bc
ok 8864 0dffc0c2a953
ok 8865 897453fd3f89
ok 8866 bc0c051f2def
ok 8867 277561d08456
ok 8868 b704d77afedb
ok 8869 fbd93edc243d
ok 8870 3081401eae46
ok 8871 5f6ebd41f215
ok 8872 d2bfb404ab13
ok 8873 b1b8070bd337
ok 8874 46a79895e816
ok 8875 dc954e0322af
ok 8876 f0ab04e44eaf
ok 8877 76f6bcd0f7f0
not ok 8878 7adb87e20c2e
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen89.bats, line 801)
#   `z  :=  y     - -2  ' '{O → 2}'' failed
# if (¬true) then 
# 
# while (T   +    Xb) *-1     <     -1    *    -1    ∧     y  + E9  =    Sx    * -3   do  skip   else 
#  
# O    := 2  -z     ;  
# while x    *   2     <   TP     +-2   ∧   true      do 
# while x   -  0  =     0   +     1∨ true do 
# z  :=  y     - -2   = {O → 2}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 38 (Just (Tokens ('*' :| "-"))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172true) then \n\nwhile (T   +    Xb) *-1     <     -1    *    -1    \8743     y  + E9  =    Sx    * -3   do  skip   else \n \nO    := 2  -z     ;  \nwhile x    *   2     <   TP     +-2   \8743   true      do \nwhile x   -  0  =     0   +     1\8744 true do \nz  :=  y     - -2  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8879 f3e4b22a0b01
ok 8880 809b58a6e460
ok 8881 224b46721bc1
ok 8882 cd2191e90918
ok 8883 ffac2a66596b
ok 8884 fdcff3d4edba
ok 8885 e4dd1ad64feb
ok 8886 54d2cb473dc6
ok 8887 befaa07e7c1e
ok 8888 413fb24e7f85
ok 8889 7962bab9f9f8
ok 8890 98567b9b6abd
ok 8891 435f446e2698
ok 8892 4811cb6146a5
ok 8893 7485a7a079fb
ok 8894 25211a980059
ok 8895 b154005caac0
ok 8896 c8511437438b
ok 8897 3d3bd7af82b6
ok 8898 71092d5af2b5
ok 8899 d9c901bc9e2f
ok 8900 0037c32b4639
ok 8901 453fccd1aafa
ok 8902 7574d2a17deb
ok 8903 5e4b6d981d70
ok 8904 78c232a40169
ok 8905 74cd650efc86
not ok 8906 8418e4be95bf
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen9.bats, line 47)
#   `z   :=   z  -     -3    ' '{W → 0}'' failed
# if (-3-     -1   <     (z+x)  - x    ∨  -4     + x<     y   + x) then W:=    f   - x  else 
#   skip  ; while 2   -   x    =z *  -1  ∨-4-z=(z- 1)  *y   do 
# 
# 
# 
# z   :=   z  -     -3     = {W → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 30 (Just (Tokens ('-' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (-3-     -1   <     (z+x)  - x    \8744  -4     + x<     y   + x) then W:=    f   - x  else \n  skip  ; while 2   -   x    =z *  -1  \8744-4-z=(z- 1)  *y   do \n\n\n\nz   :=   z  -     -3    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8907 8fb79f10c6e8
ok 8908 5df8ce41ec0f
ok 8909 0e6ba65f7fa0
ok 8910 24990c6c3edb
ok 8911 c706b8106ee1
ok 8912 aaf91e639d38
ok 8913 4312e6558505
not ok 8914 9f6e3520e114
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen9.bats, line 145)
#   `skip else skip ' '{}'' failed
# while true    ∧     2    -    -1     <  -2  *x    do 
# 
# 
# skip; 
#   if ((-3    +  -2)   *0     <     -1   +  x∧    y=-2  +   -3)     then    
#  skip else skip  = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 92 (Just (Tokens ('<' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while true    \8743     2    -    -1     <  -2  *x    do \n\n\nskip; \n  if ((-3    +  -2)   *0     <     -1   +  x\8743    y=-2  +   -3)     then    \n skip else skip \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8915 9ddb2871464b
ok 8916 d1770ac8f6f6
ok 8917 6b512d6e9ec0
ok 8918 c980a9bfc88c
ok 8919 ea0fe13ae8c4
ok 8920 daa8edc56487
ok 8921 07c0c648c1ef
ok 8922 1e8436060eb5
ok 8923 9f457003d64b
ok 8924 81428c0c2b9b
ok 8925 48aa1de797f2
ok 8926 e653f9394979
ok 8927 d98fa021fb26
ok 8928 d17829314367
ok 8929 0857064ff375
ok 8930 978556f702dc
ok 8931 09e02aa4a2c9
ok 8932 b57726d5f7f7
ok 8933 8e6d6d68da83
ok 8934 37d779d86ea9
ok 8935 211b23a006d7
ok 8936 db6b9aead546
ok 8937 922d54be462c
ok 8938 7c031392c12d
ok 8939 23409b891047
ok 8940 1b781c3f3952
ok 8941 296c778aa7fa
ok 8942 8995334da596
ok 8943 c1b24f81d8bf
ok 8944 41ce8d8e8659
ok 8945 74f3d78baa77
ok 8946 7422aa28b4b5
ok 8947 003a57f6b6fd
ok 8948 c1fb2fcf01ae
ok 8949 3aec844d6aef
ok 8950 cce974f19cc3
ok 8951 12209eacf8b2
ok 8952 0d476b106a7c
ok 8953 d4642fb1b772
ok 8954 a4f864b20664
ok 8955 bba371bdc937
ok 8956 d6fa08314964
not ok 8957 e753b94d1d7e
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen9.bats, line 564)
#   `skip' '{}'' failed
# if (y  + e    =     x     -  0    ∨(t8     -y)   *  S    <  x  *    (y    + y))   then 
# 
#  skip  else 
#  skip ;
#  while 3    -     y  <2    +gQ    ∨     0-     0     < 0     -     hP do   
#  skip = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 49 (Just (Tokens ('*' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (y  + e    =     x     -  0    \8744(t8     -y)   *  S    <  x  *    (y    + y))   then \n\n skip  else \n skip ;\n while 3    -     y  <2    +gQ    \8744     0-     0     < 0     -     hP do   \n skip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 8958 8a6fde5621c3
ok 8959 180c2519f689
ok 8960 f2ce0a33d434
ok 8961 345f06604e3e
ok 8962 b91c439dd1dd
ok 8963 a266c2c6d6e5
ok 8964 9ff759915fea
ok 8965 80029fe6ce30
ok 8966 e1eef86c51d4
ok 8967 3543f5d72d3c
ok 8968 545dab71c932
ok 8969 42582e4dd456
ok 8970 dadad858163a
ok 8971 553a9ebe27fe
ok 8972 d180a2a426b9
ok 8973 2d56d696213a
ok 8974 3d2516acdaeb
ok 8975 6d00aa9111d1
ok 8976 5bb1480e19b5
ok 8977 c73a1c0a842d
ok 8978 62b752bb8d55
ok 8979 c432626837fa
ok 8980 68917c2d2e27
ok 8981 60e658a60d4e
ok 8982 2103bfe5a4ce
ok 8983 860daefc5ce3
ok 8984 174e9e56f672
ok 8985 38b4179da09f
ok 8986 526716e9e6e9
ok 8987 d69a1bfef02b
ok 8988 d3465e4ff4a1
ok 8989 e2604f7e4fa3
ok 8990 a3d492d54bdd
ok 8991 1adbe87df621
ok 8992 0ff5829e96e0
ok 8993 7d374b677c7a
ok 8994 5e4719d9c3b7
ok 8995 a0581740c256
ok 8996 0b65dad7c959
ok 8997 c5b691065883
ok 8998 f5a08fb091f8
ok 8999 b656a47d09c2
ok 9000 d474c3b07bff
ok 9001 9cfc87ab228f
ok 9002 368c43e699e1
ok 9003 8b09fcb5ff81
ok 9004 3fd762135b52
ok 9005 0243f31730ed
ok 9006 88bc019da5c8
ok 9007 3539be4dcb84
ok 9008 42f328ab139d
ok 9009 4b3da8cf7448
ok 9010 0e480e93a33b
ok 9011 3ef3f31d60e7
ok 9012 48d437caa9d7
ok 9013 f7eed43e9f7f
ok 9014 ad271bb5679b
ok 9015 b9a1f84c9f6c
ok 9016 b40c39a6ea5a
ok 9017 d6d82b031ba8
ok 9018 a3eeb851caac
ok 9019 fa94377c9431
ok 9020 73c6fd1c4583
ok 9021 99b3638680d6
ok 9022 479f3fd2563b
ok 9023 746dd5178fc5
ok 9024 b33c558619f7
ok 9025 3649a9ddff86
ok 9026 08d9900fe102
ok 9027 582911bf4e30
ok 9028 a307c37c9891
ok 9029 8669d5bba8db
ok 9030 ba28d303f864
ok 9031 221cd3245d0c
ok 9032 bd35b62253e2
ok 9033 35270442392b
ok 9034 3e8f96b5105d
ok 9035 a875dff1be31
ok 9036 2947ede4882d
ok 9037 189b7315bdaa
ok 9038 357a4fb62102
ok 9039 cafc927e9884
ok 9040 e5b1af9fbee2
ok 9041 bcc6e480e562
ok 9042 e693a35c4935
ok 9043 fcd182d2085e
ok 9044 86ce1831aa42
ok 9045 5ccacb23cfe9
ok 9046 8d47bd4dcbc2
ok 9047 a90d90e41ee0
ok 9048 1165c6cc5ab3
ok 9049 090c94e16f17
ok 9050 09b702e81405
ok 9051 7ddce5042f94
ok 9052 a65fa82258db
ok 9053 686c153fe222
ok 9054 3d20f6860b62
ok 9055 49806686a7e9
ok 9056 0c6f996405a1
ok 9057 418f3288f4b2
ok 9058 9a889c715b02
ok 9059 139091b6406f
ok 9060 b21099bbb6cf
ok 9061 eb028679835f
ok 9062 adcc9298110f
ok 9063 86132c4a9244
ok 9064 c03d648d818f
ok 9065 8f7ec807e58b
ok 9066 c7209cfa7f58
ok 9067 6b6e897079f4
ok 9068 77d49883458a
ok 9069 c933ab1d85a0
ok 9070 902e806a8f9a
ok 9071 ce0e0488a0d7
ok 9072 752a83c0f9f2
ok 9073 7431ba5f5451
ok 9074 fdcef6d68a1e
ok 9075 11d4b081bdc9
ok 9076 6f7e6e645225
ok 9077 9205902cbf4e
ok 9078 a62ea676a965
ok 9079 61bc370916ab
ok 9080 2ddf777ae8e1
ok 9081 d77b247af2f3
ok 9082 04f2bf623ec3
ok 9083 4220b000328e
ok 9084 067ae895f228
ok 9085 2af2ac1dcd17
ok 9086 4d75a6696818
not ok 9087 15750150dd9c
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen90.bats, line 898)
#   `skip  else   skip else skip' '{y → 0}'' failed
# if (y    +  GJ<(8034150237934452600175651486305413894 -     40023282115303954808275224935504026264)     *  -41487845604403991781131368740458759125  ∧  true)     then 
# 
# y     :=   z   *   -46052452014722613418180860172553827230 else  x    :=  x + s1;
# 
# 
# 
# if (true     ∧true)     then  
# 
#   if false    then 
# 
# skip  else   skip else skip = {y → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 104 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (y    +  GJ<(8034150237934452600175651486305413894 -     40023282115303954808275224935504026264)     *  -41487845604403991781131368740458759125  \8743  true)     then \n\ny     :=   z   *   -46052452014722613418180860172553827230 else  x    :=  x + s1;\n\n\n\nif (true     \8743true)     then  \n\n  if false    then \n\nskip  else   skip else skip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9088 5224afd2cf99
ok 9089 6c9e5a3ceb96
ok 9090 61e2a8661972
ok 9091 a91cba58fbd1
ok 9092 39c011256635
ok 9093 84ea6145b7ad
ok 9094 e490a7c22f0e
ok 9095 a95a7db01c94
ok 9096 7bc5556b4579
ok 9097 aae8ac6493d7
ok 9098 cea1c0fddb3c
ok 9099 39e8d6895cba
ok 9100 5145aa452319
ok 9101 b0aeeeb2bc8d
ok 9102 0cc58c78b2ff
ok 9103 619980e9c7c8
ok 9104 2f9888c33ce4
ok 9105 682b10806af7
ok 9106 cecba103698e
ok 9107 4d20d64fb9b7
ok 9108 26b14ac0a952
ok 9109 13308da60842
ok 9110 fce3777ad156
ok 9111 585a21022c36
ok 9112 7f77d38e40ed
ok 9113 b2f97889d31c
ok 9114 e668f66a969b
ok 9115 fb9c3c981836
ok 9116 3f2197b028a7
ok 9117 e294b9b32954
ok 9118 f9b2c760c6fc
ok 9119 db492f5a34d4
ok 9120 28094d4a0182
ok 9121 ff40f0a73adc
ok 9122 5d65f805efdc
ok 9123 16628794414a
ok 9124 cbb1ecf241a5
ok 9125 de2bd5ac8752
ok 9126 6b9ee56c5e52
ok 9127 91e5cfbdf19b
ok 9128 11ae7eeb5d04
ok 9129 7a8e67c7d828
ok 9130 fddb19a50596
ok 9131 32e78553767d
ok 9132 0b4978d2e8fe
ok 9133 421b0b92bef5
ok 9134 93bc966dab71
ok 9135 2f154675d1c6
ok 9136 33787b1190c8
ok 9137 ac539cfd014e
ok 9138 072f258022f3
ok 9139 130fc7d62536
ok 9140 1136063a3fe1
not ok 9141 0552044ecbb6
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen91.bats, line 445)
#   `z   :=     149266326131223158434197643788267753397   -    x   else skip     ' '{}'' failed
# if (y-z     <  p *  x     ∨ 12781485647454890110051640444812808135     *   z     =   x     *    x)   then   if (x   *  -3598947725037798837156721682931939435=    -110155649451194144292007238116602952410-     56966011786271573796068859117093199281     ∧ -131471326426676410568327554320746063625     -     z=   -122681161283240196220846739213391325529    +    z)    then  
# 
# skip    else if (false  ∧   -85621969977652006024362947116711809884*     -122080816354077756214273180369437428012     =y+ -84529636692016552775502433093773659477)    then skip    else  skip    else skip    ;if (y-  85748894267918171650067370182428052571=  163335993851639758933478685984185714625 -  z ∧ -137173527942488369119558541618387348689     *y   =   -68722018135727055949576421937643676461 *    -64149538256682319526734069503794699607)  then 
#   
# 
# while 102116810483030824535089009897695978784* 8771768976121452496009424999710166852     <     -21613249984929561584437150118148539887     -   y ∨  143158787738961961059962907502395101002*    32079997604836917339698156105667144303  <(159076250431114383566973610275287935417     -  y)   *     -41972701235625925741939136226496494332      do 
#  z   :=     149266326131223158434197643788267753397   -    x   else skip      = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 1112 (Just (Tokens ('*' :| " "))) (fromList [Tokens ('d' :| "o"),Tokens ('\8743' :| ""),Tokens ('\8744' :| "")]) :| [], bundlePosState = PosState {pstateInput = "if (y-z     <  p *  x     \8744 12781485647454890110051640444812808135     *   z     =   x     *    x)   then   if (x   *  -3598947725037798837156721682931939435=    -110155649451194144292007238116602952410-     56966011786271573796068859117093199281     \8743 -131471326426676410568327554320746063625     -     z=   -122681161283240196220846739213391325529    +    z)    then  \n\nskip    else if (false  \8743   -85621969977652006024362947116711809884*     -122080816354077756214273180369437428012     =y+ -84529636692016552775502433093773659477)    then skip    else  skip    else skip    ;if (y-  85748894267918171650067370182428052571=  163335993851639758933478685984185714625 -  z \8743 -137173527942488369119558541618387348689     *y   =   -68722018135727055949576421937643676461 *    -64149538256682319526734069503794699607)  then \n  \n\nwhile 102116810483030824535089009897695978784* 8771768976121452496009424999710166852     <     -21613249984929561584437150118148539887     -   y \8744  143158787738961961059962907502395101002*    32079997604836917339698156105667144303  <(159076250431114383566973610275287935417     -  y)   *     -41972701235625925741939136226496494332      do \n z   :=     149266326131223158434197643788267753397   -    x   else skip     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9142 b0fff04d787b
ok 9143 8a860966facd
ok 9144 8430dbb4e61a
ok 9145 ecf5c72591ef
ok 9146 289a7cf8b9ba
ok 9147 82e6676f9990
ok 9148 c30d875447d7
not ok 9149 baa536f41e9b
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen91.bats, line 511)
#   `skip  ' '{}'' failed
# while (b  -  -112989292975593173578723481447545232102) *    105541169343873176675336784257874914557  <   x-   z   ∨    VW    *     152150269831311321171087067124752392156    <-153407893145769635929131334645923229683+-132340481512299323189976536098424186349  do 
# z   :=123751549626940051123426318552220354457   +   -71350888040194871926185846579646852988;if (x     =    z    + -93867623694471521620043633400364108078 ∨    z -   151262037372577690220086638284629568809   <-105163957055979637093743583302233643672)      then  
#   skip    else while x+  X0  < x    +    44366714970163012349579189122465463169∨  -98539642613792896291362767848422666983    <    -168141110646467968266754095815050547956   *    z    do 
#  skip   = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 55 (Just (Tokens ('*' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while (b  -  -112989292975593173578723481447545232102) *    105541169343873176675336784257874914557  <   x-   z   \8744    VW    *     152150269831311321171087067124752392156    <-153407893145769635929131334645923229683+-132340481512299323189976536098424186349  do \nz   :=123751549626940051123426318552220354457   +   -71350888040194871926185846579646852988;if (x     =    z    + -93867623694471521620043633400364108078 \8744    z -   151262037372577690220086638284629568809   <-105163957055979637093743583302233643672)      then  \n  skip    else while x+  X0  < x    +    44366714970163012349579189122465463169\8744  -98539642613792896291362767848422666983    <    -168141110646467968266754095815050547956   *    z    do \n skip  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9150 fab07b7490b0
not ok 9151 9dd46ca62e5e
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen91.bats, line 528)
#   `skip  ' '{y → 0}'' failed
# while y   <   x do  skip;while false   do y    :=d  - y; 
# if (y  +89218327465945882237712789337671211089    =  119892227895391704085569329149158988920   +z ∨   x     - y   <    (z   -    x)     *  y)   then    
# skip else if (y   *     y   = y     ∨  2632203488980867055703826303926576973 *y -    x    < x   -     48690945173869908849668089924338474917)   then  
# 
#  
# y :=     y  *  y  else  
#   
# skip   = {y → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 194 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while y   <   x do  skip;while false   do y    :=d  - y; \nif (y  +89218327465945882237712789337671211089    =  119892227895391704085569329149158988920   +z \8744   x     - y   <    (z   -    x)     *  y)   then    \nskip else if (y   *     y   = y     \8744  2632203488980867055703826303926576973 *y -    x    < x   -     48690945173869908849668089924338474917)   then  \n\n \ny :=     y  *  y  else  \n  \nskip  \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9152 7443f1604647
ok 9153 8c573c06613a
ok 9154 8d9e372e7b6e
ok 9155 fbfa9485bfe1
ok 9156 755a0e0703fd
ok 9157 db1f0a162f52
ok 9158 a1a8de325f6d
ok 9159 10f74bb7ed03
ok 9160 0f166ba34bd5
ok 9161 05457148b5e9
not ok 9162 07327c279d17
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen91.bats, line 660)
#   `z:=x  +166058404619877130087207301978416848213   ' '{}'' failed
# if (-111958783731892720719483717929457904541   *    159624005840282354509936308449179135171   <     x  -z   ∧  true)      then 
# skip      else  
# 
# if (5497579684565430595940286535389107005 -  (127532989243054034299577810774379733689 +   41202086741690628478966600973016155366) =  127682346989236321160774995861822732903   *   x∨     (-26187107203300663383525618976736763765     +    z)   - g=   y)  then   
# z    :=   143932562492050553033412367337986214380     else  
# 
#  x:=    157745776923761521422429070537022884767; 
# while false   ∧    Nc     *   G = z    +  89338769308307010628209689252365081230  do  
# z:=x  +166058404619877130087207301978416848213    = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 387 (Just (Tokens ('-' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (-111958783731892720719483717929457904541   *    159624005840282354509936308449179135171   <     x  -z   \8743  true)      then \nskip      else  \n\nif (5497579684565430595940286535389107005 -  (127532989243054034299577810774379733689 +   41202086741690628478966600973016155366) =  127682346989236321160774995861822732903   *   x\8744     (-26187107203300663383525618976736763765     +    z)   - g=   y)  then   \nz    :=   143932562492050553033412367337986214380     else  \n\n x:=    157745776923761521422429070537022884767; \nwhile false   \8743    Nc     *   G = z    +  89338769308307010628209689252365081230  do  \nz:=x  +166058404619877130087207301978416848213   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9163 736628c8702c
ok 9164 bc5a34913a5a
ok 9165 ae21437aecb0
ok 9166 46f8ee1d4b25
ok 9167 0ed621feadd3
ok 9168 e40293409cbc
ok 9169 c15d4d07c5f2
ok 9170 89a0c83549c2
ok 9171 52109e452e86
ok 9172 3fe316514525
ok 9173 1c6d07bc7aac
ok 9174 b77a61b5d901
ok 9175 ed8b1dd42428
ok 9176 7dddba366ea0
ok 9177 f5e6fb26c489
ok 9178 b8fc3eacf020
ok 9179 f28d70e646e4
ok 9180 259547c898a0
ok 9181 1fa6c3f122f7
ok 9182 d31c5aad6c34
ok 9183 cb421fa7f72d
ok 9184 466ddae54456
ok 9185 c7c984a28a8b
ok 9186 d24ea0584ac0
ok 9187 dabd9a757e00
ok 9188 22716a8e94e3
ok 9189 e38f339c5f04
ok 9190 089d27cc3e14
ok 9191 c6ed30b28884
ok 9192 5a0dbc3120e3
ok 9193 0e048c2ba616
ok 9194 c56f1dd7c2cb
ok 9195 0a05ec8f84fb
ok 9196 63954219e65f
ok 9197 38b517f43da8
ok 9198 f581777128d4
ok 9199 7aa4f7b2375f
ok 9200 0a826b8e752a
ok 9201 8b28d0e086af
ok 9202 003d8c571725
ok 9203 9214c386b847
ok 9204 a5fe57252071
ok 9205 5f9e4ac4e752
ok 9206 8a1db54910ed
ok 9207 ea95d76ab19c
ok 9208 6a87e726fe87
ok 9209 7226c1fddb4a
ok 9210 78b53731e275
ok 9211 16f8be9003e5
ok 9212 8b0070ac77ba
ok 9213 93eae350b00b
ok 9214 cfa9ec148cc8
ok 9215 1a6176a11879
ok 9216 8d3ad043bc48
ok 9217 882e987deeba
ok 9218 9108fe210cc6
ok 9219 d5a8ebb1c4c0
ok 9220 dcaabe4c1f6b
ok 9221 6f349064ea20
ok 9222 2c283732c5cd
ok 9223 64d200c6d314
ok 9224 75dbbeb7a4dc
ok 9225 117c5cbde011
ok 9226 f30384ac4e26
ok 9227 5ca6555b1687
ok 9228 d28429b6cc73
ok 9229 cc090e9bc185
ok 9230 43bc6e47ce57
ok 9231 206197ccfa8a
ok 9232 ccaeab1f5594
ok 9233 03097478191b
ok 9234 666cb497fc81
ok 9235 a62eda34c598
ok 9236 acbf5369592b
ok 9237 ee890c60516f
ok 9238 fdddff254fa7
ok 9239 ee27dece8726
ok 9240 a885637cdfc7
ok 9241 7c15d365e771
ok 9242 f7968d8eab23
ok 9243 ee49fcb9dcb1
ok 9244 12237f102655
ok 9245 80d767cfddd0
not ok 9246 c76b5053ed62
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen92.bats, line 514)
#   `z  := z  +  x    ' '{z → 0}'' failed
# if (y  +   z <    (y     + Y)    *  43122479393133876885722760222511639847∧     false)     then  if (false  ∨    y *129868088335095071512665932574979501633  =   -17781955338380641875714921992270779847     -     93891926666016542856239027328605718753)   then 
# 
#  z  :=x6    *  -158192206535490649800102423457663962015    else 
#    
# skip      else while x    =-50630415472010824862157158007188305464 ∨-147370890914470217038626858637980282119  *   -141977619208761475114156061735290703799   =    x * g    do skip;
#  if false    then   
# 
# skip     else 
# 
# 
#  z  := z  +  x     = {z → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 33 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (y  +   z <    (y     + Y)    *  43122479393133876885722760222511639847\8743     false)     then  if (false  \8744    y *129868088335095071512665932574979501633  =   -17781955338380641875714921992270779847     -     93891926666016542856239027328605718753)   then \n\n z  :=x6    *  -158192206535490649800102423457663962015    else \n   \nskip      else while x    =-50630415472010824862157158007188305464 \8744-147370890914470217038626858637980282119  *   -141977619208761475114156061735290703799   =    x * g    do skip;\n if false    then   \n\nskip     else \n\n\n z  := z  +  x    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9247 6ac55506b189
ok 9248 61518d523117
ok 9249 6e3f744088ea
ok 9250 8c9804e21f68
ok 9251 3931b97c7cad
ok 9252 8b4167309001
ok 9253 8541e49c05a2
ok 9254 94b49679a29e
ok 9255 06ea528876e4
ok 9256 0e14cea851ce
ok 9257 ffbdf2ec3789
not ok 9258 74ca7bae47e9
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen92.bats, line 645)
#   `x    := W --68342234127376815215555428476389544605 ' '{x → 68342234127376815215555428476389544605, y → 0}'' failed
# if (false    ∧-133134241759833071481238135207716829907+ 82515064968475871272811186666372734505 =(z     - NW)  *(63684641048628723614273190052707033455- -120272988948315431360187050835008714168))    then 
#  
# ku    :=  x  +z  else   
#  
# y    :=     x  +   z     ;  
# x    := W --68342234127376815215555428476389544605  = {x → 68342234127376815215555428476389544605, y → 0}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 110 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (false    \8743-133134241759833071481238135207716829907+ 82515064968475871272811186666372734505 =(z     - NW)  *(63684641048628723614273190052707033455- -120272988948315431360187050835008714168))    then \n \nku    :=  x  +z  else   \n \ny    :=     x  +   z     ;  \nx    := W --68342234127376815215555428476389544605 \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9259 7b61e140c0e4
ok 9260 0afb50eb95fc
ok 9261 c787e011c6cd
ok 9262 e815b865b77b
ok 9263 9bbf759dbbb3
ok 9264 2641b66ed2bb
ok 9265 ff9b90905cfd
ok 9266 d830c23167ff
ok 9267 8c08264afc48
ok 9268 7ddb324971d2
ok 9269 1147f440f384
ok 9270 ffc8fd9e2e94
ok 9271 a1071c5d8f24
ok 9272 c53e7c6e295a
ok 9273 1cd5c88116be
ok 9274 57b2169ff14a
ok 9275 8992e7d4e752
ok 9276 d45cafced1ba
ok 9277 7c285ee4efb2
ok 9278 475e2de80bb0
ok 9279 c278ada6a8ca
ok 9280 dfdd35f45229
ok 9281 f2701108d87c
ok 9282 43b43a34c25e
ok 9283 942859d71fd5
ok 9284 91e9f4763a4b
ok 9285 826410eeec59
ok 9286 25052687b4ea
ok 9287 b74f868e3870
ok 9288 244e46e79bdc
ok 9289 0ceefebf480c
ok 9290 d3a1e3d3adc9
ok 9291 2ef274d5728b
ok 9292 76a23aa7e26b
ok 9293 d5aa50fa9eb3
ok 9294 7fc686020a88
ok 9295 3a2349951c47
ok 9296 0bee6ef68db5
ok 9297 59068f9131e5
ok 9298 8768e8633689
ok 9299 b7897081430c
ok 9300 77a5fc1963ad
ok 9301 ae94a0db7007
ok 9302 86885825fad4
ok 9303 0376379c22cb
ok 9304 7b561cde03e6
ok 9305 0618b7cfe2da
ok 9306 07b934bc4c60
ok 9307 edb53093e958
ok 9308 5cb777851866
ok 9309 a411d628fc88
ok 9310 c2e1ffe06db5
ok 9311 fc1dfe55bea9
ok 9312 cee9893eb647
ok 9313 3388c6989512
ok 9314 a31c3670520b
ok 9315 ed0158a96970
ok 9316 3142640f2092
ok 9317 0c22ed642964
ok 9318 b70eb2aa44bd
ok 9319 baa1364f5c90
ok 9320 692583065bf1
ok 9321 63bb89cf642b
ok 9322 519873b97ae2
ok 9323 cbf8dbab579b
ok 9324 f138e5d4de79
ok 9325 3fb83a09b1e7
ok 9326 c9481c0ab62f
ok 9327 56d013fc3bf7
ok 9328 55073b477e1d
ok 9329 13c30a7b2cb2
ok 9330 fb3fb397f251
ok 9331 5501c7ee5262
ok 9332 834553052ea6
ok 9333 12ff3a6bb2d0
ok 9334 4a3768861387
ok 9335 415164e4bec7
ok 9336 1dcf1d54be1a
ok 9337 f1ff264e33df
ok 9338 77bcece17268
ok 9339 78d57ad976d6
ok 9340 a6414df6425a
ok 9341 6597f164906b
ok 9342 87ddcb84fce1
not ok 9343 9c90b0b0da3f
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen93.bats, line 412)
#   `skip' '{x → -23003428430812377129740242624817956465840705277660794586592867286854172410764}'' failed
# x  :=     146209523687394354410134341322467948802   *-157331942890363494438913549929815504582     ; 
# if (y     + P  <D5 +     24247884043133932722913632309954057491     ∨   z     * -96732284809546681458040804592397964570    <  63226008297808703950854890629338529029*    82718661344032647430999362964371010459)     then   skip    else 
# 
# 
# 
#  if (¬((x     + z)    *   z     =    -137335735092012105003119938737841793850     -     z))   then   
#  skip else    
# 
# skip = {x → -23003428430812377129740242624817956465840705277660794586592867286854172410764}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 370 (Just (Tokens ('=' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "x  :=     146209523687394354410134341322467948802   *-157331942890363494438913549929815504582     ; \nif (y     + P  <D5 +     24247884043133932722913632309954057491     \8744   z     * -96732284809546681458040804592397964570    <  63226008297808703950854890629338529029*    82718661344032647430999362964371010459)     then   skip    else \n\n\n\n if (\172((x     + z)    *   z     =    -137335735092012105003119938737841793850     -     z))   then   \n skip else    \n\nskip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9344 a21bf192c1ea
ok 9345 c7ab659b60f0
ok 9346 4f25d81c7d9b
ok 9347 08a08b7f1596
ok 9348 e0d1c705cbad
ok 9349 d914e0a60032
ok 9350 1987668b1f3e
ok 9351 d5891be8f55b
ok 9352 00d14197664f
ok 9353 f5f97d5de3c7
ok 9354 90b93790c8e4
ok 9355 18adcdcd3455
ok 9356 8d33a416dd0c
ok 9357 9d8892735e76
ok 9358 0d9de5cdc44e
ok 9359 cd64cad626e5
ok 9360 de0b7bc9dda4
ok 9361 5cb44c2791a6
ok 9362 517886573f61
ok 9363 4f4076ecf9e2
ok 9364 f4dc861610d5
ok 9365 e4e04004b4ed
ok 9366 5e1ce30475d3
ok 9367 15fedbf59a1b
ok 9368 d3a2eda9c777
ok 9369 aa3e9c77ce93
ok 9370 2b7d96113413
ok 9371 3517a5a23ab3
not ok 9372 f18bcfce2252
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen93.bats, line 699)
#   `if (¬(y-q7     =    -62660641526422755046282865065074490390 +     -52848566236163500097203861439248241238))    then  x:=  100443755604841457057765550911547002124 -     F else C3  :=    y-a' '{x → 100443755604841457057765550911547002124}'' failed
# if (¬(90667359336541306772458495924856506849   +  15457192133599740823341107776747749356     < (y-     z)  *    z))      then 
# 
#  
# x := xp +   z else 
# skip   ; 
# if (¬(y-q7     =    -62660641526422755046282865065074490390 +     -52848566236163500097203861439248241238))    then  x:=  100443755604841457057765550911547002124 -     F else C3  :=    y-a = {x → 100443755604841457057765550911547002124}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 107 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172(90667359336541306772458495924856506849   +  15457192133599740823341107776747749356     < (y-     z)  *    z))      then \n\n \nx := xp +   z else \nskip   ; \nif (\172(y-q7     =    -62660641526422755046282865065074490390 +     -52848566236163500097203861439248241238))    then  x:=  100443755604841457057765550911547002124 -     F else C3  :=    y-a\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9373 f2c27af3d7a2
ok 9374 90f1095a1f6f
ok 9375 7313813f9fdd
ok 9376 84f4602bcc3d
ok 9377 6ee1448199ef
ok 9378 aae50cec19a8
ok 9379 9854da7807f1
ok 9380 f1112a28cb87
ok 9381 61a2a19332fd
ok 9382 ca079ae29abb
ok 9383 54adb4c9168f
ok 9384 385a8a842c3a
ok 9385 173faa0c3121
ok 9386 873a93e50772
ok 9387 39482459ff29
ok 9388 97a3c2c78d46
ok 9389 8f9d99a67af8
ok 9390 1fb0e4ff9805
ok 9391 ebe768fad525
ok 9392 68d378b1be5f
ok 9393 3766ca867305
ok 9394 bb484545a4e0
ok 9395 b5c62aea8d61
ok 9396 884f317e6e0e
ok 9397 22f180311cc1
ok 9398 e8ac1c9c658c
ok 9399 68368fe1d1a2
ok 9400 3ca4c5235693
ok 9401 326496ae1bfa
ok 9402 3451410e1d50
ok 9403 fad4b6305f62
ok 9404 50563058351c
ok 9405 0c480146ee31
ok 9406 6d1c6bc21a58
ok 9407 aa39f3bbe4ce
ok 9408 bcb367a0956d
ok 9409 de2afc39e661
ok 9410 c0d1b4bd8346
ok 9411 3abbbee1a72d
ok 9412 c2c82de3af81
ok 9413 ba49e5c2a39e
ok 9414 8142271de3e2
ok 9415 eb2e171e0acf
ok 9416 a27ef002ab3b
ok 9417 57a4bfbd2cef
ok 9418 175040917c9e
ok 9419 8075fa5bb63a
ok 9420 8dc30ab2a2a8
ok 9421 a1f04937a541
ok 9422 3ed8bcaa8180
ok 9423 c974a90c5e68
ok 9424 551c0eae4760
ok 9425 afc4d56092f2
ok 9426 61cbde976132
ok 9427 5e7a428b318c
ok 9428 eda47caee0c0
ok 9429 3246fe87cafe
ok 9430 12a37fa3b16c
ok 9431 0d524569fca1
ok 9432 70f377959409
ok 9433 2ef9e48b64e5
ok 9434 8dc505d8cbae
ok 9435 fe9fe2a392db
ok 9436 3cdade4af2c3
ok 9437 ae1d59d83860
ok 9438 2cab380e7db7
ok 9439 d1228760cb87
ok 9440 9c326d9bf5a3
ok 9441 68dd85fd2946
ok 9442 1408f52a9af5
ok 9443 a6d2a029d7a3
ok 9444 f95a8fd147fc
ok 9445 807acfd5bb93
ok 9446 d70bc978f80c
ok 9447 cacd4875899a
ok 9448 98e5b1182bc9
ok 9449 61da3fdb68b4
ok 9450 5b00e1a323cc
ok 9451 b584da9bbda5
ok 9452 77875c1efaff
ok 9453 03495acccd07
ok 9454 8ccd160db07d
ok 9455 fb2f65b6444b
ok 9456 7fb87c4d618f
ok 9457 602cc6d713ec
ok 9458 f7df9c53fb5d
ok 9459 7e4c00806cc9
ok 9460 14987f093cc7
ok 9461 9642246e2a7d
ok 9462 d8ec8e1a4bc9
ok 9463 486b6506e781
ok 9464 475a393fb4f5
ok 9465 e64e7181bf72
ok 9466 9231c1dfd586
ok 9467 c2a7bc06ca59
ok 9468 552b692689b8
ok 9469 9c19955ee810
ok 9470 be2c34871117
ok 9471 13114d03c8cb
ok 9472 3197022a824d
ok 9473 c30d875447d7
ok 9474 e0567e79feac
ok 9475 a95a7db01c94
ok 9476 67f766f6b670
ok 9477 46543e219734
ok 9478 e5046e937e83
ok 9479 b541ea1e3858
ok 9480 b961754e2fd8
ok 9481 692f437ca97b
ok 9482 0ddef38eccbf
ok 9483 a733413780dc
ok 9484 2541458a7c18
ok 9485 68578dc14c6a
ok 9486 3162ee71353e
ok 9487 321d4dfb6cfb
ok 9488 90ddfbbc2409
ok 9489 6a67443eed48
ok 9490 aa823e3fe790
ok 9491 7a417a5a31d7
ok 9492 1a06e4260a64
ok 9493 279d0a8f6b20
ok 9494 fb9d93e62f7a
ok 9495 9ab7ad59118f
ok 9496 355ebc572b9e
ok 9497 77a5b7f4a7e3
ok 9498 4f523f3184c0
ok 9499 d45994e51cd7
ok 9500 14552b0d236d
ok 9501 b89ac3bfcf1d
ok 9502 6ae59f0d8483
ok 9503 ab9a18a34b2a
ok 9504 23d9abafaf01
ok 9505 452bc941e5ce
ok 9506 1fa19a3c1186
ok 9507 7d121a940d73
ok 9508 0e120bc47943
ok 9509 5a00d776c6b2
ok 9510 0e0b88adf147
ok 9511 d5d7ca9ed018
ok 9512 daf4fd168fd0
ok 9513 ababb38e6c42
ok 9514 48a51837540d
ok 9515 9a20ea667c07
ok 9516 3a9425b75e0d
ok 9517 90a2f3a1d09b
ok 9518 079a23bc7197
ok 9519 824e71acf462
ok 9520 846366f06e5f
ok 9521 587f56bc1b4d
ok 9522 7633eb09c62f
ok 9523 ab052eb02e62
ok 9524 634bf397c720
ok 9525 4322d5b7ae53
ok 9526 38b0fba3890c
ok 9527 c898b165d529
ok 9528 d7955d64fc0b
ok 9529 cb04f9e3063d
ok 9530 c27ea4da9731
ok 9531 2f3bd85e7e2a
ok 9532 d130eefe0578
ok 9533 8416688b33fd
ok 9534 662e00006a15
ok 9535 07acce2385de
ok 9536 8329ff75302c
ok 9537 49c55820ae26
ok 9538 51acc7536464
ok 9539 b944fc9cf838
ok 9540 c146e1e0a009
ok 9541 d1d366df9f68
ok 9542 4e9b1755f932
ok 9543 52f35ee86fea
ok 9544 201956b3f0b5
ok 9545 06cd7e5150f3
ok 9546 2ba9233156b3
ok 9547 7775d9008637
ok 9548 62b1c435b8f6
ok 9549 6b6b0c186b9e
ok 9550 5c3c70cce090
ok 9551 7cd56c202a9e
ok 9552 f92fbca937c8
ok 9553 b94ef1521a45
ok 9554 a5e72143dcc2
ok 9555 b86449d51375
ok 9556 1315c1a1f769
not ok 9557 520cd4dec10d
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen95.bats, line 616)
#   `z     :=  21528050727577770567347036521110821603  *  -67042437877973413677469307147914716773     ' '{}'' failed
# while -52084799062155002801883105223111093275 *     z  <l     -x   ∨   false    do 
#  
#  
# skip;while false  ∨    137664933552181882199905129498771557946     *     y     <    -75876172553842199404055410424136393600    +    x  do 
# 
#  if ((kg-  -117511227820272994553069647493929226796) -  -48950219993987410944361589889663466883  =    -82400559480915426282177076389504027370     *   117231667727342926822871085434891626508    ∨  false)  then  I:= z *x   else 
# z     :=  21528050727577770567347036521110821603  *  -67042437877973413677469307147914716773      = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 325 (Just (Tokens ('=' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while -52084799062155002801883105223111093275 *     z  <l     -x   \8744   false    do \n \n \nskip;while false  \8744    137664933552181882199905129498771557946     *     y     <    -75876172553842199404055410424136393600    +    x  do \n\n if ((kg-  -117511227820272994553069647493929226796) -  -48950219993987410944361589889663466883  =    -82400559480915426282177076389504027370     *   117231667727342926822871085434891626508    \8744  false)  then  I:= z *x   else \nz     :=  21528050727577770567347036521110821603  *  -67042437877973413677469307147914716773     \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9558 18d4ecc32b32
ok 9559 15a419554083
ok 9560 0ef204747f75
ok 9561 573bc81cf384
ok 9562 7ff11f1faf02
ok 9563 478ca4a74c1f
ok 9564 8ff97deb404a
ok 9565 dcd2f437f664
ok 9566 f062920c1579
ok 9567 2d16db1110ee
ok 9568 1adabb019310
ok 9569 caa35a310855
ok 9570 17a50f6b11b9
ok 9571 01c8450715f2
ok 9572 fb6de7b470c6
ok 9573 fc272a549b3e
ok 9574 69b923407e5e
ok 9575 2cc1a2105a06
ok 9576 d332bb969b02
ok 9577 c0368440f8f1
ok 9578 f54b4d417046
ok 9579 6aaa85e9dabb
ok 9580 7359fd2029e6
ok 9581 aa773bf99a79
ok 9582 79509f56576b
ok 9583 5e613765603e
ok 9584 64053a587637
ok 9585 647e0d3466a2
ok 9586 f0227bb93a05
ok 9587 bf46d245db7d
ok 9588 c281175aed6e
ok 9589 45b4e2626b14
ok 9590 d6785ed085c8
ok 9591 e5599fe8c576
ok 9592 30171e892e2f
ok 9593 8614c2e09b81
not ok 9594 2dd62ad8fe2e
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen95.bats, line 979)
#   `if (¬false)    then   skip  else    while false  ∨    z   +  -63080024564405014866330736578988146402  <   z    +  W2    do  skip    ' '{}'' failed
# if (y *     -103381369733144491564863662426105829239 <   -113787048164007991768720415324689292098     *     71713763261537363378454791094880165631∨    (165371600757895908013286105377307992873    -     37688153178932566262865976883300586202)  -   z <   124469573011812162480410791672435970772   - O)  then 
# skip     else skip   ;
# 
# 
# if (¬false)    then   skip  else    while false  ∨    z   +  -63080024564405014866330736578988146402  <   z    +  W2    do  skip     = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 242 (Just (Tokens ('-' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (y *     -103381369733144491564863662426105829239 <   -113787048164007991768720415324689292098     *     71713763261537363378454791094880165631\8744    (165371600757895908013286105377307992873    -     37688153178932566262865976883300586202)  -   z <   124469573011812162480410791672435970772   - O)  then \nskip     else skip   ;\n\n\nif (\172false)    then   skip  else    while false  \8744    z   +  -63080024564405014866330736578988146402  <   z    +  W2    do  skip    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9595 08d7516fb6c6
ok 9596 cc92644cb0a2
ok 9597 ac6ff8d91b98
ok 9598 81071c7ba08b
ok 9599 323f7f13dca1
ok 9600 aeaaac0aeff3
ok 9601 b26b9629a16a
ok 9602 1cf4b05d1afc
ok 9603 520c52560fc1
ok 9604 68025db4ed42
ok 9605 4dad8e58035f
ok 9606 a4161276f81c
ok 9607 d91ac763baea
ok 9608 8bb436f417b8
ok 9609 4d443be2e81d
ok 9610 cd3111530da5
ok 9611 f0196030412e
ok 9612 1ac1e9206c50
ok 9613 5b10b1308a30
ok 9614 27eebd64bc1f
ok 9615 53f4d55649fd
ok 9616 ae1ca8254620
ok 9617 04be9eb715e3
ok 9618 f82b20fefb17
ok 9619 0d9801b85508
ok 9620 e71c3f0826c6
ok 9621 8f9e21ebed44
ok 9622 80d26f7c5b21
ok 9623 fba5eea47462
ok 9624 685e50849fa9
ok 9625 7fa2fbe77db2
ok 9626 f54cf2dc1c96
ok 9627 9576e44b1bc4
ok 9628 909398007e77
ok 9629 e4de82c09248
ok 9630 ccf6b52f4431
ok 9631 d6dd72e1a6e7
ok 9632 be95eb8e87c9
ok 9633 f5ae916f8f07
ok 9634 da5754b33ddc
ok 9635 24be9cf32350
ok 9636 58dea09f8022
ok 9637 ad6ace421956
ok 9638 70c30b615cfc
ok 9639 958e762988b5
ok 9640 c46aae93b9ba
ok 9641 6c548a854f1b
not ok 9642 e456f30f9749
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen96.bats, line 394)
#   `skip else skip' '{}'' failed
# if (false ∧  (24172433700075919855269421610334364711+  bo) * z  < y     +     -82030214511406691818560457648473086297)     then 
# skip  else   while 127230071319009775432076477302889145213  *    160339710531609343212654330433091334230     <y     * z∧x-     y=     -61508069340251036895999787716969873524 -     -75822982668348701724964386557992590364     do    skip;
#  if (¬false) then 
#  if (¬(-68726912610489270804310603932200134632 +    112826520300287409638283644600062701427=    z     +     x))  then 
#  skip      else  
#   skip else skip = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 59 (Just (Tokens ('*' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (false \8743  (24172433700075919855269421610334364711+  bo) * z  < y     +     -82030214511406691818560457648473086297)     then \nskip  else   while 127230071319009775432076477302889145213  *    160339710531609343212654330433091334230     <y     * z\8743x-     y=     -61508069340251036895999787716969873524 -     -75822982668348701724964386557992590364     do    skip;\n if (\172false) then \n if (\172(-68726912610489270804310603932200134632 +    112826520300287409638283644600062701427=    z     +     x))  then \n skip      else  \n  skip else skip\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9643 dd4d91eee12d
ok 9644 42f40f4be812
ok 9645 ad664a4a1626
ok 9646 957b57c7fa6e
ok 9647 4990c3449ee8
ok 9648 82c5f84c5ec2
ok 9649 cb1244788af2
ok 9650 517d2eb28847
ok 9651 61361a3333d8
ok 9652 15cb89e96ee4
ok 9653 0ad5d03c62e8
ok 9654 9e137d8a5aa2
ok 9655 04e7e1f04768
ok 9656 bc5be8432652
ok 9657 9276c595ccfe
ok 9658 13b292346732
ok 9659 6b5eadf7d8b6
ok 9660 70dbf490cceb
ok 9661 503cc19b5b41
ok 9662 21d48d00eaee
ok 9663 ad44b8171ffd
ok 9664 7bab6e07da0a
ok 9665 a82905e29841
ok 9666 b5b641163177
ok 9667 ee0f4af02f8f
ok 9668 6ae1b5b588db
ok 9669 4e49ded5498a
ok 9670 a8bfb5f43d35
ok 9671 429a421b06d1
ok 9672 145ed8528f6e
ok 9673 54eacfb24273
ok 9674 d2133ee8ab58
ok 9675 6a2f597b568d
ok 9676 6175784ca456
ok 9677 bb963fd0e013
ok 9678 006a3e55be72
ok 9679 a41a33b164ab
ok 9680 f3f6a0ea294c
ok 9681 eb836bb4e3e1
ok 9682 9791f5fbc7dd
ok 9683 b1951604e081
ok 9684 ca144b72168a
ok 9685 eaecb11cdfbf
ok 9686 be6e6366b30c
ok 9687 4672abe35b4c
ok 9688 8c02f8415fce
ok 9689 318cc58b7d61
ok 9690 ab7e5d5a36f0
ok 9691 8ae63a99c2a8
ok 9692 245616429ef2
ok 9693 22073afbd65e
ok 9694 56488978955e
ok 9695 79edc9e78df6
ok 9696 4f542d64ee30
ok 9697 f35e53998fc2
ok 9698 811f722c99c7
ok 9699 212ea9c8ebd5
ok 9700 654a61163cf1
ok 9701 18e816250c3e
ok 9702 eda3fc34bf59
ok 9703 f654afeeb3a7
ok 9704 d6bd4279084c
ok 9705 7f48eb89f828
ok 9706 7cfc7d7b2bae
ok 9707 4c952d63587b
ok 9708 80ce0251e5e3
ok 9709 6f8699d50b83
ok 9710 c70bb170b645
ok 9711 58aa668b4fef
ok 9712 3349e34e3d69
ok 9713 e6ae7ac0a6bf
ok 9714 aed168a925be
ok 9715 a050dc1687f7
ok 9716 20a8c7593d35
ok 9717 2f5aac03a978
ok 9718 cf215b980c75
ok 9719 e4f1640914cb
ok 9720 c64b5c3d3315
ok 9721 b7094d9876f6
ok 9722 7130b98560bb
ok 9723 383fad524acd
ok 9724 8f914a40d32f
ok 9725 962c3204685b
ok 9726 14d6685e2296
ok 9727 17bca4ca30dc
ok 9728 c36c05c53cb9
ok 9729 d9e6bfea0f1a
ok 9730 75686c63338f
ok 9731 aa4a61081f84
ok 9732 2083ca39a638
ok 9733 526371b527a0
ok 9734 c0255e7fe15b
ok 9735 3392febfbcfd
ok 9736 22a86e8af2ea
ok 9737 adc3b3dd948e
ok 9738 78eb1148cd11
ok 9739 befcbbd4caa3
ok 9740 baf701feb293
ok 9741 840d23027f1c
ok 9742 3a7082a2abbc
ok 9743 bd7592e2d622
ok 9744 6b0b2d3fcbcf
not ok 9745 588748e49daf
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen97.bats, line 459)
#   `jo  :=   x     + 104845139836664658455662438435468608808  else  x   := 3967785267521413117695541783235231469+-122083658212259457922441281088722413320    ' '{x → -118115872944738044804745739305487181851, y → 107811939327894543408029736034627473788}'' failed
# if (¬(x *128246923375145643533655408771158902394 <-65256639271014166165003643511828371362 +    y))      then 
#  
# 
# y   :=     z   +     107811939327894543408029736034627473788     else 
#    
# if (true ∧ 65974278037788865322026513968004519814  *   x<   67473331012038221595682873136950655784)      then   
# 
# skip   else  
# 
#  
# y:=  x    *  y;if (-94683880751240032229040681478999779221 +-73819759677711149374318813209587723079=y -y ∧ (-105498935134022195855027465123875257735  -x)     *   144728997789306044593659688544977501399   <  22111063204016756993701133340406032007    +  y)    then  
# jo  :=   x     + 104845139836664658455662438435468608808  else  x   := 3967785267521413117695541783235231469+-122083658212259457922441281088722413320     = {x → -118115872944738044804745739305487181851, y → 107811939327894543408029736034627473788}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 477 (Just (Tokens ('*' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (\172(x *128246923375145643533655408771158902394 <-65256639271014166165003643511828371362 +    y))      then \n \n\ny   :=     z   +     107811939327894543408029736034627473788     else \n   \nif (true \8743 65974278037788865322026513968004519814  *   x<   67473331012038221595682873136950655784)      then   \n\nskip   else  \n\n \ny:=  x    *  y;if (-94683880751240032229040681478999779221 +-73819759677711149374318813209587723079=y -y \8743 (-105498935134022195855027465123875257735  -x)     *   144728997789306044593659688544977501399   <  22111063204016756993701133340406032007    +  y)    then  \njo  :=   x     + 104845139836664658455662438435468608808  else  x   := 3967785267521413117695541783235231469+-122083658212259457922441281088722413320    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9746 85499f5356b3
ok 9747 f0a2737b9f49
ok 9748 fe3af7a2c7da
ok 9749 eea40acd8cd8
ok 9750 57bd7a08815a
ok 9751 918b473cc394
ok 9752 402f83c2a04b
ok 9753 607887f15d92
ok 9754 d039653e730e
ok 9755 5dc442ed2018
ok 9756 174494bff65b
ok 9757 ffea65b3528a
ok 9758 ab873635a14e
ok 9759 f7940c024416
ok 9760 808611b5c94e
ok 9761 2a400752000c
ok 9762 ab7537e8da1c
ok 9763 c01c5de47b16
ok 9764 8a83f2029504
ok 9765 677a4e9ff156
ok 9766 055c1703b6e3
ok 9767 7f03a0bba208
ok 9768 dfd95fdd59b9
ok 9769 829c3860da02
ok 9770 852d41c6678a
ok 9771 5344e5717f34
ok 9772 81530756daf6
ok 9773 0b883c4843af
ok 9774 b17352ce5cce
ok 9775 cd29130e8bc2
ok 9776 aeb3a090f892
ok 9777 3c4ea4b96ef5
ok 9778 070a59c6f0fc
ok 9779 5416f6fcdb68
ok 9780 2162fb0ca39f
ok 9781 9010687358cf
ok 9782 b970737206c8
ok 9783 0bcd4d225ed9
ok 9784 1d7d2383f2ad
ok 9785 c393ac7866e1
ok 9786 8ef39922b2bc
ok 9787 e56a750aa045
ok 9788 ae3a6a5a954d
ok 9789 e2f5a7a15287
ok 9790 c1f44aa9e590
ok 9791 0c7f645fc087
ok 9792 ffd65ce74115
ok 9793 1931947e1ec7
ok 9794 3abfb16f8f32
ok 9795 bc4ac3c95854
not ok 9796 f91b49ab67be
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen97.bats, line 1026)
#   `y:=     x    +   y' '{x → -3121791700708155813422541113315894811}'' failed
# if (true     ∧ 3124098184294376074412259377590440669     -    i     <     -83424547633178356652865961237777938222 - z) then 
# if (false∨-84401071755372104744349953025828402353   +     -157752010956627964685827932278326742649     = x     +  -132607929997122615599881526288672807901) then 
# skip   else  
# 
# J  :=  x     -  112626187251162156825725412486933549339    else    
#  if (z   +    f=  J   + -29940933089926328041722488286773674240  ∨ (A   -x)    * x=    81312734957000641333405609419275765721 +     x)  then 
# 
# 
# 
# 
# skip    else  
#  
# x    :=    -3121791700708155813422541113315894811    +y ;
#  
# if (-6196001544803081778447714859207223661   *   z =   x   *     z  ∨  true)  then skip     else  
#    y:=     x    +   y = {x → -3121791700708155813422541113315894811}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 449 (Just (Tokens ('*' :| " "))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (true     \8743 3124098184294376074412259377590440669     -    i     <     -83424547633178356652865961237777938222 - z) then \nif (false\8744-84401071755372104744349953025828402353   +     -157752010956627964685827932278326742649     = x     +  -132607929997122615599881526288672807901) then \nskip   else  \n\nJ  :=  x     -  112626187251162156825725412486933549339    else    \n if (z   +    f=  J   + -29940933089926328041722488286773674240  \8744 (A   -x)    * x=    81312734957000641333405609419275765721 +     x)  then \n\n\n\n\nskip    else  \n \nx    :=    -3121791700708155813422541113315894811    +y ;\n \nif (-6196001544803081778447714859207223661   *   z =   x   *     z  \8744  true)  then skip     else  \n   y:=     x    +   y\n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9797 49a65accaa08
ok 9798 d1a9ed4cd8c3
ok 9799 b085216ab218
ok 9800 81ba0c03032c
ok 9801 409a839c90be
ok 9802 0f486be8d661
ok 9803 a4220957fa60
ok 9804 69a9c70a32ab
ok 9805 2195138dddaf
ok 9806 5c5d8de71660
ok 9807 14ab17d76138
ok 9808 4d9c33336325
ok 9809 6bbbcf8ebec6
ok 9810 6c1fd91b3e54
ok 9811 3bfadb83d1ad
ok 9812 82d2fa507077
ok 9813 5c0479c6e490
ok 9814 e935865d8618
ok 9815 7624629677f8
ok 9816 7e3da12e4893
ok 9817 ae3c8b9004ed
ok 9818 94c848eb0815
ok 9819 ed2f5ff545d1
ok 9820 88d96312325b
ok 9821 09eaef8389e9
ok 9822 2263af719e50
ok 9823 4576cbb45193
ok 9824 9fed2ecf18ca
ok 9825 79bc091dc916
ok 9826 1a2291d403ee
ok 9827 3f37efd2c29a
ok 9828 d7c4c9313cef
ok 9829 b0a40711d116
ok 9830 57557b433978
ok 9831 3a7bd20a54eb
not ok 9832 97275f767095
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen98.bats, line 313)
#   `skip   ' '{}'' failed
# if (y    *x=   xT    +     136480432349705946848206449017834097642 ∧    -115267526222852483086654316195823536164     +y < he     - kP)      then   skip   else  
#  
# 
# if (¬(-39770510069077983215140017823776966176    *     s    =(-140392018146301637839944596451063897467 -    -98798646784428119783978495635409147835) * 61090184574353164640577788399497375583))  then if (¬(-16648835609426988313691763062019895639*  z<   y     *   -90380749511205621378701333914198301206)) then   skip else skip    else  
# x    :=     O -141048995699003043710173686850242939839  ;   while false     ∨     false    do 
# 
# 
# 
# skip    = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 313 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (y    *x=   xT    +     136480432349705946848206449017834097642 \8743    -115267526222852483086654316195823536164     +y < he     - kP)      then   skip   else  \n \n\nif (\172(-39770510069077983215140017823776966176    *     s    =(-140392018146301637839944596451063897467 -    -98798646784428119783978495635409147835) * 61090184574353164640577788399497375583))  then if (\172(-16648835609426988313691763062019895639*  z<   y     *   -90380749511205621378701333914198301206)) then   skip else skip    else  \nx    :=     O -141048995699003043710173686850242939839  ;   while false     \8744     false    do \n\n\n\nskip   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9833 c3991cefd10a
ok 9834 fbf7a56ebcf0
ok 9835 3d35178dd167
ok 9836 781c7665b48d
ok 9837 6308ed220bf9
ok 9838 66157f352508
ok 9839 cba70e58895b
ok 9840 cacd3d97c504
ok 9841 dfd8dde46389
ok 9842 742ca4a504d0
ok 9843 f79976ae110f
ok 9844 50cef0dcbb88
ok 9845 795a8b17b0b2
ok 9846 815c59fa5a00
ok 9847 dbccec512464
ok 9848 010ce1a51936
ok 9849 b5a3fc4573f8
ok 9850 ab27fb0adfc1
ok 9851 795168cba83c
ok 9852 cc4fc6799e4e
ok 9853 a9ad863aa993
ok 9854 30f1f5f25710
ok 9855 7ba88bbaf2d8
ok 9856 bbd8280ecf4e
ok 9857 03684df8271a
ok 9858 6c3ecdaa537e
ok 9859 1f7d53034f52
ok 9860 ebedbc1c18f8
ok 9861 73b91b15ff85
ok 9862 9e312ba4cf78
ok 9863 ca390e6da3c3
ok 9864 787e6d2b15d1
ok 9865 7e22b33bdbcc
ok 9866 9f53eeb6e08e
ok 9867 5a3f45811d08
ok 9868 c62aeb658d68
ok 9869 230df0650a24
ok 9870 b9f3637cfeee
ok 9871 f55caf7fec41
ok 9872 820ab12538ee
ok 9873 fa7b197f7cde
ok 9874 23641199c098
ok 9875 96fc895727af
ok 9876 6b00308cae1e
ok 9877 8032bb89b582
ok 9878 ace068da7482
ok 9879 5789c81779b8
ok 9880 f84fc900cb60
ok 9881 458085d2939c
ok 9882 8f0a7a324d66
ok 9883 add2c946ea14
ok 9884 bf743c0b7c3a
ok 9885 cd2983455796
ok 9886 16c864824005
ok 9887 91e9f4763a4b
ok 9888 edc1a59c3986
ok 9889 d9408be20625
ok 9890 4487871826eb
ok 9891 1a55828a469f
ok 9892 f6ea7cf329ff
ok 9893 ba0a9e73804c
ok 9894 b6369e88310b
ok 9895 11268c360c7e
ok 9896 f2be3cbac7db
ok 9897 60fb3fb00fa2
ok 9898 2c8d1ac83438
ok 9899 9b051ef79191
ok 9900 315e6c2fc9ad
ok 9901 93bddf480f5a
ok 9902 dcefed07e42b
ok 9903 e37be20267cc
ok 9904 ab65f8debc61
not ok 9905 5396ffa9f5d1
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen99.bats, line 55)
#   `skip    else  skip   ' '{y → -257363029060339873368321101971100067091}'' failed
# if (-149095973097889264319910989834594149374   -  FV=  y     *   21921616003288884193662180615114661229∧ false)     then 
# while true∧    x   +y    <     50876750260446158867429106125021460405 *    -120943656497463684839002994348840859185      do y    :=    u4  +   -87900188517310828616748722541133856590   else 
# 
#  y:=-94931272574460158576318499119041689606+  -162431756485879714792002602852058377485   ; 
# if (true ∧ y -  b8 = l  - 62682118477638042860166763760726459332)    then 
# 
# skip else if (¬((-162566616320907615242105038457379456666  -Z3) *   150875589427449608606314186685459391744  =     e - y))  then 
#   skip    else  skip    = {y → -257363029060339873368321101971100067091}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 591 (Just (Tokens ('=' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "if (-149095973097889264319910989834594149374   -  FV=  y     *   21921616003288884193662180615114661229\8743 false)     then \nwhile true\8743    x   +y    <     50876750260446158867429106125021460405 *    -120943656497463684839002994348840859185      do y    :=    u4  +   -87900188517310828616748722541133856590   else \n\n y:=-94931272574460158576318499119041689606+  -162431756485879714792002602852058377485   ; \nif (true \8743 y -  b8 = l  - 62682118477638042860166763760726459332)    then \n\nskip else if (\172((-162566616320907615242105038457379456666  -Z3) *   150875589427449608606314186685459391744  =     e - y))  then \n  skip    else  skip   \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9906 9247dde20be8
ok 9907 113479544243
ok 9908 7507ddcd5f79
ok 9909 1fac3a14f0a7
ok 9910 3df376fe3137
ok 9911 c7bdda977472
ok 9912 757593257d91
ok 9913 f523493af1ed
ok 9914 8012053bc317
ok 9915 20a61b828c5b
ok 9916 09cfabcb5f26
ok 9917 306e1e054ba1
ok 9918 0604ea53cd17
ok 9919 e60fb310410d
ok 9920 b72524a78366
ok 9921 d1f2575063f4
ok 9922 ad8f27d45eba
ok 9923 c1c9fbd89035
ok 9924 1943e26f1d8c
ok 9925 80c3c570efc1
ok 9926 158e79d9723c
ok 9927 402025660bb7
ok 9928 f35b5306f2f7
ok 9929 838f972d7cd9
ok 9930 8225b7a6908b
ok 9931 fdf5c0ce9d58
ok 9932 76bceac1b125
ok 9933 916efa36aaa2
ok 9934 7ea53b2e5f5a
ok 9935 acfc3a223146
ok 9936 fc8be932b4a7
ok 9937 4b61e51c91c5
ok 9938 effea611a2d0
ok 9939 fb0a03348a14
ok 9940 a67467fe57c8
ok 9941 3e5bd6d6497a
ok 9942 525bc4ef0a44
ok 9943 49f568cec2ea
ok 9944 15020fca8639
ok 9945 42234f026785
ok 9946 0f6ae48d5e41
ok 9947 55101e2d8eda
ok 9948 62564e10c7b3
ok 9949 870e9b49b6be
ok 9950 ee19dd1c7dcc
ok 9951 89a122329eae
ok 9952 bd37625431e3
ok 9953 e1986f98f328
ok 9954 4e67aaf036c7
ok 9955 50f48d92e41f
ok 9956 0e898a3169a6
ok 9957 eb8a767dceb2
ok 9958 b555c8d1c743
ok 9959 2bec67e75c13
ok 9960 39705fd3783d
ok 9961 c0b9f1975461
ok 9962 ee0d40f30b85
not ok 9963 8f46f9241172
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen99.bats, line 661)
#   `skip   else skip    ' '{}'' failed
# while 16958630186457581297530653032929603935    -   -46981790622122491627273404558495710706   < ER   -     111676346094899870907847617485156155807  ∨  y   + h=    44171000290706264224265631727133403862 do 
#  T   :=    x     +z   ;if (-7511198092047371132208556407323728704+    z  <    z   -    y    ∧     ¬(T    -x =     (59333072600432830608276795368840332495 +  z)     *W))     then    if (false∨  true)   then 
#  
#  
# skip else   
#  
# skip   else skip     = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 370 (Just (Tokens ('*' :| ""))) (fromList [Label ('e' :| "xpression")]) :| [], bundlePosState = PosState {pstateInput = "while 16958630186457581297530653032929603935    -   -46981790622122491627273404558495710706   < ER   -     111676346094899870907847617485156155807  \8744  y   + h=    44171000290706264224265631727133403862 do \n T   :=    x     +z   ;if (-7511198092047371132208556407323728704+    z  <    z   -    y    \8743     \172(T    -x =     (59333072600432830608276795368840332495 +  z)     *W))     then    if (false\8744  true)   then \n \n \nskip else   \n \nskip   else skip    \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9964 731bc8dea76a
ok 9965 08dd5639d1e3
ok 9966 929c8410883e
ok 9967 52196438f34b
ok 9968 1e0f9a858410
ok 9969 4ae30084822a
ok 9970 043cc9ef7741
ok 9971 1858761832e4
ok 9972 955cd8cca7ef
ok 9973 6334e64b7478
ok 9974 a0e5dfffecc5
ok 9975 bc12879c0071
ok 9976 bc02e4b7c5be
ok 9977 7d4774e43025
ok 9978 895830e5f239
ok 9979 e9dbdaff0ca6
not ok 9980 ac8b674fb8c8
# (from function `check' in file tests/generated/../harness.bash, line 6,
#  in test file tests/generated/gen99.bats, line 851)
#   `skip ' '{}'' failed
# while true ∧     false      do   ve   :=  x -   x     ;
# while y  =   -65301012901773842199432625242376192676   ∨    (y + x)-  -125767528521959780362961807639887912884     <  70941836009061803671159859108735132636    do 
# 
#  
# 
# if (¬true) then   S  :=   -69777318530633778036359502358686487330  -   -28155263133971660573808318485684266430 else  
#  skip  = {}, your code outputs ParseErrorBundle {bundleErrors = TrivialError 123 (Just (Tokens ('-' :| " "))) (fromList [Tokens ('\172' :| ""),Tokens ('\172' :| "\172"),Label ('b' :| "ool expression")]) :| [], bundlePosState = PosState {pstateInput = "while true \8743     false      do   ve   :=  x -   x     ;\nwhile y  =   -65301012901773842199432625242376192676   \8744    (y + x)-  -125767528521959780362961807639887912884     <  70941836009061803671159859108735132636    do \n\n \n\nif (\172true) then   S  :=   -69777318530633778036359502358686487330  -   -28155263133971660573808318485684266430 else  \n skip \n", pstateOffset = 0, pstateSourcePos = SourcePos {sourceName = "", sourceLine = Pos 1, sourceColumn = Pos 1}, pstateTabWidth = Pos 8, pstateLinePrefix = ""}}
ok 9981 954beb2e44a0
ok 9982 194ff96d1e02
ok 9983 ebcbfd2ff902
ok 9984 05084f5818d1
ok 9985 82c327031fce
ok 9986 b7a58aa5c69e
ok 9987 6eecbed4764e
ok 9988 1847152b0ea1
ok 9989 578e8930c01e
ok 9990 fe5dcb8997ee
ok 9991 48762931f297
ok 9992 8a731f0cbd5a
ok 9993 714c5af10a01
ok 9994 c13b8e1bce66
ok 9995 a5896c74ad42
ok 9996 eca9d9457fba
ok 9997 49b068254e62
ok 9998 a97a75be6ff1
ok 9999 86654087c10c
ok 10000 c80e93098492
ok 10001 760091b581ff
